// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    /// <summary>
    /// ## # Application OAuth Scope Resource
    /// 
    /// The Application OAuth Scope resource allows you to define the scopes that an application can request when using OAuth.
    /// 
    /// [Application OAuth Scope API](https://fusionauth.io/docs/apis/scopes)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fusionauth = theogravity.Fusionauth;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var @this = new Fusionauth.FusionAuthApplicationOAuthScope("this", new()
    ///     {
    ///         ApplicationId = fusionauth_application.This.Id,
    ///         Data = 
    ///         {
    ///             { "addedBy", "Tom" },
    ///             { "addedOn", "2025-02-05" },
    ///         },
    ///         DefaultConsentDetail = "This will provide the requesting application read-only access to your data",
    ///         DefaultConsentMessage = "View your data",
    ///         Description = "Provides an application read-only access to a user's data",
    ///         Required = true,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [Obsolete(@"fusionauth.index/applicationoauthscope.ApplicationOauthScope has been deprecated in favor of fusionauth.index/fusionauthapplicationoauthscope.FusionAuthApplicationOAuthScope")]
    [FusionauthResourceType("fusionauth:index/applicationOauthScope:ApplicationOauthScope")]
    public partial class ApplicationOauthScope : global::Pulumi.CustomResource
    {
        /// <summary>
        /// ID of the application that this role is for.
        /// </summary>
        [Output("applicationId")]
        public Output<string> ApplicationId { get; private set; } = null!;

        /// <summary>
        /// An object that can hold any information about the OAuth Scope that should be persisted.
        /// </summary>
        [Output("data")]
        public Output<ImmutableDictionary<string, string>?> Data { get; private set; } = null!;

        /// <summary>
        /// "The default detail to display on the OAuth consent screen if one cannot be found in the theme.
        /// </summary>
        [Output("defaultConsentDetail")]
        public Output<string?> DefaultConsentDetail { get; private set; } = null!;

        /// <summary>
        /// The default message to display on the OAuth consent screen if one cannot be found in the theme.
        /// </summary>
        [Output("defaultConsentMessage")]
        public Output<string?> DefaultConsentMessage { get; private set; } = null!;

        /// <summary>
        /// A description of the OAuth Scope. This is used for display purposes only.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the Role.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Determines if the OAuth Scope is required when requested in an OAuth workflow.
        /// </summary>
        [Output("required")]
        public Output<bool?> Required { get; private set; } = null!;

        /// <summary>
        /// The Id to use for the new OAuth Scope. If not specified a secure random UUID will be generated.
        /// </summary>
        [Output("scopeId")]
        public Output<string> ScopeId { get; private set; } = null!;


        /// <summary>
        /// Create a ApplicationOauthScope resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ApplicationOauthScope(string name, ApplicationOauthScopeArgs args, CustomResourceOptions? options = null)
            : base("fusionauth:index/applicationOauthScope:ApplicationOauthScope", name, args ?? new ApplicationOauthScopeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ApplicationOauthScope(string name, Input<string> id, ApplicationOauthScopeState? state = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/applicationOauthScope:ApplicationOauthScope", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/theogravity/pulumi-fusionauth/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ApplicationOauthScope resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ApplicationOauthScope Get(string name, Input<string> id, ApplicationOauthScopeState? state = null, CustomResourceOptions? options = null)
        {
            return new ApplicationOauthScope(name, id, state, options);
        }
    }

    public sealed class ApplicationOauthScopeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the application that this role is for.
        /// </summary>
        [Input("applicationId", required: true)]
        public Input<string> ApplicationId { get; set; } = null!;

        [Input("data")]
        private InputMap<string>? _data;

        /// <summary>
        /// An object that can hold any information about the OAuth Scope that should be persisted.
        /// </summary>
        public InputMap<string> Data
        {
            get => _data ?? (_data = new InputMap<string>());
            set => _data = value;
        }

        /// <summary>
        /// "The default detail to display on the OAuth consent screen if one cannot be found in the theme.
        /// </summary>
        [Input("defaultConsentDetail")]
        public Input<string>? DefaultConsentDetail { get; set; }

        /// <summary>
        /// The default message to display on the OAuth consent screen if one cannot be found in the theme.
        /// </summary>
        [Input("defaultConsentMessage")]
        public Input<string>? DefaultConsentMessage { get; set; }

        /// <summary>
        /// A description of the OAuth Scope. This is used for display purposes only.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Determines if the OAuth Scope is required when requested in an OAuth workflow.
        /// </summary>
        [Input("required")]
        public Input<bool>? Required { get; set; }

        /// <summary>
        /// The Id to use for the new OAuth Scope. If not specified a secure random UUID will be generated.
        /// </summary>
        [Input("scopeId")]
        public Input<string>? ScopeId { get; set; }

        public ApplicationOauthScopeArgs()
        {
        }
        public static new ApplicationOauthScopeArgs Empty => new ApplicationOauthScopeArgs();
    }

    public sealed class ApplicationOauthScopeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ID of the application that this role is for.
        /// </summary>
        [Input("applicationId")]
        public Input<string>? ApplicationId { get; set; }

        [Input("data")]
        private InputMap<string>? _data;

        /// <summary>
        /// An object that can hold any information about the OAuth Scope that should be persisted.
        /// </summary>
        public InputMap<string> Data
        {
            get => _data ?? (_data = new InputMap<string>());
            set => _data = value;
        }

        /// <summary>
        /// "The default detail to display on the OAuth consent screen if one cannot be found in the theme.
        /// </summary>
        [Input("defaultConsentDetail")]
        public Input<string>? DefaultConsentDetail { get; set; }

        /// <summary>
        /// The default message to display on the OAuth consent screen if one cannot be found in the theme.
        /// </summary>
        [Input("defaultConsentMessage")]
        public Input<string>? DefaultConsentMessage { get; set; }

        /// <summary>
        /// A description of the OAuth Scope. This is used for display purposes only.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the Role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Determines if the OAuth Scope is required when requested in an OAuth workflow.
        /// </summary>
        [Input("required")]
        public Input<bool>? Required { get; set; }

        /// <summary>
        /// The Id to use for the new OAuth Scope. If not specified a secure random UUID will be generated.
        /// </summary>
        [Input("scopeId")]
        public Input<string>? ScopeId { get; set; }

        public ApplicationOauthScopeState()
        {
        }
        public static new ApplicationOauthScopeState Empty => new ApplicationOauthScopeState();
    }
}
