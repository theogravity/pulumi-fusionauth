// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth.Inputs
{

    public sealed class FusionAuthTenantEmailConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("additionalHeaders")]
        private InputMap<object>? _additionalHeaders;

        /// <summary>
        /// The additional SMTP headers to be added to each outgoing email. Each SMTP header consists of a name and a value.
        /// </summary>
        public InputMap<object> AdditionalHeaders
        {
            get => _additionalHeaders ?? (_additionalHeaders = new InputMap<object>());
            set => _additionalHeaders = value;
        }

        /// <summary>
        /// The default email address that emails will be sent from when a from address is not provided on an individual email template. This is the address part email address (i.e. Jared Dunn &lt;jared@piedpiper.com&gt;).
        /// </summary>
        [Input("defaultFromEmail")]
        public Input<string>? DefaultFromEmail { get; set; }

        /// <summary>
        /// The default From Name used in sending emails when a from name is not provided on an individual email template. This is the display name part of the email address ( i.e. Jared Dunn &lt;jared@piedpiper.com&gt;).
        /// </summary>
        [Input("defaultFromName")]
        public Input<string>? DefaultFromName { get; set; }

        /// <summary>
        /// The Id of the Email Template that is used when a user is sent a forgot password email.
        /// </summary>
        [Input("emailUpdateEmailTemplateId")]
        public Input<string>? EmailUpdateEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to verify user emails.
        /// </summary>
        [Input("emailVerifiedEmailTemplateId")]
        public Input<string>? EmailVerifiedEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template that is used when a user is sent a forgot password email.
        /// </summary>
        [Input("forgotPasswordEmailTemplateId")]
        public Input<string>? ForgotPasswordEmailTemplateId { get; set; }

        /// <summary>
        /// The host name of the SMTP server that FusionAuth will use.
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// When set to true, this allows email to be verified as a result of completing a similar email based workflow such as change password. When seto false, the user must explicitly complete the email verification workflow even if the user has already completed a similar email workflow such as change password.
        /// </summary>
        [Input("implicitEmailVerificationAllowed")]
        public Input<bool>? ImplicitEmailVerificationAllowed { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when another user attempts to create an account with their login Id.
        /// </summary>
        [Input("loginIdInUseOnCreateEmailTemplateId")]
        public Input<string>? LoginIdInUseOnCreateEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when another user attempts to create an account with their login Id.
        /// </summary>
        [Input("loginIdInUseOnUpdateEmailTemplateId")]
        public Input<string>? LoginIdInUseOnUpdateEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when they log in on a new device.
        /// </summary>
        [Input("loginNewDeviceEmailTemplateId")]
        public Input<string>? LoginNewDeviceEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when a suspicious login occurs.
        /// </summary>
        [Input("loginSuspiciousEmailTemplateId")]
        public Input<string>? LoginSuspiciousEmailTemplateId { get; set; }

        [Input("password")]
        private Input<string>? _password;

        /// <summary>
        /// An optional password FusionAuth will use to authenticate with the SMTP server.
        /// </summary>
        public Input<string>? Password
        {
            get => _password;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _password = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when they have completed a 'forgot password' workflow and their password habeen reset.
        /// </summary>
        [Input("passwordResetSuccessEmailTemplateId")]
        public Input<string>? PasswordResetSuccessEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when they have completed a 'forgot password' workflow and their password has been rese
        /// </summary>
        [Input("passwordUpdateEmailTemplateId")]
        public Input<string>? PasswordUpdateEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Passwordless Email Template.
        /// </summary>
        [Input("passwordlessEmailTemplateId")]
        public Input<string>? PasswordlessEmailTemplateId { get; set; }

        /// <summary>
        /// The port of the SMTP server that FusionAuth will use.
        /// </summary>
        [Input("port", required: true)]
        public Input<int> Port { get; set; } = null!;

        [Input("properties")]
        private Input<string>? _properties;

        /// <summary>
        /// Additional Email Configuration in a properties file formatted String.
        /// </summary>
        public Input<string>? Properties
        {
            get => _properties;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _properties = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The type of security protocol FusionAuth will use when connecting to the SMTP server.
        /// </summary>
        [Input("security")]
        public Input<string>? Security { get; set; }

        /// <summary>
        /// The Id of the Email Template that is used when a user had their account created for them and they must set their password manually and they are sent an email to set their password.
        /// </summary>
        [Input("setPasswordEmailTemplateId")]
        public Input<string>? SetPasswordEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when a MFA method has been added to their account.
        /// </summary>
        [Input("twoFactorMethodAddEmailTemplateId")]
        public Input<string>? TwoFactorMethodAddEmailTemplateId { get; set; }

        /// <summary>
        /// The Id of the Email Template used to send emails to users when a MFA method has been removed from their account.
        /// </summary>
        [Input("twoFactorMethodRemoveEmailTemplateId")]
        public Input<string>? TwoFactorMethodRemoveEmailTemplateId { get; set; }

        [Input("unverified")]
        public Input<Inputs.FusionAuthTenantEmailConfigurationUnverifiedGetArgs>? Unverified { get; set; }

        /// <summary>
        /// An optional username FusionAuth will to authenticate with the SMTP server.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        /// <summary>
        /// The Id of the Email Template that is used to send the verification emails to users. These emails are used to verify that a user’s email address ivalid. If either the verifyEmail or verifyEmailWhenChanged fields are true this field is required.
        /// </summary>
        [Input("verificationEmailTemplateId")]
        public Input<string>? VerificationEmailTemplateId { get; set; }

        /// <summary>
        /// The process by which the user will verify their email address. Possible values are `ClickableLink` or `FormField`.
        /// </summary>
        [Input("verificationStrategy")]
        public Input<string>? VerificationStrategy { get; set; }

        /// <summary>
        /// Whether the user’s email addresses are verified when the registers with your application.
        /// </summary>
        [Input("verifyEmail")]
        public Input<bool>? VerifyEmail { get; set; }

        /// <summary>
        /// Whether the user’s email addresses are verified when the user changes them.
        /// </summary>
        [Input("verifyEmailWhenChanged")]
        public Input<bool>? VerifyEmailWhenChanged { get; set; }

        public FusionAuthTenantEmailConfigurationGetArgs()
        {
        }
        public static new FusionAuthTenantEmailConfigurationGetArgs Empty => new FusionAuthTenantEmailConfigurationGetArgs();
    }
}
