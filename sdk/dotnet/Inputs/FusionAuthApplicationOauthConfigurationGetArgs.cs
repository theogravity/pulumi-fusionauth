// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth.Inputs
{

    public sealed class FusionAuthApplicationOauthConfigurationGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("authorizedOriginUrls")]
        private InputList<string>? _authorizedOriginUrls;

        /// <summary>
        /// An array of URLs that are the authorized origins for FusionAuth OAuth.
        /// </summary>
        public InputList<string> AuthorizedOriginUrls
        {
            get => _authorizedOriginUrls ?? (_authorizedOriginUrls = new InputList<string>());
            set => _authorizedOriginUrls = value;
        }

        [Input("authorizedRedirectUrls")]
        private InputList<string>? _authorizedRedirectUrls;

        /// <summary>
        /// An array of URLs that are the authorized redirect URLs for FusionAuth OAuth.
        /// </summary>
        public InputList<string> AuthorizedRedirectUrls
        {
            get => _authorizedRedirectUrls ?? (_authorizedRedirectUrls = new InputList<string>());
            set => _authorizedRedirectUrls = value;
        }

        /// <summary>
        /// Determines whether wildcard expressions will be allowed in the authorized_redirect_urls and authorized_origin_urls.
        /// </summary>
        [Input("authorizedUrlValidationPolicy")]
        public Input<string>? AuthorizedUrlValidationPolicy { get; set; }

        /// <summary>
        /// Determines the client authentication requirements for the OAuth 2.0 Token endpoint.
        /// </summary>
        [Input("clientAuthenticationPolicy")]
        public Input<string>? ClientAuthenticationPolicy { get; set; }

        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// The OAuth 2.0 client secret. If you leave this blank during a POST, a secure secret will be generated for you. If you leave this blank during PUT, the previous value will be maintained. For both POST and PUT you can provide a value and it will be stored.
        /// </summary>
        [Input("clientSecret")]
        public Input<string>? ClientSecret { get; set; }

        /// <summary>
        /// Whether or not FusionAuth will log SAML debug messages to the event log. This is useful for debugging purposes.
        /// </summary>
        [Input("debug")]
        public Input<bool>? Debug { get; set; }

        /// <summary>
        /// The device verification URL to be used with the Device Code grant type, this field is required when device_code is enabled.
        /// </summary>
        [Input("deviceVerificationUrl")]
        public Input<string>? DeviceVerificationUrl { get; set; }

        [Input("enabledGrants")]
        private InputList<string>? _enabledGrants;

        /// <summary>
        /// The enabled grants for this application. In order to utilize a particular grant with the OAuth 2.0 endpoints you must have enabled the grant.
        /// </summary>
        public InputList<string> EnabledGrants
        {
            get => _enabledGrants ?? (_enabledGrants = new InputList<string>());
            set => _enabledGrants = value;
        }

        /// <summary>
        /// Determines if the OAuth 2.0 Token endpoint will generate a refresh token when the offline_access scope is requested.
        /// </summary>
        [Input("generateRefreshTokens")]
        public Input<bool>? GenerateRefreshTokens { get; set; }

        /// <summary>
        /// Behavior when /oauth2/logout is called.
        /// </summary>
        [Input("logoutBehavior")]
        public Input<string>? LogoutBehavior { get; set; }

        /// <summary>
        /// The URL that the browser is taken to after the user logs out of the SAML service provider. Often service providers need this URL in order to correctly hook up single-logout. Note that FusionAuth does not support the SAML single-logout profile because most service providers to not support it properly.
        /// </summary>
        [Input("logoutUrl")]
        public Input<string>? LogoutUrl { get; set; }

        /// <summary>
        /// Determines the PKCE requirements when using the authorization code grant.
        /// </summary>
        [Input("proofKeyForCodeExchangePolicy")]
        public Input<string>? ProofKeyForCodeExchangePolicy { get; set; }

        /// <summary>
        /// Determines if the OAuth 2.0 Token endpoint requires client authentication. If this is enabled, the client must provide client credentials when using the Token endpoint. The client_id and client_secret may be provided using a Basic Authorization HTTP header, or by sending these parameters in the request body using POST data.
        /// </summary>
        [Input("requireClientAuthentication")]
        public Input<bool>? RequireClientAuthentication { get; set; }

        /// <summary>
        /// When enabled the user will be required to be registered, or complete registration before redirecting to the configured callback in the authorization code grant or the implicit grant. This configuration does not currently apply to any other grant.
        /// </summary>
        [Input("requireRegistration")]
        public Input<bool>? RequireRegistration { get; set; }

        public FusionAuthApplicationOauthConfigurationGetArgs()
        {
        }
        public static new FusionAuthApplicationOauthConfigurationGetArgs Empty => new FusionAuthApplicationOauthConfigurationGetArgs();
    }
}
