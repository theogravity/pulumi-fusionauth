// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    /// <summary>
    /// ## # Generic Connector Resource
    /// 
    /// A FusionAuth Generic Connector is a named object that provides configuration for allowing authentication against external systems.
    /// 
    /// [Generic Connector API](https://fusionauth.io/docs/v1/tech/apis/connectors/generic/)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fusionauth = theogravity.Fusionauth;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new Fusionauth.FusionAuthGenericConnector("example", new()
    ///     {
    ///         AuthenticationUrl = "http://mygameserver.local:7001/fusionauth-connector",
    ///         ConnectTimeout = 1000,
    ///         Data = 
    ///         {
    ///             { "foo", "bar" },
    ///         },
    ///         Debug = false,
    ///         Headers = 
    ///         {
    ///             { "foo", "bar" },
    ///             { "bar", "baz" },
    ///         },
    ///         HttpAuthenticationPassword = "supersecret",
    ///         HttpAuthenticationUsername = "me",
    ///         ReadTimeout = 2000,
    ///         SslCertificateKeyId = "00000000-0000-0000-0000-000000000678",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FusionauthResourceType("fusionauth:index/fusionAuthGenericConnector:FusionAuthGenericConnector")]
    public partial class FusionAuthGenericConnector : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The fully qualified URL used to send an HTTP request to authenticate the user.
        /// </summary>
        [Output("authenticationUrl")]
        public Output<string> AuthenticationUrl { get; private set; } = null!;

        /// <summary>
        /// The connect timeout for the HTTP connection, in milliseconds. Value must be greater than 0.
        /// </summary>
        [Output("connectTimeout")]
        public Output<int> ConnectTimeout { get; private set; } = null!;

        /// <summary>
        /// An object that can hold any information about the Connector that should be persisted.
        /// </summary>
        [Output("data")]
        public Output<ImmutableDictionary<string, object>?> Data { get; private set; } = null!;

        /// <summary>
        /// Determines if debug should be enabled to create an event log to assist in debugging integration errors. Defaults to false.
        /// </summary>
        [Output("debug")]
        public Output<bool?> Debug { get; private set; } = null!;

        /// <summary>
        /// An object that can hold HTTPHeader key and value pairs.
        /// </summary>
        [Output("headers")]
        public Output<ImmutableDictionary<string, object>?> Headers { get; private set; } = null!;

        /// <summary>
        /// The HTTP basic authentication password that is sent as part of the HTTP request for the events.
        /// </summary>
        [Output("httpAuthenticationPassword")]
        public Output<string?> HttpAuthenticationPassword { get; private set; } = null!;

        /// <summary>
        /// The HTTP basic authentication username that is sent as part of the HTTP request for the events.
        /// </summary>
        [Output("httpAuthenticationUsername")]
        public Output<string?> HttpAuthenticationUsername { get; private set; } = null!;

        /// <summary>
        /// The unique Connector name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The read timeout in milliseconds used when FusionAuth sends events to the Webhook.
        /// </summary>
        [Output("readTimeout")]
        public Output<int> ReadTimeout { get; private set; } = null!;

        /// <summary>
        /// The Id of an existing [Key](https://fusionauth.io/docs/v1/tech/apis/keys/). The X509 certificate is used for client certificate authentication in requests to the Connector.
        /// </summary>
        [Output("sslCertificateKeyId")]
        public Output<string?> SslCertificateKeyId { get; private set; } = null!;


        /// <summary>
        /// Create a FusionAuthGenericConnector resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FusionAuthGenericConnector(string name, FusionAuthGenericConnectorArgs args, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthGenericConnector:FusionAuthGenericConnector", name, args ?? new FusionAuthGenericConnectorArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FusionAuthGenericConnector(string name, Input<string> id, FusionAuthGenericConnectorState? state = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthGenericConnector:FusionAuthGenericConnector", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/theogravity/pulumi-fusionauth/releases/download/v${VERSION}",
                AdditionalSecretOutputs =
                {
                    "httpAuthenticationPassword",
                    "httpAuthenticationUsername",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FusionAuthGenericConnector resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FusionAuthGenericConnector Get(string name, Input<string> id, FusionAuthGenericConnectorState? state = null, CustomResourceOptions? options = null)
        {
            return new FusionAuthGenericConnector(name, id, state, options);
        }
    }

    public sealed class FusionAuthGenericConnectorArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fully qualified URL used to send an HTTP request to authenticate the user.
        /// </summary>
        [Input("authenticationUrl", required: true)]
        public Input<string> AuthenticationUrl { get; set; } = null!;

        /// <summary>
        /// The connect timeout for the HTTP connection, in milliseconds. Value must be greater than 0.
        /// </summary>
        [Input("connectTimeout", required: true)]
        public Input<int> ConnectTimeout { get; set; } = null!;

        [Input("data")]
        private InputMap<object>? _data;

        /// <summary>
        /// An object that can hold any information about the Connector that should be persisted.
        /// </summary>
        public InputMap<object> Data
        {
            get => _data ?? (_data = new InputMap<object>());
            set => _data = value;
        }

        /// <summary>
        /// Determines if debug should be enabled to create an event log to assist in debugging integration errors. Defaults to false.
        /// </summary>
        [Input("debug")]
        public Input<bool>? Debug { get; set; }

        [Input("headers")]
        private InputMap<object>? _headers;

        /// <summary>
        /// An object that can hold HTTPHeader key and value pairs.
        /// </summary>
        public InputMap<object> Headers
        {
            get => _headers ?? (_headers = new InputMap<object>());
            set => _headers = value;
        }

        [Input("httpAuthenticationPassword")]
        private Input<string>? _httpAuthenticationPassword;

        /// <summary>
        /// The HTTP basic authentication password that is sent as part of the HTTP request for the events.
        /// </summary>
        public Input<string>? HttpAuthenticationPassword
        {
            get => _httpAuthenticationPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _httpAuthenticationPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("httpAuthenticationUsername")]
        private Input<string>? _httpAuthenticationUsername;

        /// <summary>
        /// The HTTP basic authentication username that is sent as part of the HTTP request for the events.
        /// </summary>
        public Input<string>? HttpAuthenticationUsername
        {
            get => _httpAuthenticationUsername;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _httpAuthenticationUsername = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The unique Connector name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The read timeout in milliseconds used when FusionAuth sends events to the Webhook.
        /// </summary>
        [Input("readTimeout", required: true)]
        public Input<int> ReadTimeout { get; set; } = null!;

        /// <summary>
        /// The Id of an existing [Key](https://fusionauth.io/docs/v1/tech/apis/keys/). The X509 certificate is used for client certificate authentication in requests to the Connector.
        /// </summary>
        [Input("sslCertificateKeyId")]
        public Input<string>? SslCertificateKeyId { get; set; }

        public FusionAuthGenericConnectorArgs()
        {
        }
        public static new FusionAuthGenericConnectorArgs Empty => new FusionAuthGenericConnectorArgs();
    }

    public sealed class FusionAuthGenericConnectorState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The fully qualified URL used to send an HTTP request to authenticate the user.
        /// </summary>
        [Input("authenticationUrl")]
        public Input<string>? AuthenticationUrl { get; set; }

        /// <summary>
        /// The connect timeout for the HTTP connection, in milliseconds. Value must be greater than 0.
        /// </summary>
        [Input("connectTimeout")]
        public Input<int>? ConnectTimeout { get; set; }

        [Input("data")]
        private InputMap<object>? _data;

        /// <summary>
        /// An object that can hold any information about the Connector that should be persisted.
        /// </summary>
        public InputMap<object> Data
        {
            get => _data ?? (_data = new InputMap<object>());
            set => _data = value;
        }

        /// <summary>
        /// Determines if debug should be enabled to create an event log to assist in debugging integration errors. Defaults to false.
        /// </summary>
        [Input("debug")]
        public Input<bool>? Debug { get; set; }

        [Input("headers")]
        private InputMap<object>? _headers;

        /// <summary>
        /// An object that can hold HTTPHeader key and value pairs.
        /// </summary>
        public InputMap<object> Headers
        {
            get => _headers ?? (_headers = new InputMap<object>());
            set => _headers = value;
        }

        [Input("httpAuthenticationPassword")]
        private Input<string>? _httpAuthenticationPassword;

        /// <summary>
        /// The HTTP basic authentication password that is sent as part of the HTTP request for the events.
        /// </summary>
        public Input<string>? HttpAuthenticationPassword
        {
            get => _httpAuthenticationPassword;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _httpAuthenticationPassword = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("httpAuthenticationUsername")]
        private Input<string>? _httpAuthenticationUsername;

        /// <summary>
        /// The HTTP basic authentication username that is sent as part of the HTTP request for the events.
        /// </summary>
        public Input<string>? HttpAuthenticationUsername
        {
            get => _httpAuthenticationUsername;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _httpAuthenticationUsername = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The unique Connector name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The read timeout in milliseconds used when FusionAuth sends events to the Webhook.
        /// </summary>
        [Input("readTimeout")]
        public Input<int>? ReadTimeout { get; set; }

        /// <summary>
        /// The Id of an existing [Key](https://fusionauth.io/docs/v1/tech/apis/keys/). The X509 certificate is used for client certificate authentication in requests to the Connector.
        /// </summary>
        [Input("sslCertificateKeyId")]
        public Input<string>? SslCertificateKeyId { get; set; }

        public FusionAuthGenericConnectorState()
        {
        }
        public static new FusionAuthGenericConnectorState Empty => new FusionAuthGenericConnectorState();
    }
}
