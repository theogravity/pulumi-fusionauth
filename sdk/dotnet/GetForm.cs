// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    public static class GetForm
    {
        /// <summary>
        /// ## # Form Resource
        /// 
        /// A FusionAuth Form is a customizable object that contains one-to-many ordered steps. Each step is comprised of one or more Form Fields.
        /// 
        /// [Forms API](https://fusionauth.io/docs/v1/tech/apis/forms)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Fusionauth = Pulumi.Fusionauth;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Fusionauth.GetForm.Invoke(new()
        ///     {
        ///         Name = "Default User Self Service provided by FusionAuth",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetFormResult> InvokeAsync(GetFormArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFormResult>("fusionauth:index/getForm:getForm", args ?? new GetFormArgs(), options.WithDefaults());

        /// <summary>
        /// ## # Form Resource
        /// 
        /// A FusionAuth Form is a customizable object that contains one-to-many ordered steps. Each step is comprised of one or more Form Fields.
        /// 
        /// [Forms API](https://fusionauth.io/docs/v1/tech/apis/forms)
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using Pulumi;
        /// using Fusionauth = Pulumi.Fusionauth;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @default = Fusionauth.GetForm.Invoke(new()
        ///     {
        ///         Name = "Default User Self Service provided by FusionAuth",
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetFormResult> Invoke(GetFormInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFormResult>("fusionauth:index/getForm:getForm", args ?? new GetFormInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFormArgs : global::Pulumi.InvokeArgs
    {
        [Input("data")]
        private Dictionary<string, object>? _data;

        /// <summary>
        /// An object that can hold any information about the Form that should be persisted.
        /// </summary>
        public Dictionary<string, object> Data
        {
            get => _data ?? (_data = new Dictionary<string, object>());
            set => _data = value;
        }

        /// <summary>
        /// The unique id of the Form. Either `form_id` or `name` must be specified.
        /// </summary>
        [Input("formId")]
        public string? FormId { get; set; }

        /// <summary>
        /// The name of the Form. Either `form_id` or `name` must be specified.
        /// </summary>
        [Input("name")]
        public string? Name { get; set; }

        [Input("steps")]
        private List<Inputs.GetFormStepArgs>? _steps;

        /// <summary>
        /// An ordered list of objects containing one or more Form Fields.
        /// </summary>
        public List<Inputs.GetFormStepArgs> Steps
        {
            get => _steps ?? (_steps = new List<Inputs.GetFormStepArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// The form type. The possible values are:
        /// </summary>
        [Input("type")]
        public string? Type { get; set; }

        public GetFormArgs()
        {
        }
        public static new GetFormArgs Empty => new GetFormArgs();
    }

    public sealed class GetFormInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("data")]
        private InputMap<object>? _data;

        /// <summary>
        /// An object that can hold any information about the Form that should be persisted.
        /// </summary>
        public InputMap<object> Data
        {
            get => _data ?? (_data = new InputMap<object>());
            set => _data = value;
        }

        /// <summary>
        /// The unique id of the Form. Either `form_id` or `name` must be specified.
        /// </summary>
        [Input("formId")]
        public Input<string>? FormId { get; set; }

        /// <summary>
        /// The name of the Form. Either `form_id` or `name` must be specified.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("steps")]
        private InputList<Inputs.GetFormStepInputArgs>? _steps;

        /// <summary>
        /// An ordered list of objects containing one or more Form Fields.
        /// </summary>
        public InputList<Inputs.GetFormStepInputArgs> Steps
        {
            get => _steps ?? (_steps = new InputList<Inputs.GetFormStepInputArgs>());
            set => _steps = value;
        }

        /// <summary>
        /// The form type. The possible values are:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public GetFormInvokeArgs()
        {
        }
        public static new GetFormInvokeArgs Empty => new GetFormInvokeArgs();
    }


    [OutputType]
    public sealed class GetFormResult
    {
        /// <summary>
        /// An object that can hold any information about the Form that should be persisted.
        /// </summary>
        public readonly ImmutableDictionary<string, object>? Data;
        public readonly string FormId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The unique name of the Form.
        /// </summary>
        public readonly string? Name;
        /// <summary>
        /// An ordered list of objects containing one or more Form Fields.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetFormStepResult> Steps;
        /// <summary>
        /// The form type. The possible values are:
        /// </summary>
        public readonly string? Type;

        [OutputConstructor]
        private GetFormResult(
            ImmutableDictionary<string, object>? data,

            string formId,

            string id,

            string? name,

            ImmutableArray<Outputs.GetFormStepResult> steps,

            string? type)
        {
            Data = data;
            FormId = formId;
            Id = id;
            Name = name;
            Steps = steps;
            Type = type;
        }
    }
}
