// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    public static class GetUserGroupMembership
    {
        /// <summary>
        /// ## # User Group Membership Resource
        /// 
        /// [User Group Membership API](https://fusionauth.io/docs/apis/groups#request-5)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fusionauth = Pulumi.Fusionauth;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Fusionauth.GetUserGroupMembership.Invoke(new()
        ///     {
        ///         GroupId = fusionauth_group.This.Id,
        ///         UserId = fusionauth_user.This.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Task<GetUserGroupMembershipResult> InvokeAsync(GetUserGroupMembershipArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetUserGroupMembershipResult>("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args ?? new GetUserGroupMembershipArgs(), options.WithDefaults());

        /// <summary>
        /// ## # User Group Membership Resource
        /// 
        /// [User Group Membership API](https://fusionauth.io/docs/apis/groups#request-5)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fusionauth = Pulumi.Fusionauth;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Fusionauth.GetUserGroupMembership.Invoke(new()
        ///     {
        ///         GroupId = fusionauth_group.This.Id,
        ///         UserId = fusionauth_user.This.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserGroupMembershipResult> Invoke(GetUserGroupMembershipInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupMembershipResult>("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args ?? new GetUserGroupMembershipInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## # User Group Membership Resource
        /// 
        /// [User Group Membership API](https://fusionauth.io/docs/apis/groups#request-5)
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Fusionauth = Pulumi.Fusionauth;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var @this = Fusionauth.GetUserGroupMembership.Invoke(new()
        ///     {
        ///         GroupId = fusionauth_group.This.Id,
        ///         UserId = fusionauth_user.This.Id,
        ///     });
        /// 
        /// });
        /// ```
        /// </summary>
        public static Output<GetUserGroupMembershipResult> Invoke(GetUserGroupMembershipInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetUserGroupMembershipResult>("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args ?? new GetUserGroupMembershipInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetUserGroupMembershipArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id of the Group of this membership.
        /// </summary>
        [Input("groupId", required: true)]
        public string GroupId { get; set; } = null!;

        /// <summary>
        /// "The Id of the User of this membership.
        /// </summary>
        [Input("userId", required: true)]
        public string UserId { get; set; } = null!;

        public GetUserGroupMembershipArgs()
        {
        }
        public static new GetUserGroupMembershipArgs Empty => new GetUserGroupMembershipArgs();
    }

    public sealed class GetUserGroupMembershipInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Id of the Group of this membership.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<string> GroupId { get; set; } = null!;

        /// <summary>
        /// "The Id of the User of this membership.
        /// </summary>
        [Input("userId", required: true)]
        public Input<string> UserId { get; set; } = null!;

        public GetUserGroupMembershipInvokeArgs()
        {
        }
        public static new GetUserGroupMembershipInvokeArgs Empty => new GetUserGroupMembershipInvokeArgs();
    }


    [OutputType]
    public sealed class GetUserGroupMembershipResult
    {
        /// <summary>
        /// (Optional) An object that can hold any information about the User for this membership that should be persisted.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Data;
        public readonly string GroupId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// (Optional) The Id of the User Group Membership. If not provided, a random UUID will be generated.
        /// </summary>
        public readonly string MembershipId;
        public readonly string UserId;

        [OutputConstructor]
        private GetUserGroupMembershipResult(
            ImmutableDictionary<string, string> data,

            string groupId,

            string id,

            string membershipId,

            string userId)
        {
            Data = data;
            GroupId = groupId;
            Id = id;
            MembershipId = membershipId;
            UserId = userId;
        }
    }
}
