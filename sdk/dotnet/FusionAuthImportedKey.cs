// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    /// <summary>
    /// ## # Imported Key Resource
    /// 
    /// Cryptographic keys are used in signing and verifying JWTs and verifying responses for third party identity providers. It is more likely you will interact with keys using the FusionAuth UI in the Key Master menu.
    /// 
    /// [Keys API](https://fusionauth.io/docs/v1/tech/apis/keys)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.IO;
    /// using Pulumi;
    /// using Fusionauth = theogravity.Fusionauth;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var name = new Fusionauth.FusionAuthImportedKey("name", new()
    ///     {
    ///         Kid = "8675309",
    ///         PrivateKey = File.ReadAllText("./AuthKey_8675309.p8"),
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FusionauthResourceType("fusionauth:index/fusionAuthImportedKey:FusionAuthImportedKey")]
    public partial class FusionAuthImportedKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The algorithm used to encrypt the Key. The following values represent algorithms supported by FusionAuth:
        /// </summary>
        [Output("algorithm")]
        public Output<string> Algorithm { get; private set; } = null!;

        /// <summary>
        /// The certificate to import. The publicKey will be extracted from the certificate.
        /// </summary>
        [Output("certificate")]
        public Output<string> Certificate { get; private set; } = null!;

        /// <summary>
        /// The Id to use for the new key. If not specified a secure random UUID will be generated.
        /// </summary>
        [Output("keyId")]
        public Output<string?> KeyId { get; private set; } = null!;

        /// <summary>
        /// The Key identifier 'kid'.
        /// </summary>
        [Output("kid")]
        public Output<string> Kid { get; private set; } = null!;

        /// <summary>
        /// The name of the Key.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The Key private key. Optional if importing an RSA or EC key. If the key is only to be used for token validation, only a public key is necessary and this field may be omitted.
        /// </summary>
        [Output("privateKey")]
        public Output<string?> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// "The Key public key. Required if importing an RSA or EC key and a certificate is not provided."
        /// </summary>
        [Output("publicKey")]
        public Output<string> PublicKey { get; private set; } = null!;

        /// <summary>
        /// The Key secret. This field is required if importing an HMAC key type.
        /// </summary>
        [Output("secret")]
        public Output<string?> Secret { get; private set; } = null!;

        /// <summary>
        /// The Key type. This field is required if importing an HMAC key type, or if importing a public key / private key pair. The possible values are:
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FusionAuthImportedKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FusionAuthImportedKey(string name, FusionAuthImportedKeyArgs? args = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthImportedKey:FusionAuthImportedKey", name, args ?? new FusionAuthImportedKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FusionAuthImportedKey(string name, Input<string> id, FusionAuthImportedKeyState? state = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthImportedKey:FusionAuthImportedKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/theogravity/pulumi-fusionauth/releases/download/v${VERSION}",
                AdditionalSecretOutputs =
                {
                    "privateKey",
                    "secret",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FusionAuthImportedKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FusionAuthImportedKey Get(string name, Input<string> id, FusionAuthImportedKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new FusionAuthImportedKey(name, id, state, options);
        }
    }

    public sealed class FusionAuthImportedKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The algorithm used to encrypt the Key. The following values represent algorithms supported by FusionAuth:
        /// </summary>
        [Input("algorithm")]
        public Input<string>? Algorithm { get; set; }

        /// <summary>
        /// The certificate to import. The publicKey will be extracted from the certificate.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// The Id to use for the new key. If not specified a secure random UUID will be generated.
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        /// <summary>
        /// The Key identifier 'kid'.
        /// </summary>
        [Input("kid")]
        public Input<string>? Kid { get; set; }

        /// <summary>
        /// The name of the Key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// The Key private key. Optional if importing an RSA or EC key. If the key is only to be used for token validation, only a public key is necessary and this field may be omitted.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// "The Key public key. Required if importing an RSA or EC key and a certificate is not provided."
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        [Input("secret")]
        private Input<string>? _secret;

        /// <summary>
        /// The Key secret. This field is required if importing an HMAC key type.
        /// </summary>
        public Input<string>? Secret
        {
            get => _secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The Key type. This field is required if importing an HMAC key type, or if importing a public key / private key pair. The possible values are:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public FusionAuthImportedKeyArgs()
        {
        }
        public static new FusionAuthImportedKeyArgs Empty => new FusionAuthImportedKeyArgs();
    }

    public sealed class FusionAuthImportedKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The algorithm used to encrypt the Key. The following values represent algorithms supported by FusionAuth:
        /// </summary>
        [Input("algorithm")]
        public Input<string>? Algorithm { get; set; }

        /// <summary>
        /// The certificate to import. The publicKey will be extracted from the certificate.
        /// </summary>
        [Input("certificate")]
        public Input<string>? Certificate { get; set; }

        /// <summary>
        /// The Id to use for the new key. If not specified a secure random UUID will be generated.
        /// </summary>
        [Input("keyId")]
        public Input<string>? KeyId { get; set; }

        /// <summary>
        /// The Key identifier 'kid'.
        /// </summary>
        [Input("kid")]
        public Input<string>? Kid { get; set; }

        /// <summary>
        /// The name of the Key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// The Key private key. Optional if importing an RSA or EC key. If the key is only to be used for token validation, only a public key is necessary and this field may be omitted.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// "The Key public key. Required if importing an RSA or EC key and a certificate is not provided."
        /// </summary>
        [Input("publicKey")]
        public Input<string>? PublicKey { get; set; }

        [Input("secret")]
        private Input<string>? _secret;

        /// <summary>
        /// The Key secret. This field is required if importing an HMAC key type.
        /// </summary>
        public Input<string>? Secret
        {
            get => _secret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _secret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The Key type. This field is required if importing an HMAC key type, or if importing a public key / private key pair. The possible values are:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public FusionAuthImportedKeyState()
        {
        }
        public static new FusionAuthImportedKeyState Empty => new FusionAuthImportedKeyState();
    }
}
