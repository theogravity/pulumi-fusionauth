// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    /// <summary>
    /// ## # Theme Resource
    /// 
    /// UI login themes can be configured to enable custom branding for your FusionAuth login workflow. Themes are configured per Tenant or optionally by Application.
    /// 
    /// [Themes API](https://fusionauth.io/docs/v1/tech/apis/themes)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Fusionauth = theogravity.Fusionauth;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var mytheme = new Fusionauth.FusionAuthTheme("mytheme", new()
    ///     {
    ///         AccountEdit = "[#ftl/]",
    ///         AccountIndex = "[#ftl/]",
    ///         AccountTwoFactorDisable = "[#ftl/]",
    ///         AccountTwoFactorEnable = "[#ftl/]",
    ///         AccountTwoFactorIndex = "[#ftl/]",
    ///         AccountWebauthnAdd = "[#ftl/]",
    ///         AccountWebauthnDelete = "[#ftl/]",
    ///         AccountWebauthnIndex = "[#ftl/]",
    ///         ConfirmationRequired = "[#ftl/]",
    ///         DefaultMessages = "[#ftl/]",
    ///         EmailComplete = "[#ftl/]",
    ///         EmailSend = "[#ftl/]",
    ///         EmailSent = "[#ftl/]",
    ///         EmailVerificationRequired = "[#ftl/]",
    ///         EmailVerify = "[#ftl/]",
    ///         Helpers = "[#ftl/]",
    ///         Index = "[#ftl/]",
    ///         Oauth2Authorize = "[#ftl/]",
    ///         Oauth2AuthorizedNotRegistered = "[#ftl/]",
    ///         Oauth2ChildRegistrationNotAllowed = "[#ftl/]",
    ///         Oauth2ChildRegistrationNotAllowedComplete = "[#ftl/]",
    ///         Oauth2CompleteRegistration = "[#ftl/]",
    ///         Oauth2Consent = "[#ftl/]",
    ///         Oauth2Device = "[#ftl/]",
    ///         Oauth2DeviceComplete = "[#ftl/]",
    ///         Oauth2Error = "[#ftl/]",
    ///         Oauth2Logout = "[#ftl/]",
    ///         Oauth2Passwordless = "[#ftl/]",
    ///         Oauth2Register = "[#ftl/]",
    ///         Oauth2StartIdpLink = "[#ftl/]",
    ///         Oauth2TwoFactor = "[#ftl/]",
    ///         Oauth2TwoFactorEnable = "[#ftl/]",
    ///         Oauth2TwoFactorEnableComplete = "[#ftl/]",
    ///         Oauth2TwoFactorMethods = "[#ftl/]",
    ///         Oauth2Wait = "[#ftl/]",
    ///         Oauth2Webauthn = "[#ftl/]",
    ///         Oauth2WebauthnReauth = "[#ftl/]",
    ///         Oauth2WebauthnReauthEnable = "[#ftl/]",
    ///         PasswordChange = "[#ftl/]",
    ///         PasswordComplete = "[#ftl/]",
    ///         PasswordForgot = "[#ftl/]",
    ///         PasswordSent = "[#ftl/]",
    ///         RegistrationComplete = "[#ftl/]",
    ///         RegistrationSend = "[#ftl/]",
    ///         RegistrationSent = "[#ftl/]",
    ///         RegistrationVerificationRequired = "[#ftl/]",
    ///         RegistrationVerify = "[#ftl/]",
    ///         Samlv2Logout = "[#ftl/]",
    ///         Stylesheet = "/* stylish */",
    ///         Unauthorized = "[#ftl/]",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FusionauthResourceType("fusionauth:index/fusionAuthTheme:FusionAuthTheme")]
    public partial class FusionAuthTheme : global::Pulumi.CustomResource
    {
        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/edit path. This page contains a form that enables authenticated users to update their profile.
        /// </summary>
        [Output("accountEdit")]
        public Output<string> AccountEdit { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account path. This is the self-service account landing page. An authenticated user may use this as a starting point for operations such as updating their profile or configuring multi-factor authentication.
        /// </summary>
        [Output("accountIndex")]
        public Output<string> AccountIndex { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor/disable path. This page contains a form that accepts a verification code used to disable a multi-factor authentication method.
        /// </summary>
        [Output("accountTwoFactorDisable")]
        public Output<string> AccountTwoFactorDisable { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor/enable path. This page contains a form that accepts a verification code used to enable a multi-factor authentication method. Additionally, this page contains presentation of recovery codes when a user enables multi-factor authentication for the first time.
        /// </summary>
        [Output("accountTwoFactorEnable")]
        public Output<string> AccountTwoFactorEnable { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor path. This page displays an authenticated user’s configured multi-factor authentication methods. Additionally, it provides links to enable and disable a method.
        /// </summary>
        [Output("accountTwoFactorIndex")]
        public Output<string> AccountTwoFactorIndex { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/add path. This page contains a form that allows a user to register a new WebAuthn passkey.
        /// </summary>
        [Output("accountWebauthnAdd")]
        public Output<string> AccountWebauthnAdd { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/delete path. This page contains a form that allows a user to delete a WebAuthn passkey.
        /// </summary>
        [Output("accountWebauthnDelete")]
        public Output<string> AccountWebauthnDelete { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/ path. This page displays an authenticated user’s registered WebAuthn passkeys. Additionally, it provides links to delete an existing passkey and register a new passkey.
        /// </summary>
        [Output("accountWebauthnIndex")]
        public Output<string> AccountWebauthnIndex { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /confirmation-required path. This page is displayed when a user attempts to complete an email based workflow that did not begin in the same browser. For example, if the user starts a forgot password workflow, and then opens the link in a separate browser the user will be shown this panel.
        /// </summary>
        [Output("confirmationRequired")]
        public Output<string> ConfirmationRequired { get; private set; } = null!;

        /// <summary>
        /// A properties file formatted String containing at least all of the message keys defined in the FusionAuth shipped messages file. 
        /// 
        /// &gt; **Note:** `default_messages` Is Required if not copying an existing Theme.
        /// </summary>
        [Output("defaultMessages")]
        public Output<string> DefaultMessages { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/complete path. This page is used after a user has verified their email address by clicking the URL in the email. After FusionAuth has updated their user object to indicate that their email was verified, the browser is redirected to this page.
        /// </summary>
        [Output("emailComplete")]
        public Output<string> EmailComplete { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/send page. This page is used after a user has
        /// asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it.
        /// In this case, the user can provide their email address again and FusionAuth will resend the email. After the user
        /// submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Output("emailSend")]
        public Output<string> EmailSend { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/sent path. This page is used after a user has asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Output("emailSent")]
        public Output<string> EmailSent { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/verification-required path. This page is rendered when a user is required to verify their email address prior to being allowed to proceed with login. This occurs when Unverified behavior is set to Gated in email verification settings on the Tenant.
        /// </summary>
        [Output("emailVerificationRequired")]
        public Output<string> EmailVerificationRequired { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/verify path. This page is rendered when a user clicks the URL from the verification email and the verificationId has expired. FusionAuth expires verificationId after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.
        /// </summary>
        [Output("emailVerify")]
        public Output<string> EmailVerify { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that contains all of the macros and templates used by the rest of the login Theme FreeMarker templates. This allows you to configure the general layout of your UI configuration and login theme without having to copy and paste HTML into each of the templates.
        /// </summary>
        [Output("helpers")]
        public Output<string> Helpers { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the / path. This is the root landing page. This page is available to unauthenticated users and will be displayed whenever someone navigates to the FusionAuth host’s root page. Prior to version 1.27.0, navigating to this URL would redirect to /admin and would subsequently render the FusionAuth admin login page.
        /// </summary>
        [Output("index")]
        public Output<string> Index { get; private set; } = null!;

        /// <summary>
        /// A Map of localized versions of the messages. The key is the Locale and the value is a properties file formatted String.
        /// </summary>
        [Output("localizedMessages")]
        public Output<ImmutableDictionary<string, object>?> LocalizedMessages { get; private set; } = null!;

        /// <summary>
        /// A unique name for the Theme.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/authorize path. This is the main login page for FusionAuth and is used for all interactive OAuth2 and OpenID Connect workflows.
        /// </summary>
        [Output("oauth2Authorize")]
        public Output<string> Oauth2Authorize { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/authorized-not-registered path. This page is rendered when a user is not registered and the Application configuration requires registration before FusionAuth will complete the redirect.
        /// </summary>
        [Output("oauth2AuthorizedNotRegistered")]
        public Output<string> Oauth2AuthorizedNotRegistered { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/child-registration-not-allowed path. This page contains a form where a child must provide their parent’s email address to ask their parent to create an account for them in a Consent workflow.
        /// </summary>
        [Output("oauth2ChildRegistrationNotAllowed")]
        public Output<string> Oauth2ChildRegistrationNotAllowed { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/child-registration-not-allowed-complete path. This page is rendered is rendered after a child provides their parent’s email address for parental consent in a Consent workflow.
        /// </summary>
        [Output("oauth2ChildRegistrationNotAllowedComplete")]
        public Output<string> Oauth2ChildRegistrationNotAllowedComplete { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/complete-registration path. This page contains a form that is used for users that have accounts but might be missing required fields.
        /// </summary>
        [Output("oauth2CompleteRegistration")]
        public Output<string> Oauth2CompleteRegistration { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when a third party application requests scopes from the user.
        /// </summary>
        [Output("oauth2Consent")]
        public Output<string> Oauth2Consent { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/device path. This page contains a form for accepting an end user’s short code for the interactive portion of the OAuth Device Authorization Grant workflow.
        /// </summary>
        [Output("oauth2Device")]
        public Output<string> Oauth2Device { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/device-complete path. This page contains a complete message indicating the device authentication has completed.
        /// </summary>
        [Output("oauth2DeviceComplete")]
        public Output<string> Oauth2DeviceComplete { get; private set; } = null!;

        /// <summary>
        /// This page is used if the user starts or is in the middle of the OAuth workflow and any type of error occurs. This could be caused by the user messing with the URL or internally some type of information wasn’t passed between the OAuth endpoints correctly. For example, if you are federating login to an external IdP and that IdP does not properly echo the state parameter, FusionAuth’s OAuth workflow will break and this page will be displayed.
        /// </summary>
        [Output("oauth2Error")]
        public Output<string> Oauth2Error { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/logout page. This page is used if the user initiates a logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.
        /// </summary>
        [Output("oauth2Logout")]
        public Output<string> Oauth2Logout { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/passwordless path. This page is rendered when the user starts the passwordless login workflow. The page renders the form where the user types in their email address.
        /// </summary>
        [Output("oauth2Passwordless")]
        public Output<string> Oauth2Passwordless { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/register path. This page is used to register or sign up the user for the application when self-service registration is enabled.
        /// </summary>
        [Output("oauth2Register")]
        public Output<string> Oauth2Register { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/start-idp-link path. This page is used if the Identity Provider is configured to have a pending link. The user is presented with the option to link their account with an existing FusionAuth user account.
        /// </summary>
        [Output("oauth2StartIdpLink")]
        public Output<string> Oauth2StartIdpLink { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/two-factor path. This page is used if the user has two-factor authentication enabled and they need to type in their code again. FusionAuth will properly handle the processing on the back end. This page contains the form that the user will put their code into.
        /// </summary>
        [Output("oauth2TwoFactor")]
        public Output<string> Oauth2TwoFactor { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that contains the OAuth2 two-factor enable form.
        /// </summary>
        [Output("oauth2TwoFactorEnable")]
        public Output<string> Oauth2TwoFactorEnable { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that contains the OAuth2 two-factor enable complete form.
        /// </summary>
        [Output("oauth2TwoFactorEnableComplete")]
        public Output<string> Oauth2TwoFactorEnableComplete { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/two-factor-methods path. This page contains a form providing a user with their configured multi-factor authentication options that they may use to complete the authentication challenge.
        /// </summary>
        [Output("oauth2TwoFactorMethods")]
        public Output<string> Oauth2TwoFactorMethods { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/wait path. This page is rendered when FusionAuth is waiting for an external provider to complete an out of band authentication request. For example, during a HYPR login this page will be displayed until the user completes authentication.
        /// </summary>
        [Output("oauth2Wait")]
        public Output<string> Oauth2Wait { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn path. This page contains a form where a user can enter their loginId (username or email address) to authenticate with one of their registered WebAuthn passkeys. This page uses the WebAuthn bootstrap workflow.
        /// </summary>
        [Output("oauth2Webauthn")]
        public Output<string> Oauth2Webauthn { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn-reauth path. This page contains a form that lists the WebAuthn passkeys currently available for re-authentication. A user can select one of the listed passkeys to authenticate using the corresponding passkey and user account.
        /// </summary>
        [Output("oauth2WebauthnReauth")]
        public Output<string> Oauth2WebauthnReauth { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn-reauth-enable path. This page contains two forms. One allows the user to select one of their existing WebAuthn passkeys to use for re-authentication. The other allows the user to register a new WebAuthn passkey for re-authentication.
        /// </summary>
        [Output("oauth2WebauthnReauthEnable")]
        public Output<string> Oauth2WebauthnReauthEnable { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/change path. This page is used if the user is required to change their password or if they have requested a password reset. This page contains the form that allows the user to provide a new password.
        /// </summary>
        [Output("passwordChange")]
        public Output<string> PasswordChange { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/complete path. This page is used after the user has successfully updated their password, or reset it. This page should instruct the user that their password was updated and that they need to login again.
        /// </summary>
        [Output("passwordComplete")]
        public Output<string> PasswordComplete { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/forgot path. This page is used when a user starts the forgot password workflow. This page renders the form where the user types in their email address.
        /// </summary>
        [Output("passwordForgot")]
        public Output<string> PasswordForgot { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/sent path. This page is used when a user has submitted the forgot password form with their email. FusionAuth does not indicate back to the user if their email address was valid in order to prevent malicious activity that could reveal valid email addresses. Therefore, this page should indicate to the user that if their email was valid, they will receive an email shortly with a link to reset their password.
        /// </summary>
        [Output("passwordSent")]
        public Output<string> PasswordSent { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/complete path. This page is used after a user has verified their email address for a specific application (i.e. a user registration) by clicking the URL in the email. After FusionAuth has updated their registration object to indicate that their email was verified, the browser is redirected to this page.
        /// </summary>
        [Output("registrationComplete")]
        public Output<string> RegistrationComplete { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/send page. This page is used after a
        /// user has asked for the application specific verification email to be resent. This can happen if the URL in the email
        /// expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend
        /// the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is
        /// redirected to this page.
        /// </summary>
        [Output("registrationSend")]
        public Output<string> RegistrationSend { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/sent path. This page is used after a user has asked for the application specific verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Output("registrationSent")]
        public Output<string> RegistrationSent { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/verification-required path. This page is rendered when a user is required to verify their registration prior to being allowed to proceed with the registration flow. This occurs when Unverified behavior is set to Gated in registration verification settings on the Application.
        /// </summary>
        [Output("registrationVerificationRequired")]
        public Output<string> RegistrationVerificationRequired { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/verify path. This page is used when a user clicks the URL from the application specific verification email and the verificationId has expired. FusionAuth expires verificationId after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.
        /// </summary>
        [Output("registrationVerify")]
        public Output<string> RegistrationVerify { get; private set; } = null!;

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /samlv2/logout path. This page is used if the user initiates a SAML logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.
        /// </summary>
        [Output("samlv2Logout")]
        public Output<string> Samlv2Logout { get; private set; } = null!;

        /// <summary>
        /// The optional Id of an existing Theme to make a copy of. If present, the defaultMessages, localizedMessages, templates, and stylesheet from the source Theme will be copied to the new Theme.
        /// </summary>
        [Output("sourceThemeId")]
        public Output<string?> SourceThemeId { get; private set; } = null!;

        /// <summary>
        /// A CSS stylesheet used to style the templates.
        /// </summary>
        [Output("stylesheet")]
        public Output<string> Stylesheet { get; private set; } = null!;

        /// <summary>
        /// An optional FreeMarker template that contains the unauthorized page.
        /// </summary>
        [Output("unauthorized")]
        public Output<string> Unauthorized { get; private set; } = null!;


        /// <summary>
        /// Create a FusionAuthTheme resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FusionAuthTheme(string name, FusionAuthThemeArgs? args = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthTheme:FusionAuthTheme", name, args ?? new FusionAuthThemeArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FusionAuthTheme(string name, Input<string> id, FusionAuthThemeState? state = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthTheme:FusionAuthTheme", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/theogravity/pulumi-fusionauth/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FusionAuthTheme resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FusionAuthTheme Get(string name, Input<string> id, FusionAuthThemeState? state = null, CustomResourceOptions? options = null)
        {
            return new FusionAuthTheme(name, id, state, options);
        }
    }

    public sealed class FusionAuthThemeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/edit path. This page contains a form that enables authenticated users to update their profile.
        /// </summary>
        [Input("accountEdit")]
        public Input<string>? AccountEdit { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account path. This is the self-service account landing page. An authenticated user may use this as a starting point for operations such as updating their profile or configuring multi-factor authentication.
        /// </summary>
        [Input("accountIndex")]
        public Input<string>? AccountIndex { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor/disable path. This page contains a form that accepts a verification code used to disable a multi-factor authentication method.
        /// </summary>
        [Input("accountTwoFactorDisable")]
        public Input<string>? AccountTwoFactorDisable { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor/enable path. This page contains a form that accepts a verification code used to enable a multi-factor authentication method. Additionally, this page contains presentation of recovery codes when a user enables multi-factor authentication for the first time.
        /// </summary>
        [Input("accountTwoFactorEnable")]
        public Input<string>? AccountTwoFactorEnable { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor path. This page displays an authenticated user’s configured multi-factor authentication methods. Additionally, it provides links to enable and disable a method.
        /// </summary>
        [Input("accountTwoFactorIndex")]
        public Input<string>? AccountTwoFactorIndex { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/add path. This page contains a form that allows a user to register a new WebAuthn passkey.
        /// </summary>
        [Input("accountWebauthnAdd")]
        public Input<string>? AccountWebauthnAdd { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/delete path. This page contains a form that allows a user to delete a WebAuthn passkey.
        /// </summary>
        [Input("accountWebauthnDelete")]
        public Input<string>? AccountWebauthnDelete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/ path. This page displays an authenticated user’s registered WebAuthn passkeys. Additionally, it provides links to delete an existing passkey and register a new passkey.
        /// </summary>
        [Input("accountWebauthnIndex")]
        public Input<string>? AccountWebauthnIndex { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /confirmation-required path. This page is displayed when a user attempts to complete an email based workflow that did not begin in the same browser. For example, if the user starts a forgot password workflow, and then opens the link in a separate browser the user will be shown this panel.
        /// </summary>
        [Input("confirmationRequired")]
        public Input<string>? ConfirmationRequired { get; set; }

        /// <summary>
        /// A properties file formatted String containing at least all of the message keys defined in the FusionAuth shipped messages file. 
        /// 
        /// &gt; **Note:** `default_messages` Is Required if not copying an existing Theme.
        /// </summary>
        [Input("defaultMessages")]
        public Input<string>? DefaultMessages { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/complete path. This page is used after a user has verified their email address by clicking the URL in the email. After FusionAuth has updated their user object to indicate that their email was verified, the browser is redirected to this page.
        /// </summary>
        [Input("emailComplete")]
        public Input<string>? EmailComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/send page. This page is used after a user has
        /// asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it.
        /// In this case, the user can provide their email address again and FusionAuth will resend the email. After the user
        /// submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Input("emailSend")]
        public Input<string>? EmailSend { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/sent path. This page is used after a user has asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Input("emailSent")]
        public Input<string>? EmailSent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/verification-required path. This page is rendered when a user is required to verify their email address prior to being allowed to proceed with login. This occurs when Unverified behavior is set to Gated in email verification settings on the Tenant.
        /// </summary>
        [Input("emailVerificationRequired")]
        public Input<string>? EmailVerificationRequired { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/verify path. This page is rendered when a user clicks the URL from the verification email and the verificationId has expired. FusionAuth expires verificationId after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.
        /// </summary>
        [Input("emailVerify")]
        public Input<string>? EmailVerify { get; set; }

        /// <summary>
        /// A FreeMarker template that contains all of the macros and templates used by the rest of the login Theme FreeMarker templates. This allows you to configure the general layout of your UI configuration and login theme without having to copy and paste HTML into each of the templates.
        /// </summary>
        [Input("helpers")]
        public Input<string>? Helpers { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the / path. This is the root landing page. This page is available to unauthenticated users and will be displayed whenever someone navigates to the FusionAuth host’s root page. Prior to version 1.27.0, navigating to this URL would redirect to /admin and would subsequently render the FusionAuth admin login page.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        [Input("localizedMessages")]
        private InputMap<object>? _localizedMessages;

        /// <summary>
        /// A Map of localized versions of the messages. The key is the Locale and the value is a properties file formatted String.
        /// </summary>
        public InputMap<object> LocalizedMessages
        {
            get => _localizedMessages ?? (_localizedMessages = new InputMap<object>());
            set => _localizedMessages = value;
        }

        /// <summary>
        /// A unique name for the Theme.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/authorize path. This is the main login page for FusionAuth and is used for all interactive OAuth2 and OpenID Connect workflows.
        /// </summary>
        [Input("oauth2Authorize")]
        public Input<string>? Oauth2Authorize { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/authorized-not-registered path. This page is rendered when a user is not registered and the Application configuration requires registration before FusionAuth will complete the redirect.
        /// </summary>
        [Input("oauth2AuthorizedNotRegistered")]
        public Input<string>? Oauth2AuthorizedNotRegistered { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/child-registration-not-allowed path. This page contains a form where a child must provide their parent’s email address to ask their parent to create an account for them in a Consent workflow.
        /// </summary>
        [Input("oauth2ChildRegistrationNotAllowed")]
        public Input<string>? Oauth2ChildRegistrationNotAllowed { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/child-registration-not-allowed-complete path. This page is rendered is rendered after a child provides their parent’s email address for parental consent in a Consent workflow.
        /// </summary>
        [Input("oauth2ChildRegistrationNotAllowedComplete")]
        public Input<string>? Oauth2ChildRegistrationNotAllowedComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/complete-registration path. This page contains a form that is used for users that have accounts but might be missing required fields.
        /// </summary>
        [Input("oauth2CompleteRegistration")]
        public Input<string>? Oauth2CompleteRegistration { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when a third party application requests scopes from the user.
        /// </summary>
        [Input("oauth2Consent")]
        public Input<string>? Oauth2Consent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/device path. This page contains a form for accepting an end user’s short code for the interactive portion of the OAuth Device Authorization Grant workflow.
        /// </summary>
        [Input("oauth2Device")]
        public Input<string>? Oauth2Device { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/device-complete path. This page contains a complete message indicating the device authentication has completed.
        /// </summary>
        [Input("oauth2DeviceComplete")]
        public Input<string>? Oauth2DeviceComplete { get; set; }

        /// <summary>
        /// This page is used if the user starts or is in the middle of the OAuth workflow and any type of error occurs. This could be caused by the user messing with the URL or internally some type of information wasn’t passed between the OAuth endpoints correctly. For example, if you are federating login to an external IdP and that IdP does not properly echo the state parameter, FusionAuth’s OAuth workflow will break and this page will be displayed.
        /// </summary>
        [Input("oauth2Error")]
        public Input<string>? Oauth2Error { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/logout page. This page is used if the user initiates a logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.
        /// </summary>
        [Input("oauth2Logout")]
        public Input<string>? Oauth2Logout { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/passwordless path. This page is rendered when the user starts the passwordless login workflow. The page renders the form where the user types in their email address.
        /// </summary>
        [Input("oauth2Passwordless")]
        public Input<string>? Oauth2Passwordless { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/register path. This page is used to register or sign up the user for the application when self-service registration is enabled.
        /// </summary>
        [Input("oauth2Register")]
        public Input<string>? Oauth2Register { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/start-idp-link path. This page is used if the Identity Provider is configured to have a pending link. The user is presented with the option to link their account with an existing FusionAuth user account.
        /// </summary>
        [Input("oauth2StartIdpLink")]
        public Input<string>? Oauth2StartIdpLink { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/two-factor path. This page is used if the user has two-factor authentication enabled and they need to type in their code again. FusionAuth will properly handle the processing on the back end. This page contains the form that the user will put their code into.
        /// </summary>
        [Input("oauth2TwoFactor")]
        public Input<string>? Oauth2TwoFactor { get; set; }

        /// <summary>
        /// A FreeMarker template that contains the OAuth2 two-factor enable form.
        /// </summary>
        [Input("oauth2TwoFactorEnable")]
        public Input<string>? Oauth2TwoFactorEnable { get; set; }

        /// <summary>
        /// A FreeMarker template that contains the OAuth2 two-factor enable complete form.
        /// </summary>
        [Input("oauth2TwoFactorEnableComplete")]
        public Input<string>? Oauth2TwoFactorEnableComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/two-factor-methods path. This page contains a form providing a user with their configured multi-factor authentication options that they may use to complete the authentication challenge.
        /// </summary>
        [Input("oauth2TwoFactorMethods")]
        public Input<string>? Oauth2TwoFactorMethods { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/wait path. This page is rendered when FusionAuth is waiting for an external provider to complete an out of band authentication request. For example, during a HYPR login this page will be displayed until the user completes authentication.
        /// </summary>
        [Input("oauth2Wait")]
        public Input<string>? Oauth2Wait { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn path. This page contains a form where a user can enter their loginId (username or email address) to authenticate with one of their registered WebAuthn passkeys. This page uses the WebAuthn bootstrap workflow.
        /// </summary>
        [Input("oauth2Webauthn")]
        public Input<string>? Oauth2Webauthn { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn-reauth path. This page contains a form that lists the WebAuthn passkeys currently available for re-authentication. A user can select one of the listed passkeys to authenticate using the corresponding passkey and user account.
        /// </summary>
        [Input("oauth2WebauthnReauth")]
        public Input<string>? Oauth2WebauthnReauth { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn-reauth-enable path. This page contains two forms. One allows the user to select one of their existing WebAuthn passkeys to use for re-authentication. The other allows the user to register a new WebAuthn passkey for re-authentication.
        /// </summary>
        [Input("oauth2WebauthnReauthEnable")]
        public Input<string>? Oauth2WebauthnReauthEnable { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/change path. This page is used if the user is required to change their password or if they have requested a password reset. This page contains the form that allows the user to provide a new password.
        /// </summary>
        [Input("passwordChange")]
        public Input<string>? PasswordChange { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/complete path. This page is used after the user has successfully updated their password, or reset it. This page should instruct the user that their password was updated and that they need to login again.
        /// </summary>
        [Input("passwordComplete")]
        public Input<string>? PasswordComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/forgot path. This page is used when a user starts the forgot password workflow. This page renders the form where the user types in their email address.
        /// </summary>
        [Input("passwordForgot")]
        public Input<string>? PasswordForgot { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/sent path. This page is used when a user has submitted the forgot password form with their email. FusionAuth does not indicate back to the user if their email address was valid in order to prevent malicious activity that could reveal valid email addresses. Therefore, this page should indicate to the user that if their email was valid, they will receive an email shortly with a link to reset their password.
        /// </summary>
        [Input("passwordSent")]
        public Input<string>? PasswordSent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/complete path. This page is used after a user has verified their email address for a specific application (i.e. a user registration) by clicking the URL in the email. After FusionAuth has updated their registration object to indicate that their email was verified, the browser is redirected to this page.
        /// </summary>
        [Input("registrationComplete")]
        public Input<string>? RegistrationComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/send page. This page is used after a
        /// user has asked for the application specific verification email to be resent. This can happen if the URL in the email
        /// expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend
        /// the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is
        /// redirected to this page.
        /// </summary>
        [Input("registrationSend")]
        public Input<string>? RegistrationSend { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/sent path. This page is used after a user has asked for the application specific verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Input("registrationSent")]
        public Input<string>? RegistrationSent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/verification-required path. This page is rendered when a user is required to verify their registration prior to being allowed to proceed with the registration flow. This occurs when Unverified behavior is set to Gated in registration verification settings on the Application.
        /// </summary>
        [Input("registrationVerificationRequired")]
        public Input<string>? RegistrationVerificationRequired { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/verify path. This page is used when a user clicks the URL from the application specific verification email and the verificationId has expired. FusionAuth expires verificationId after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.
        /// </summary>
        [Input("registrationVerify")]
        public Input<string>? RegistrationVerify { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /samlv2/logout path. This page is used if the user initiates a SAML logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.
        /// </summary>
        [Input("samlv2Logout")]
        public Input<string>? Samlv2Logout { get; set; }

        /// <summary>
        /// The optional Id of an existing Theme to make a copy of. If present, the defaultMessages, localizedMessages, templates, and stylesheet from the source Theme will be copied to the new Theme.
        /// </summary>
        [Input("sourceThemeId")]
        public Input<string>? SourceThemeId { get; set; }

        /// <summary>
        /// A CSS stylesheet used to style the templates.
        /// </summary>
        [Input("stylesheet")]
        public Input<string>? Stylesheet { get; set; }

        /// <summary>
        /// An optional FreeMarker template that contains the unauthorized page.
        /// </summary>
        [Input("unauthorized")]
        public Input<string>? Unauthorized { get; set; }

        public FusionAuthThemeArgs()
        {
        }
        public static new FusionAuthThemeArgs Empty => new FusionAuthThemeArgs();
    }

    public sealed class FusionAuthThemeState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/edit path. This page contains a form that enables authenticated users to update their profile.
        /// </summary>
        [Input("accountEdit")]
        public Input<string>? AccountEdit { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account path. This is the self-service account landing page. An authenticated user may use this as a starting point for operations such as updating their profile or configuring multi-factor authentication.
        /// </summary>
        [Input("accountIndex")]
        public Input<string>? AccountIndex { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor/disable path. This page contains a form that accepts a verification code used to disable a multi-factor authentication method.
        /// </summary>
        [Input("accountTwoFactorDisable")]
        public Input<string>? AccountTwoFactorDisable { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor/enable path. This page contains a form that accepts a verification code used to enable a multi-factor authentication method. Additionally, this page contains presentation of recovery codes when a user enables multi-factor authentication for the first time.
        /// </summary>
        [Input("accountTwoFactorEnable")]
        public Input<string>? AccountTwoFactorEnable { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/two-factor path. This page displays an authenticated user’s configured multi-factor authentication methods. Additionally, it provides links to enable and disable a method.
        /// </summary>
        [Input("accountTwoFactorIndex")]
        public Input<string>? AccountTwoFactorIndex { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/add path. This page contains a form that allows a user to register a new WebAuthn passkey.
        /// </summary>
        [Input("accountWebauthnAdd")]
        public Input<string>? AccountWebauthnAdd { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/delete path. This page contains a form that allows a user to delete a WebAuthn passkey.
        /// </summary>
        [Input("accountWebauthnDelete")]
        public Input<string>? AccountWebauthnDelete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /account/webauthn/ path. This page displays an authenticated user’s registered WebAuthn passkeys. Additionally, it provides links to delete an existing passkey and register a new passkey.
        /// </summary>
        [Input("accountWebauthnIndex")]
        public Input<string>? AccountWebauthnIndex { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /confirmation-required path. This page is displayed when a user attempts to complete an email based workflow that did not begin in the same browser. For example, if the user starts a forgot password workflow, and then opens the link in a separate browser the user will be shown this panel.
        /// </summary>
        [Input("confirmationRequired")]
        public Input<string>? ConfirmationRequired { get; set; }

        /// <summary>
        /// A properties file formatted String containing at least all of the message keys defined in the FusionAuth shipped messages file. 
        /// 
        /// &gt; **Note:** `default_messages` Is Required if not copying an existing Theme.
        /// </summary>
        [Input("defaultMessages")]
        public Input<string>? DefaultMessages { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/complete path. This page is used after a user has verified their email address by clicking the URL in the email. After FusionAuth has updated their user object to indicate that their email was verified, the browser is redirected to this page.
        /// </summary>
        [Input("emailComplete")]
        public Input<string>? EmailComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/send page. This page is used after a user has
        /// asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it.
        /// In this case, the user can provide their email address again and FusionAuth will resend the email. After the user
        /// submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Input("emailSend")]
        public Input<string>? EmailSend { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/sent path. This page is used after a user has asked for the verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Input("emailSent")]
        public Input<string>? EmailSent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/verification-required path. This page is rendered when a user is required to verify their email address prior to being allowed to proceed with login. This occurs when Unverified behavior is set to Gated in email verification settings on the Tenant.
        /// </summary>
        [Input("emailVerificationRequired")]
        public Input<string>? EmailVerificationRequired { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /email/verify path. This page is rendered when a user clicks the URL from the verification email and the verificationId has expired. FusionAuth expires verificationId after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.
        /// </summary>
        [Input("emailVerify")]
        public Input<string>? EmailVerify { get; set; }

        /// <summary>
        /// A FreeMarker template that contains all of the macros and templates used by the rest of the login Theme FreeMarker templates. This allows you to configure the general layout of your UI configuration and login theme without having to copy and paste HTML into each of the templates.
        /// </summary>
        [Input("helpers")]
        public Input<string>? Helpers { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the / path. This is the root landing page. This page is available to unauthenticated users and will be displayed whenever someone navigates to the FusionAuth host’s root page. Prior to version 1.27.0, navigating to this URL would redirect to /admin and would subsequently render the FusionAuth admin login page.
        /// </summary>
        [Input("index")]
        public Input<string>? Index { get; set; }

        [Input("localizedMessages")]
        private InputMap<object>? _localizedMessages;

        /// <summary>
        /// A Map of localized versions of the messages. The key is the Locale and the value is a properties file formatted String.
        /// </summary>
        public InputMap<object> LocalizedMessages
        {
            get => _localizedMessages ?? (_localizedMessages = new InputMap<object>());
            set => _localizedMessages = value;
        }

        /// <summary>
        /// A unique name for the Theme.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/authorize path. This is the main login page for FusionAuth and is used for all interactive OAuth2 and OpenID Connect workflows.
        /// </summary>
        [Input("oauth2Authorize")]
        public Input<string>? Oauth2Authorize { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/authorized-not-registered path. This page is rendered when a user is not registered and the Application configuration requires registration before FusionAuth will complete the redirect.
        /// </summary>
        [Input("oauth2AuthorizedNotRegistered")]
        public Input<string>? Oauth2AuthorizedNotRegistered { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/child-registration-not-allowed path. This page contains a form where a child must provide their parent’s email address to ask their parent to create an account for them in a Consent workflow.
        /// </summary>
        [Input("oauth2ChildRegistrationNotAllowed")]
        public Input<string>? Oauth2ChildRegistrationNotAllowed { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/child-registration-not-allowed-complete path. This page is rendered is rendered after a child provides their parent’s email address for parental consent in a Consent workflow.
        /// </summary>
        [Input("oauth2ChildRegistrationNotAllowedComplete")]
        public Input<string>? Oauth2ChildRegistrationNotAllowedComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/complete-registration path. This page contains a form that is used for users that have accounts but might be missing required fields.
        /// </summary>
        [Input("oauth2CompleteRegistration")]
        public Input<string>? Oauth2CompleteRegistration { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when a third party application requests scopes from the user.
        /// </summary>
        [Input("oauth2Consent")]
        public Input<string>? Oauth2Consent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/device path. This page contains a form for accepting an end user’s short code for the interactive portion of the OAuth Device Authorization Grant workflow.
        /// </summary>
        [Input("oauth2Device")]
        public Input<string>? Oauth2Device { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/device-complete path. This page contains a complete message indicating the device authentication has completed.
        /// </summary>
        [Input("oauth2DeviceComplete")]
        public Input<string>? Oauth2DeviceComplete { get; set; }

        /// <summary>
        /// This page is used if the user starts or is in the middle of the OAuth workflow and any type of error occurs. This could be caused by the user messing with the URL or internally some type of information wasn’t passed between the OAuth endpoints correctly. For example, if you are federating login to an external IdP and that IdP does not properly echo the state parameter, FusionAuth’s OAuth workflow will break and this page will be displayed.
        /// </summary>
        [Input("oauth2Error")]
        public Input<string>? Oauth2Error { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/logout page. This page is used if the user initiates a logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.
        /// </summary>
        [Input("oauth2Logout")]
        public Input<string>? Oauth2Logout { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/passwordless path. This page is rendered when the user starts the passwordless login workflow. The page renders the form where the user types in their email address.
        /// </summary>
        [Input("oauth2Passwordless")]
        public Input<string>? Oauth2Passwordless { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/register path. This page is used to register or sign up the user for the application when self-service registration is enabled.
        /// </summary>
        [Input("oauth2Register")]
        public Input<string>? Oauth2Register { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/start-idp-link path. This page is used if the Identity Provider is configured to have a pending link. The user is presented with the option to link their account with an existing FusionAuth user account.
        /// </summary>
        [Input("oauth2StartIdpLink")]
        public Input<string>? Oauth2StartIdpLink { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/two-factor path. This page is used if the user has two-factor authentication enabled and they need to type in their code again. FusionAuth will properly handle the processing on the back end. This page contains the form that the user will put their code into.
        /// </summary>
        [Input("oauth2TwoFactor")]
        public Input<string>? Oauth2TwoFactor { get; set; }

        /// <summary>
        /// A FreeMarker template that contains the OAuth2 two-factor enable form.
        /// </summary>
        [Input("oauth2TwoFactorEnable")]
        public Input<string>? Oauth2TwoFactorEnable { get; set; }

        /// <summary>
        /// A FreeMarker template that contains the OAuth2 two-factor enable complete form.
        /// </summary>
        [Input("oauth2TwoFactorEnableComplete")]
        public Input<string>? Oauth2TwoFactorEnableComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/two-factor-methods path. This page contains a form providing a user with their configured multi-factor authentication options that they may use to complete the authentication challenge.
        /// </summary>
        [Input("oauth2TwoFactorMethods")]
        public Input<string>? Oauth2TwoFactorMethods { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/wait path. This page is rendered when FusionAuth is waiting for an external provider to complete an out of band authentication request. For example, during a HYPR login this page will be displayed until the user completes authentication.
        /// </summary>
        [Input("oauth2Wait")]
        public Input<string>? Oauth2Wait { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn path. This page contains a form where a user can enter their loginId (username or email address) to authenticate with one of their registered WebAuthn passkeys. This page uses the WebAuthn bootstrap workflow.
        /// </summary>
        [Input("oauth2Webauthn")]
        public Input<string>? Oauth2Webauthn { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn-reauth path. This page contains a form that lists the WebAuthn passkeys currently available for re-authentication. A user can select one of the listed passkeys to authenticate using the corresponding passkey and user account.
        /// </summary>
        [Input("oauth2WebauthnReauth")]
        public Input<string>? Oauth2WebauthnReauth { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /oauth2/webauthn-reauth-enable path. This page contains two forms. One allows the user to select one of their existing WebAuthn passkeys to use for re-authentication. The other allows the user to register a new WebAuthn passkey for re-authentication.
        /// </summary>
        [Input("oauth2WebauthnReauthEnable")]
        public Input<string>? Oauth2WebauthnReauthEnable { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/change path. This page is used if the user is required to change their password or if they have requested a password reset. This page contains the form that allows the user to provide a new password.
        /// </summary>
        [Input("passwordChange")]
        public Input<string>? PasswordChange { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/complete path. This page is used after the user has successfully updated their password, or reset it. This page should instruct the user that their password was updated and that they need to login again.
        /// </summary>
        [Input("passwordComplete")]
        public Input<string>? PasswordComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/forgot path. This page is used when a user starts the forgot password workflow. This page renders the form where the user types in their email address.
        /// </summary>
        [Input("passwordForgot")]
        public Input<string>? PasswordForgot { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /password/sent path. This page is used when a user has submitted the forgot password form with their email. FusionAuth does not indicate back to the user if their email address was valid in order to prevent malicious activity that could reveal valid email addresses. Therefore, this page should indicate to the user that if their email was valid, they will receive an email shortly with a link to reset their password.
        /// </summary>
        [Input("passwordSent")]
        public Input<string>? PasswordSent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/complete path. This page is used after a user has verified their email address for a specific application (i.e. a user registration) by clicking the URL in the email. After FusionAuth has updated their registration object to indicate that their email was verified, the browser is redirected to this page.
        /// </summary>
        [Input("registrationComplete")]
        public Input<string>? RegistrationComplete { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/send page. This page is used after a
        /// user has asked for the application specific verification email to be resent. This can happen if the URL in the email
        /// expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend
        /// the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is
        /// redirected to this page.
        /// </summary>
        [Input("registrationSend")]
        public Input<string>? RegistrationSend { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/sent path. This page is used after a user has asked for the application specific verification email to be resent. This can happen if the URL in the email expired and the user clicked it. In this case, the user can provide their email address again and FusionAuth will resend the email. After the user submits their email and FusionAuth re-sends a verification email to them, the browser is redirected to this page.
        /// </summary>
        [Input("registrationSent")]
        public Input<string>? RegistrationSent { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/verification-required path. This page is rendered when a user is required to verify their registration prior to being allowed to proceed with the registration flow. This occurs when Unverified behavior is set to Gated in registration verification settings on the Application.
        /// </summary>
        [Input("registrationVerificationRequired")]
        public Input<string>? RegistrationVerificationRequired { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /registration/verify path. This page is used when a user clicks the URL from the application specific verification email and the verificationId has expired. FusionAuth expires verificationId after a period of time (which is configurable). If the user has a URL from the verification email that has expired, this page will be rendered and the error will be displayed to the user.
        /// </summary>
        [Input("registrationVerify")]
        public Input<string>? RegistrationVerify { get; set; }

        /// <summary>
        /// A FreeMarker template that is rendered when the user requests the /samlv2/logout path. This page is used if the user initiates a SAML logout. This page causes the user to be logged out of all associated applications via a front-channel mechanism before being redirected.
        /// </summary>
        [Input("samlv2Logout")]
        public Input<string>? Samlv2Logout { get; set; }

        /// <summary>
        /// The optional Id of an existing Theme to make a copy of. If present, the defaultMessages, localizedMessages, templates, and stylesheet from the source Theme will be copied to the new Theme.
        /// </summary>
        [Input("sourceThemeId")]
        public Input<string>? SourceThemeId { get; set; }

        /// <summary>
        /// A CSS stylesheet used to style the templates.
        /// </summary>
        [Input("stylesheet")]
        public Input<string>? Stylesheet { get; set; }

        /// <summary>
        /// An optional FreeMarker template that contains the unauthorized page.
        /// </summary>
        [Input("unauthorized")]
        public Input<string>? Unauthorized { get; set; }

        public FusionAuthThemeState()
        {
        }
        public static new FusionAuthThemeState Empty => new FusionAuthThemeState();
    }
}
