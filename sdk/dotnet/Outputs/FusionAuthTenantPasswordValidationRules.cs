// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth.Outputs
{

    [OutputType]
    public sealed class FusionAuthTenantPasswordValidationRules
    {
        public readonly Outputs.FusionAuthTenantPasswordValidationRulesBreachDetection? BreachDetection;
        /// <summary>
        /// The maximum length of a password when a new user is created or a user requests a password change. This value must be greater than 0 and less than or equal to 256. When `passwordEncryptionConfiguration.encryptionScheme` is equal to `bcrypt`, the maximum will be limited to 50.
        /// </summary>
        public readonly int? MaxLength;
        /// <summary>
        /// The minimum length of a password when a new user is created or a user requests a password change.
        /// </summary>
        public readonly int? MinLength;
        public readonly Outputs.FusionAuthTenantPasswordValidationRulesRememberPreviousPasswords? RememberPreviousPasswords;
        /// <summary>
        /// Whether to force the user to use at least one non-alphanumeric character.
        /// </summary>
        public readonly bool? RequireNonAlpha;
        /// <summary>
        /// Whether to force the user to use at least one number.
        /// </summary>
        public readonly bool? RequireNumber;
        /// <summary>
        /// Whether to force the user to use at least one uppercase and one lowercase character.
        /// </summary>
        public readonly bool? RequiredMixedCase;
        /// <summary>
        /// When enabled the userâ€™s password will be validated during login. If the password does not meet the currently configured validation rules the user will be required to change their password.
        /// </summary>
        public readonly bool? ValidateOnLogin;

        [OutputConstructor]
        private FusionAuthTenantPasswordValidationRules(
            Outputs.FusionAuthTenantPasswordValidationRulesBreachDetection? breachDetection,

            int? maxLength,

            int? minLength,

            Outputs.FusionAuthTenantPasswordValidationRulesRememberPreviousPasswords? rememberPreviousPasswords,

            bool? requireNonAlpha,

            bool? requireNumber,

            bool? requiredMixedCase,

            bool? validateOnLogin)
        {
            BreachDetection = breachDetection;
            MaxLength = maxLength;
            MinLength = minLength;
            RememberPreviousPasswords = rememberPreviousPasswords;
            RequireNonAlpha = requireNonAlpha;
            RequireNumber = requireNumber;
            RequiredMixedCase = requiredMixedCase;
            ValidateOnLogin = validateOnLogin;
        }
    }
}
