// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;
using Pulumi;

namespace theogravity.Fusionauth
{
    /// <summary>
    /// ## # Lambda Resource
    /// 
    /// Lambdas are user defined JavaScript functions that may be executed at runtime to perform various functions. Lambdas may be used to customize the claims returned in a JWT, reconcile a SAML v2 response or an OpenID Connect response when using these external identity providers.
    /// 
    /// [Lambdas API](https://fusionauth.io/docs/v1/tech/apis/lambdas)
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Fusionauth = theogravity.Fusionauth;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var preferred_Username = new Fusionauth.FusionAuthLambda("preferred Username", new()
    ///     {
    ///         Body = @"// Using the user and registration parameters add additional values to the jwt object.
    /// function populate(jwt, user, registration) {
    ///   jwt.preferred_username = registration.username;
    /// }
    ///   
    /// ",
    ///         Enabled = true,
    ///         Type = "JWTPopulate",
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [FusionauthResourceType("fusionauth:index/fusionAuthLambda:FusionAuthLambda")]
    public partial class FusionAuthLambda : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The lambda function body, a JavaScript function.
        /// </summary>
        [Output("body")]
        public Output<string> Body { get; private set; } = null!;

        /// <summary>
        /// Whether or not debug event logging is enabled for this Lambda.
        /// </summary>
        [Output("debug")]
        public Output<bool?> Debug { get; private set; } = null!;

        /// <summary>
        /// Whether or not this Lambda is enabled.
        /// </summary>
        [Output("enabled")]
        public Output<bool?> Enabled { get; private set; } = null!;

        /// <summary>
        /// The JavaScript execution engine for the lambda.
        /// </summary>
        [Output("engineType")]
        public Output<string?> EngineType { get; private set; } = null!;

        /// <summary>
        /// The Id to use for the new lambda. If not specified a secure random UUID will be generated.
        /// </summary>
        [Output("lambdaId")]
        public Output<string> LambdaId { get; private set; } = null!;

        /// <summary>
        /// The name of the lambda.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The lambda type. The possible values are:
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a FusionAuthLambda resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FusionAuthLambda(string name, FusionAuthLambdaArgs args, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthLambda:FusionAuthLambda", name, args ?? new FusionAuthLambdaArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FusionAuthLambda(string name, Input<string> id, FusionAuthLambdaState? state = null, CustomResourceOptions? options = null)
            : base("fusionauth:index/fusionAuthLambda:FusionAuthLambda", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "https://github.com/theogravity/pulumi-fusionauth/releases/download/v${VERSION}",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FusionAuthLambda resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FusionAuthLambda Get(string name, Input<string> id, FusionAuthLambdaState? state = null, CustomResourceOptions? options = null)
        {
            return new FusionAuthLambda(name, id, state, options);
        }
    }

    public sealed class FusionAuthLambdaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The lambda function body, a JavaScript function.
        /// </summary>
        [Input("body", required: true)]
        public Input<string> Body { get; set; } = null!;

        /// <summary>
        /// Whether or not debug event logging is enabled for this Lambda.
        /// </summary>
        [Input("debug")]
        public Input<bool>? Debug { get; set; }

        /// <summary>
        /// Whether or not this Lambda is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The JavaScript execution engine for the lambda.
        /// </summary>
        [Input("engineType")]
        public Input<string>? EngineType { get; set; }

        /// <summary>
        /// The Id to use for the new lambda. If not specified a secure random UUID will be generated.
        /// </summary>
        [Input("lambdaId")]
        public Input<string>? LambdaId { get; set; }

        /// <summary>
        /// The name of the lambda.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The lambda type. The possible values are:
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public FusionAuthLambdaArgs()
        {
        }
        public static new FusionAuthLambdaArgs Empty => new FusionAuthLambdaArgs();
    }

    public sealed class FusionAuthLambdaState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The lambda function body, a JavaScript function.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// Whether or not debug event logging is enabled for this Lambda.
        /// </summary>
        [Input("debug")]
        public Input<bool>? Debug { get; set; }

        /// <summary>
        /// Whether or not this Lambda is enabled.
        /// </summary>
        [Input("enabled")]
        public Input<bool>? Enabled { get; set; }

        /// <summary>
        /// The JavaScript execution engine for the lambda.
        /// </summary>
        [Input("engineType")]
        public Input<string>? EngineType { get; set; }

        /// <summary>
        /// The Id to use for the new lambda. If not specified a secure random UUID will be generated.
        /// </summary>
        [Input("lambdaId")]
        public Input<string>? LambdaId { get; set; }

        /// <summary>
        /// The name of the lambda.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The lambda type. The possible values are:
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public FusionAuthLambdaState()
        {
        }
        public static new FusionAuthLambdaState Empty => new FusionAuthLambdaState();
    }
}
