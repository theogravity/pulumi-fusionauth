// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fusionauth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # User Resource
//
// [Users API](https://fusionauth.io/docs/v1/tech/apis/users)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"displayName": "Johnny Boy",
//				"favoriteColors": []string{
//					"Red",
//					"Blue",
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = fusionauth.NewFusionAuthUser(ctx, "example", &fusionauth.FusionAuthUserArgs{
//				UserId:                 pulumi.String("4c4511df-0d0d-4029-8c2b-f6c01b9e138d"),
//				BirthDate:              pulumi.String("1976-05-30"),
//				Data:                   pulumi.String(json0),
//				Email:                  pulumi.String("example@fusionauth.io"),
//				EncryptionScheme:       pulumi.String("salted-sha256"),
//				Expiry:                 pulumi.Int(1571786483322),
//				FirstName:              pulumi.String("John"),
//				FullName:               pulumi.String("John Doe"),
//				ImageUrl:               pulumi.String("http://65.media.tumblr.com/tumblr_l7dbl0MHbU1qz50x3o1_500.png"),
//				LastName:               pulumi.String("Doe"),
//				MiddleName:             pulumi.String("William"),
//				MobilePhone:            pulumi.String("303-555-1234"),
//				PasswordChangeRequired: pulumi.Bool(false),
//				PreferredLanguages: pulumi.StringArray{
//					pulumi.String("en"),
//					pulumi.String("fr"),
//				},
//				Timezone:       pulumi.String("America/Denver"),
//				UsernameStatus: pulumi.String("ACTIVE"),
//				Username:       pulumi.String("johnny123"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FusionAuthUser struct {
	pulumi.CustomResourceState

	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	ApplicationId pulumi.StringPtrOutput `pulumi:"applicationId"`
	// An ISO-8601 formatted date of the User’s birthdate such as YYYY-MM-DD.
	BirthDate pulumi.StringPtrOutput `pulumi:"birthDate"`
	// An object that can hold any information about a User that should be persisted. Must be a JSON serialised string.
	Data pulumi.StringPtrOutput `pulumi:"data"`
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	DisableDomainBlock pulumi.BoolPtrOutput `pulumi:"disableDomainBlock"`
	// The value of the email address for this method.
	Email pulumi.StringPtrOutput `pulumi:"email"`
	// The method for encrypting the User’s password.
	EncryptionScheme pulumi.StringPtrOutput `pulumi:"encryptionScheme"`
	// The expiration instant of the User’s account. An expired user is not permitted to login.
	Expiry pulumi.IntPtrOutput `pulumi:"expiry"`
	// The first name of the User.
	FirstName pulumi.StringPtrOutput `pulumi:"firstName"`
	// The User’s full name as a separate field that is not calculated from firstName and lastName.
	FullName pulumi.StringPtrOutput `pulumi:"fullName"`
	// The URL that points to an image file that is the User’s profile image.
	ImageUrl pulumi.StringPtrOutput `pulumi:"imageUrl"`
	// The User’s last name.
	LastName pulumi.StringPtrOutput `pulumi:"lastName"`
	// The User’s middle name.
	MiddleName pulumi.StringPtrOutput `pulumi:"middleName"`
	// The value of the mobile phone for this method.
	MobilePhone pulumi.StringPtrOutput `pulumi:"mobilePhone"`
	// The email address of the user’s parent or guardian. This field is used to allow a child user to identify their parent so FusionAuth can make a request to the parent to confirm the parent relationship.
	ParentEmail pulumi.StringPtrOutput `pulumi:"parentEmail"`
	// The User’s plain texts password. This password will be hashed and the provided value will never be stored and cannot be retrieved.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// Indicates that the User’s password needs to be changed during their next login attempt.
	PasswordChangeRequired pulumi.BoolPtrOutput `pulumi:"passwordChangeRequired"`
	// An array of locale strings that give, in order, the User’s preferred languages. These are important for email templates and other localizable text.
	PreferredLanguages pulumi.StringArrayOutput `pulumi:"preferredLanguages"`
	// Indicates to FusionAuth to send the User an email asking them to set their password. The Email Template that is used is configured in the System Configuration setting for Set Password Email Template.
	SendSetPasswordEmail pulumi.BoolPtrOutput `pulumi:"sendSetPasswordEmail"`
	// Indicates to FusionAuth that it should skip email verification even if it is enabled. This is useful for creating admin or internal User accounts.
	SkipVerification pulumi.BoolPtrOutput `pulumi:"skipVerification"`
	// The unique Id of the tenant used to scope this API request.
	TenantId pulumi.StringPtrOutput `pulumi:"tenantId"`
	// The User’s preferred timezone. The string must be in an IANA time zone format.
	Timezone         pulumi.StringPtrOutput                   `pulumi:"timezone"`
	TwoFactorMethods FusionAuthUserTwoFactorMethodArrayOutput `pulumi:"twoFactorMethods"`
	// A list of recovery codes. These may be used in place of a code provided by an MFA factor. They are single use. If a recovery code is used in a disable request, all MFA methods are removed. If, after that, a Multi-Factor method is added, a new set of recovery codes will be generated.
	TwoFactorRecoveryCodes pulumi.StringArrayOutput `pulumi:"twoFactorRecoveryCodes"`
	// The Id to use for the new User. If not specified a secure random UUID will be generated..
	UserId pulumi.StringOutput `pulumi:"userId"`
	// The username of the User. The username is stored and returned as a case sensitive value, however a username is considered unique regardless of the case. bob is considered equal to BoB so either version of this username can be used whenever providing it as input to an API.
	Username pulumi.StringPtrOutput `pulumi:"username"`
	// The current status of the username. This is used if you are moderating usernames via CleanSpeak.
	UsernameStatus pulumi.StringPtrOutput `pulumi:"usernameStatus"`
}

// NewFusionAuthUser registers a new resource with the given unique name, arguments, and options.
func NewFusionAuthUser(ctx *pulumi.Context,
	name string, args *FusionAuthUserArgs, opts ...pulumi.ResourceOption) (*FusionAuthUser, error) {
	if args == nil {
		args = &FusionAuthUserArgs{}
	}

	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.TwoFactorRecoveryCodes != nil {
		args.TwoFactorRecoveryCodes = pulumi.ToSecret(args.TwoFactorRecoveryCodes).(pulumi.StringArrayInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"twoFactorRecoveryCodes",
	})
	opts = append(opts, secrets)
	opts = pkgResourceDefaultOpts(opts)
	var resource FusionAuthUser
	err := ctx.RegisterResource("fusionauth:index/fusionAuthUser:FusionAuthUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFusionAuthUser gets an existing FusionAuthUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFusionAuthUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FusionAuthUserState, opts ...pulumi.ResourceOption) (*FusionAuthUser, error) {
	var resource FusionAuthUser
	err := ctx.ReadResource("fusionauth:index/fusionAuthUser:FusionAuthUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FusionAuthUser resources.
type fusionAuthUserState struct {
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	ApplicationId *string `pulumi:"applicationId"`
	// An ISO-8601 formatted date of the User’s birthdate such as YYYY-MM-DD.
	BirthDate *string `pulumi:"birthDate"`
	// An object that can hold any information about a User that should be persisted. Must be a JSON serialised string.
	Data *string `pulumi:"data"`
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	DisableDomainBlock *bool `pulumi:"disableDomainBlock"`
	// The value of the email address for this method.
	Email *string `pulumi:"email"`
	// The method for encrypting the User’s password.
	EncryptionScheme *string `pulumi:"encryptionScheme"`
	// The expiration instant of the User’s account. An expired user is not permitted to login.
	Expiry *int `pulumi:"expiry"`
	// The first name of the User.
	FirstName *string `pulumi:"firstName"`
	// The User’s full name as a separate field that is not calculated from firstName and lastName.
	FullName *string `pulumi:"fullName"`
	// The URL that points to an image file that is the User’s profile image.
	ImageUrl *string `pulumi:"imageUrl"`
	// The User’s last name.
	LastName *string `pulumi:"lastName"`
	// The User’s middle name.
	MiddleName *string `pulumi:"middleName"`
	// The value of the mobile phone for this method.
	MobilePhone *string `pulumi:"mobilePhone"`
	// The email address of the user’s parent or guardian. This field is used to allow a child user to identify their parent so FusionAuth can make a request to the parent to confirm the parent relationship.
	ParentEmail *string `pulumi:"parentEmail"`
	// The User’s plain texts password. This password will be hashed and the provided value will never be stored and cannot be retrieved.
	Password *string `pulumi:"password"`
	// Indicates that the User’s password needs to be changed during their next login attempt.
	PasswordChangeRequired *bool `pulumi:"passwordChangeRequired"`
	// An array of locale strings that give, in order, the User’s preferred languages. These are important for email templates and other localizable text.
	PreferredLanguages []string `pulumi:"preferredLanguages"`
	// Indicates to FusionAuth to send the User an email asking them to set their password. The Email Template that is used is configured in the System Configuration setting for Set Password Email Template.
	SendSetPasswordEmail *bool `pulumi:"sendSetPasswordEmail"`
	// Indicates to FusionAuth that it should skip email verification even if it is enabled. This is useful for creating admin or internal User accounts.
	SkipVerification *bool `pulumi:"skipVerification"`
	// The unique Id of the tenant used to scope this API request.
	TenantId *string `pulumi:"tenantId"`
	// The User’s preferred timezone. The string must be in an IANA time zone format.
	Timezone         *string                         `pulumi:"timezone"`
	TwoFactorMethods []FusionAuthUserTwoFactorMethod `pulumi:"twoFactorMethods"`
	// A list of recovery codes. These may be used in place of a code provided by an MFA factor. They are single use. If a recovery code is used in a disable request, all MFA methods are removed. If, after that, a Multi-Factor method is added, a new set of recovery codes will be generated.
	TwoFactorRecoveryCodes []string `pulumi:"twoFactorRecoveryCodes"`
	// The Id to use for the new User. If not specified a secure random UUID will be generated..
	UserId *string `pulumi:"userId"`
	// The username of the User. The username is stored and returned as a case sensitive value, however a username is considered unique regardless of the case. bob is considered equal to BoB so either version of this username can be used whenever providing it as input to an API.
	Username *string `pulumi:"username"`
	// The current status of the username. This is used if you are moderating usernames via CleanSpeak.
	UsernameStatus *string `pulumi:"usernameStatus"`
}

type FusionAuthUserState struct {
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	ApplicationId pulumi.StringPtrInput
	// An ISO-8601 formatted date of the User’s birthdate such as YYYY-MM-DD.
	BirthDate pulumi.StringPtrInput
	// An object that can hold any information about a User that should be persisted. Must be a JSON serialised string.
	Data pulumi.StringPtrInput
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	DisableDomainBlock pulumi.BoolPtrInput
	// The value of the email address for this method.
	Email pulumi.StringPtrInput
	// The method for encrypting the User’s password.
	EncryptionScheme pulumi.StringPtrInput
	// The expiration instant of the User’s account. An expired user is not permitted to login.
	Expiry pulumi.IntPtrInput
	// The first name of the User.
	FirstName pulumi.StringPtrInput
	// The User’s full name as a separate field that is not calculated from firstName and lastName.
	FullName pulumi.StringPtrInput
	// The URL that points to an image file that is the User’s profile image.
	ImageUrl pulumi.StringPtrInput
	// The User’s last name.
	LastName pulumi.StringPtrInput
	// The User’s middle name.
	MiddleName pulumi.StringPtrInput
	// The value of the mobile phone for this method.
	MobilePhone pulumi.StringPtrInput
	// The email address of the user’s parent or guardian. This field is used to allow a child user to identify their parent so FusionAuth can make a request to the parent to confirm the parent relationship.
	ParentEmail pulumi.StringPtrInput
	// The User’s plain texts password. This password will be hashed and the provided value will never be stored and cannot be retrieved.
	Password pulumi.StringPtrInput
	// Indicates that the User’s password needs to be changed during their next login attempt.
	PasswordChangeRequired pulumi.BoolPtrInput
	// An array of locale strings that give, in order, the User’s preferred languages. These are important for email templates and other localizable text.
	PreferredLanguages pulumi.StringArrayInput
	// Indicates to FusionAuth to send the User an email asking them to set their password. The Email Template that is used is configured in the System Configuration setting for Set Password Email Template.
	SendSetPasswordEmail pulumi.BoolPtrInput
	// Indicates to FusionAuth that it should skip email verification even if it is enabled. This is useful for creating admin or internal User accounts.
	SkipVerification pulumi.BoolPtrInput
	// The unique Id of the tenant used to scope this API request.
	TenantId pulumi.StringPtrInput
	// The User’s preferred timezone. The string must be in an IANA time zone format.
	Timezone         pulumi.StringPtrInput
	TwoFactorMethods FusionAuthUserTwoFactorMethodArrayInput
	// A list of recovery codes. These may be used in place of a code provided by an MFA factor. They are single use. If a recovery code is used in a disable request, all MFA methods are removed. If, after that, a Multi-Factor method is added, a new set of recovery codes will be generated.
	TwoFactorRecoveryCodes pulumi.StringArrayInput
	// The Id to use for the new User. If not specified a secure random UUID will be generated..
	UserId pulumi.StringPtrInput
	// The username of the User. The username is stored and returned as a case sensitive value, however a username is considered unique regardless of the case. bob is considered equal to BoB so either version of this username can be used whenever providing it as input to an API.
	Username pulumi.StringPtrInput
	// The current status of the username. This is used if you are moderating usernames via CleanSpeak.
	UsernameStatus pulumi.StringPtrInput
}

func (FusionAuthUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthUserState)(nil)).Elem()
}

type fusionAuthUserArgs struct {
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	ApplicationId *string `pulumi:"applicationId"`
	// An ISO-8601 formatted date of the User’s birthdate such as YYYY-MM-DD.
	BirthDate *string `pulumi:"birthDate"`
	// An object that can hold any information about a User that should be persisted. Must be a JSON serialised string.
	Data *string `pulumi:"data"`
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	DisableDomainBlock *bool `pulumi:"disableDomainBlock"`
	// The value of the email address for this method.
	Email *string `pulumi:"email"`
	// The method for encrypting the User’s password.
	EncryptionScheme *string `pulumi:"encryptionScheme"`
	// The expiration instant of the User’s account. An expired user is not permitted to login.
	Expiry *int `pulumi:"expiry"`
	// The first name of the User.
	FirstName *string `pulumi:"firstName"`
	// The User’s full name as a separate field that is not calculated from firstName and lastName.
	FullName *string `pulumi:"fullName"`
	// The URL that points to an image file that is the User’s profile image.
	ImageUrl *string `pulumi:"imageUrl"`
	// The User’s last name.
	LastName *string `pulumi:"lastName"`
	// The User’s middle name.
	MiddleName *string `pulumi:"middleName"`
	// The value of the mobile phone for this method.
	MobilePhone *string `pulumi:"mobilePhone"`
	// The email address of the user’s parent or guardian. This field is used to allow a child user to identify their parent so FusionAuth can make a request to the parent to confirm the parent relationship.
	ParentEmail *string `pulumi:"parentEmail"`
	// The User’s plain texts password. This password will be hashed and the provided value will never be stored and cannot be retrieved.
	Password *string `pulumi:"password"`
	// Indicates that the User’s password needs to be changed during their next login attempt.
	PasswordChangeRequired *bool `pulumi:"passwordChangeRequired"`
	// An array of locale strings that give, in order, the User’s preferred languages. These are important for email templates and other localizable text.
	PreferredLanguages []string `pulumi:"preferredLanguages"`
	// Indicates to FusionAuth to send the User an email asking them to set their password. The Email Template that is used is configured in the System Configuration setting for Set Password Email Template.
	SendSetPasswordEmail *bool `pulumi:"sendSetPasswordEmail"`
	// Indicates to FusionAuth that it should skip email verification even if it is enabled. This is useful for creating admin or internal User accounts.
	SkipVerification *bool `pulumi:"skipVerification"`
	// The unique Id of the tenant used to scope this API request.
	TenantId *string `pulumi:"tenantId"`
	// The User’s preferred timezone. The string must be in an IANA time zone format.
	Timezone         *string                         `pulumi:"timezone"`
	TwoFactorMethods []FusionAuthUserTwoFactorMethod `pulumi:"twoFactorMethods"`
	// A list of recovery codes. These may be used in place of a code provided by an MFA factor. They are single use. If a recovery code is used in a disable request, all MFA methods are removed. If, after that, a Multi-Factor method is added, a new set of recovery codes will be generated.
	TwoFactorRecoveryCodes []string `pulumi:"twoFactorRecoveryCodes"`
	// The Id to use for the new User. If not specified a secure random UUID will be generated..
	UserId *string `pulumi:"userId"`
	// The username of the User. The username is stored and returned as a case sensitive value, however a username is considered unique regardless of the case. bob is considered equal to BoB so either version of this username can be used whenever providing it as input to an API.
	Username *string `pulumi:"username"`
	// The current status of the username. This is used if you are moderating usernames via CleanSpeak.
	UsernameStatus *string `pulumi:"usernameStatus"`
}

// The set of arguments for constructing a FusionAuthUser resource.
type FusionAuthUserArgs struct {
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	ApplicationId pulumi.StringPtrInput
	// An ISO-8601 formatted date of the User’s birthdate such as YYYY-MM-DD.
	BirthDate pulumi.StringPtrInput
	// An object that can hold any information about a User that should be persisted. Must be a JSON serialised string.
	Data pulumi.StringPtrInput
	// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
	DisableDomainBlock pulumi.BoolPtrInput
	// The value of the email address for this method.
	Email pulumi.StringPtrInput
	// The method for encrypting the User’s password.
	EncryptionScheme pulumi.StringPtrInput
	// The expiration instant of the User’s account. An expired user is not permitted to login.
	Expiry pulumi.IntPtrInput
	// The first name of the User.
	FirstName pulumi.StringPtrInput
	// The User’s full name as a separate field that is not calculated from firstName and lastName.
	FullName pulumi.StringPtrInput
	// The URL that points to an image file that is the User’s profile image.
	ImageUrl pulumi.StringPtrInput
	// The User’s last name.
	LastName pulumi.StringPtrInput
	// The User’s middle name.
	MiddleName pulumi.StringPtrInput
	// The value of the mobile phone for this method.
	MobilePhone pulumi.StringPtrInput
	// The email address of the user’s parent or guardian. This field is used to allow a child user to identify their parent so FusionAuth can make a request to the parent to confirm the parent relationship.
	ParentEmail pulumi.StringPtrInput
	// The User’s plain texts password. This password will be hashed and the provided value will never be stored and cannot be retrieved.
	Password pulumi.StringPtrInput
	// Indicates that the User’s password needs to be changed during their next login attempt.
	PasswordChangeRequired pulumi.BoolPtrInput
	// An array of locale strings that give, in order, the User’s preferred languages. These are important for email templates and other localizable text.
	PreferredLanguages pulumi.StringArrayInput
	// Indicates to FusionAuth to send the User an email asking them to set their password. The Email Template that is used is configured in the System Configuration setting for Set Password Email Template.
	SendSetPasswordEmail pulumi.BoolPtrInput
	// Indicates to FusionAuth that it should skip email verification even if it is enabled. This is useful for creating admin or internal User accounts.
	SkipVerification pulumi.BoolPtrInput
	// The unique Id of the tenant used to scope this API request.
	TenantId pulumi.StringPtrInput
	// The User’s preferred timezone. The string must be in an IANA time zone format.
	Timezone         pulumi.StringPtrInput
	TwoFactorMethods FusionAuthUserTwoFactorMethodArrayInput
	// A list of recovery codes. These may be used in place of a code provided by an MFA factor. They are single use. If a recovery code is used in a disable request, all MFA methods are removed. If, after that, a Multi-Factor method is added, a new set of recovery codes will be generated.
	TwoFactorRecoveryCodes pulumi.StringArrayInput
	// The Id to use for the new User. If not specified a secure random UUID will be generated..
	UserId pulumi.StringPtrInput
	// The username of the User. The username is stored and returned as a case sensitive value, however a username is considered unique regardless of the case. bob is considered equal to BoB so either version of this username can be used whenever providing it as input to an API.
	Username pulumi.StringPtrInput
	// The current status of the username. This is used if you are moderating usernames via CleanSpeak.
	UsernameStatus pulumi.StringPtrInput
}

func (FusionAuthUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthUserArgs)(nil)).Elem()
}

type FusionAuthUserInput interface {
	pulumi.Input

	ToFusionAuthUserOutput() FusionAuthUserOutput
	ToFusionAuthUserOutputWithContext(ctx context.Context) FusionAuthUserOutput
}

func (*FusionAuthUser) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthUser)(nil)).Elem()
}

func (i *FusionAuthUser) ToFusionAuthUserOutput() FusionAuthUserOutput {
	return i.ToFusionAuthUserOutputWithContext(context.Background())
}

func (i *FusionAuthUser) ToFusionAuthUserOutputWithContext(ctx context.Context) FusionAuthUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthUserOutput)
}

// FusionAuthUserArrayInput is an input type that accepts FusionAuthUserArray and FusionAuthUserArrayOutput values.
// You can construct a concrete instance of `FusionAuthUserArrayInput` via:
//
//	FusionAuthUserArray{ FusionAuthUserArgs{...} }
type FusionAuthUserArrayInput interface {
	pulumi.Input

	ToFusionAuthUserArrayOutput() FusionAuthUserArrayOutput
	ToFusionAuthUserArrayOutputWithContext(context.Context) FusionAuthUserArrayOutput
}

type FusionAuthUserArray []FusionAuthUserInput

func (FusionAuthUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthUser)(nil)).Elem()
}

func (i FusionAuthUserArray) ToFusionAuthUserArrayOutput() FusionAuthUserArrayOutput {
	return i.ToFusionAuthUserArrayOutputWithContext(context.Background())
}

func (i FusionAuthUserArray) ToFusionAuthUserArrayOutputWithContext(ctx context.Context) FusionAuthUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthUserArrayOutput)
}

// FusionAuthUserMapInput is an input type that accepts FusionAuthUserMap and FusionAuthUserMapOutput values.
// You can construct a concrete instance of `FusionAuthUserMapInput` via:
//
//	FusionAuthUserMap{ "key": FusionAuthUserArgs{...} }
type FusionAuthUserMapInput interface {
	pulumi.Input

	ToFusionAuthUserMapOutput() FusionAuthUserMapOutput
	ToFusionAuthUserMapOutputWithContext(context.Context) FusionAuthUserMapOutput
}

type FusionAuthUserMap map[string]FusionAuthUserInput

func (FusionAuthUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthUser)(nil)).Elem()
}

func (i FusionAuthUserMap) ToFusionAuthUserMapOutput() FusionAuthUserMapOutput {
	return i.ToFusionAuthUserMapOutputWithContext(context.Background())
}

func (i FusionAuthUserMap) ToFusionAuthUserMapOutputWithContext(ctx context.Context) FusionAuthUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthUserMapOutput)
}

type FusionAuthUserOutput struct{ *pulumi.OutputState }

func (FusionAuthUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthUser)(nil)).Elem()
}

func (o FusionAuthUserOutput) ToFusionAuthUserOutput() FusionAuthUserOutput {
	return o
}

func (o FusionAuthUserOutput) ToFusionAuthUserOutputWithContext(ctx context.Context) FusionAuthUserOutput {
	return o
}

// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
func (o FusionAuthUserOutput) ApplicationId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.ApplicationId }).(pulumi.StringPtrOutput)
}

// An ISO-8601 formatted date of the User’s birthdate such as YYYY-MM-DD.
func (o FusionAuthUserOutput) BirthDate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.BirthDate }).(pulumi.StringPtrOutput)
}

// An object that can hold any information about a User that should be persisted. Must be a JSON serialised string.
func (o FusionAuthUserOutput) Data() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.Data }).(pulumi.StringPtrOutput)
}

// An optional Application Id. When this value is provided, it will be used to resolve an application specific email template if you have configured transactional emails such as setup password, email verification and others.
func (o FusionAuthUserOutput) DisableDomainBlock() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.BoolPtrOutput { return v.DisableDomainBlock }).(pulumi.BoolPtrOutput)
}

// The value of the email address for this method.
func (o FusionAuthUserOutput) Email() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.Email }).(pulumi.StringPtrOutput)
}

// The method for encrypting the User’s password.
func (o FusionAuthUserOutput) EncryptionScheme() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.EncryptionScheme }).(pulumi.StringPtrOutput)
}

// The expiration instant of the User’s account. An expired user is not permitted to login.
func (o FusionAuthUserOutput) Expiry() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.IntPtrOutput { return v.Expiry }).(pulumi.IntPtrOutput)
}

// The first name of the User.
func (o FusionAuthUserOutput) FirstName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.FirstName }).(pulumi.StringPtrOutput)
}

// The User’s full name as a separate field that is not calculated from firstName and lastName.
func (o FusionAuthUserOutput) FullName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.FullName }).(pulumi.StringPtrOutput)
}

// The URL that points to an image file that is the User’s profile image.
func (o FusionAuthUserOutput) ImageUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.ImageUrl }).(pulumi.StringPtrOutput)
}

// The User’s last name.
func (o FusionAuthUserOutput) LastName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.LastName }).(pulumi.StringPtrOutput)
}

// The User’s middle name.
func (o FusionAuthUserOutput) MiddleName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.MiddleName }).(pulumi.StringPtrOutput)
}

// The value of the mobile phone for this method.
func (o FusionAuthUserOutput) MobilePhone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.MobilePhone }).(pulumi.StringPtrOutput)
}

// The email address of the user’s parent or guardian. This field is used to allow a child user to identify their parent so FusionAuth can make a request to the parent to confirm the parent relationship.
func (o FusionAuthUserOutput) ParentEmail() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.ParentEmail }).(pulumi.StringPtrOutput)
}

// The User’s plain texts password. This password will be hashed and the provided value will never be stored and cannot be retrieved.
func (o FusionAuthUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// Indicates that the User’s password needs to be changed during their next login attempt.
func (o FusionAuthUserOutput) PasswordChangeRequired() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.BoolPtrOutput { return v.PasswordChangeRequired }).(pulumi.BoolPtrOutput)
}

// An array of locale strings that give, in order, the User’s preferred languages. These are important for email templates and other localizable text.
func (o FusionAuthUserOutput) PreferredLanguages() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringArrayOutput { return v.PreferredLanguages }).(pulumi.StringArrayOutput)
}

// Indicates to FusionAuth to send the User an email asking them to set their password. The Email Template that is used is configured in the System Configuration setting for Set Password Email Template.
func (o FusionAuthUserOutput) SendSetPasswordEmail() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.BoolPtrOutput { return v.SendSetPasswordEmail }).(pulumi.BoolPtrOutput)
}

// Indicates to FusionAuth that it should skip email verification even if it is enabled. This is useful for creating admin or internal User accounts.
func (o FusionAuthUserOutput) SkipVerification() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.BoolPtrOutput { return v.SkipVerification }).(pulumi.BoolPtrOutput)
}

// The unique Id of the tenant used to scope this API request.
func (o FusionAuthUserOutput) TenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.TenantId }).(pulumi.StringPtrOutput)
}

// The User’s preferred timezone. The string must be in an IANA time zone format.
func (o FusionAuthUserOutput) Timezone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.Timezone }).(pulumi.StringPtrOutput)
}

func (o FusionAuthUserOutput) TwoFactorMethods() FusionAuthUserTwoFactorMethodArrayOutput {
	return o.ApplyT(func(v *FusionAuthUser) FusionAuthUserTwoFactorMethodArrayOutput { return v.TwoFactorMethods }).(FusionAuthUserTwoFactorMethodArrayOutput)
}

// A list of recovery codes. These may be used in place of a code provided by an MFA factor. They are single use. If a recovery code is used in a disable request, all MFA methods are removed. If, after that, a Multi-Factor method is added, a new set of recovery codes will be generated.
func (o FusionAuthUserOutput) TwoFactorRecoveryCodes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringArrayOutput { return v.TwoFactorRecoveryCodes }).(pulumi.StringArrayOutput)
}

// The Id to use for the new User. If not specified a secure random UUID will be generated..
func (o FusionAuthUserOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

// The username of the User. The username is stored and returned as a case sensitive value, however a username is considered unique regardless of the case. bob is considered equal to BoB so either version of this username can be used whenever providing it as input to an API.
func (o FusionAuthUserOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.Username }).(pulumi.StringPtrOutput)
}

// The current status of the username. This is used if you are moderating usernames via CleanSpeak.
func (o FusionAuthUserOutput) UsernameStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthUser) pulumi.StringPtrOutput { return v.UsernameStatus }).(pulumi.StringPtrOutput)
}

type FusionAuthUserArrayOutput struct{ *pulumi.OutputState }

func (FusionAuthUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthUser)(nil)).Elem()
}

func (o FusionAuthUserArrayOutput) ToFusionAuthUserArrayOutput() FusionAuthUserArrayOutput {
	return o
}

func (o FusionAuthUserArrayOutput) ToFusionAuthUserArrayOutputWithContext(ctx context.Context) FusionAuthUserArrayOutput {
	return o
}

func (o FusionAuthUserArrayOutput) Index(i pulumi.IntInput) FusionAuthUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FusionAuthUser {
		return vs[0].([]*FusionAuthUser)[vs[1].(int)]
	}).(FusionAuthUserOutput)
}

type FusionAuthUserMapOutput struct{ *pulumi.OutputState }

func (FusionAuthUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthUser)(nil)).Elem()
}

func (o FusionAuthUserMapOutput) ToFusionAuthUserMapOutput() FusionAuthUserMapOutput {
	return o
}

func (o FusionAuthUserMapOutput) ToFusionAuthUserMapOutputWithContext(ctx context.Context) FusionAuthUserMapOutput {
	return o
}

func (o FusionAuthUserMapOutput) MapIndex(k pulumi.StringInput) FusionAuthUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FusionAuthUser {
		return vs[0].(map[string]*FusionAuthUser)[vs[1].(string)]
	}).(FusionAuthUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthUserInput)(nil)).Elem(), &FusionAuthUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthUserArrayInput)(nil)).Elem(), FusionAuthUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthUserMapInput)(nil)).Elem(), FusionAuthUserMap{})
	pulumi.RegisterOutputType(FusionAuthUserOutput{})
	pulumi.RegisterOutputType(FusionAuthUserArrayOutput{})
	pulumi.RegisterOutputType(FusionAuthUserMapOutput{})
}
