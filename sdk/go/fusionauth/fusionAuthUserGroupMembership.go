// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fusionauth

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth/internal"
)

// ## # User Group Membership Resource
//
// [User Group Membership API](https://fusionauth.io/docs/apis/groups#request-5)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fusionauth.NewFusionAuthUserGroupMembership(ctx, "this", &fusionauth.FusionAuthUserGroupMembershipArgs{
//				GroupId: pulumi.Any(fusionauth_group.This.Id),
//				UserId:  pulumi.Any(fusionauth_user.This.Id),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FusionAuthUserGroupMembership struct {
	pulumi.CustomResourceState

	// An object that can hold any information about the User for this membership that should be persisted.
	Data pulumi.StringMapOutput `pulumi:"data"`
	// The Id of the Group of this membership.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId pulumi.StringOutput `pulumi:"membershipId"`
	// "The Id of the User of this membership.
	UserId pulumi.StringOutput `pulumi:"userId"`
}

// NewFusionAuthUserGroupMembership registers a new resource with the given unique name, arguments, and options.
func NewFusionAuthUserGroupMembership(ctx *pulumi.Context,
	name string, args *FusionAuthUserGroupMembershipArgs, opts ...pulumi.ResourceOption) (*FusionAuthUserGroupMembership, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.UserId == nil {
		return nil, errors.New("invalid value for required argument 'UserId'")
	}
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("fusionauth:index/userGroupMembership:UserGroupMembership"),
		},
	})
	opts = append(opts, aliases)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource FusionAuthUserGroupMembership
	err := ctx.RegisterResource("fusionauth:index/fusionAuthUserGroupMembership:FusionAuthUserGroupMembership", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFusionAuthUserGroupMembership gets an existing FusionAuthUserGroupMembership resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFusionAuthUserGroupMembership(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FusionAuthUserGroupMembershipState, opts ...pulumi.ResourceOption) (*FusionAuthUserGroupMembership, error) {
	var resource FusionAuthUserGroupMembership
	err := ctx.ReadResource("fusionauth:index/fusionAuthUserGroupMembership:FusionAuthUserGroupMembership", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FusionAuthUserGroupMembership resources.
type fusionAuthUserGroupMembershipState struct {
	// An object that can hold any information about the User for this membership that should be persisted.
	Data map[string]string `pulumi:"data"`
	// The Id of the Group of this membership.
	GroupId *string `pulumi:"groupId"`
	// The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId *string `pulumi:"membershipId"`
	// "The Id of the User of this membership.
	UserId *string `pulumi:"userId"`
}

type FusionAuthUserGroupMembershipState struct {
	// An object that can hold any information about the User for this membership that should be persisted.
	Data pulumi.StringMapInput
	// The Id of the Group of this membership.
	GroupId pulumi.StringPtrInput
	// The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId pulumi.StringPtrInput
	// "The Id of the User of this membership.
	UserId pulumi.StringPtrInput
}

func (FusionAuthUserGroupMembershipState) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthUserGroupMembershipState)(nil)).Elem()
}

type fusionAuthUserGroupMembershipArgs struct {
	// An object that can hold any information about the User for this membership that should be persisted.
	Data map[string]string `pulumi:"data"`
	// The Id of the Group of this membership.
	GroupId string `pulumi:"groupId"`
	// The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId *string `pulumi:"membershipId"`
	// "The Id of the User of this membership.
	UserId string `pulumi:"userId"`
}

// The set of arguments for constructing a FusionAuthUserGroupMembership resource.
type FusionAuthUserGroupMembershipArgs struct {
	// An object that can hold any information about the User for this membership that should be persisted.
	Data pulumi.StringMapInput
	// The Id of the Group of this membership.
	GroupId pulumi.StringInput
	// The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId pulumi.StringPtrInput
	// "The Id of the User of this membership.
	UserId pulumi.StringInput
}

func (FusionAuthUserGroupMembershipArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthUserGroupMembershipArgs)(nil)).Elem()
}

type FusionAuthUserGroupMembershipInput interface {
	pulumi.Input

	ToFusionAuthUserGroupMembershipOutput() FusionAuthUserGroupMembershipOutput
	ToFusionAuthUserGroupMembershipOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipOutput
}

func (*FusionAuthUserGroupMembership) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthUserGroupMembership)(nil)).Elem()
}

func (i *FusionAuthUserGroupMembership) ToFusionAuthUserGroupMembershipOutput() FusionAuthUserGroupMembershipOutput {
	return i.ToFusionAuthUserGroupMembershipOutputWithContext(context.Background())
}

func (i *FusionAuthUserGroupMembership) ToFusionAuthUserGroupMembershipOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthUserGroupMembershipOutput)
}

// FusionAuthUserGroupMembershipArrayInput is an input type that accepts FusionAuthUserGroupMembershipArray and FusionAuthUserGroupMembershipArrayOutput values.
// You can construct a concrete instance of `FusionAuthUserGroupMembershipArrayInput` via:
//
//	FusionAuthUserGroupMembershipArray{ FusionAuthUserGroupMembershipArgs{...} }
type FusionAuthUserGroupMembershipArrayInput interface {
	pulumi.Input

	ToFusionAuthUserGroupMembershipArrayOutput() FusionAuthUserGroupMembershipArrayOutput
	ToFusionAuthUserGroupMembershipArrayOutputWithContext(context.Context) FusionAuthUserGroupMembershipArrayOutput
}

type FusionAuthUserGroupMembershipArray []FusionAuthUserGroupMembershipInput

func (FusionAuthUserGroupMembershipArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthUserGroupMembership)(nil)).Elem()
}

func (i FusionAuthUserGroupMembershipArray) ToFusionAuthUserGroupMembershipArrayOutput() FusionAuthUserGroupMembershipArrayOutput {
	return i.ToFusionAuthUserGroupMembershipArrayOutputWithContext(context.Background())
}

func (i FusionAuthUserGroupMembershipArray) ToFusionAuthUserGroupMembershipArrayOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthUserGroupMembershipArrayOutput)
}

// FusionAuthUserGroupMembershipMapInput is an input type that accepts FusionAuthUserGroupMembershipMap and FusionAuthUserGroupMembershipMapOutput values.
// You can construct a concrete instance of `FusionAuthUserGroupMembershipMapInput` via:
//
//	FusionAuthUserGroupMembershipMap{ "key": FusionAuthUserGroupMembershipArgs{...} }
type FusionAuthUserGroupMembershipMapInput interface {
	pulumi.Input

	ToFusionAuthUserGroupMembershipMapOutput() FusionAuthUserGroupMembershipMapOutput
	ToFusionAuthUserGroupMembershipMapOutputWithContext(context.Context) FusionAuthUserGroupMembershipMapOutput
}

type FusionAuthUserGroupMembershipMap map[string]FusionAuthUserGroupMembershipInput

func (FusionAuthUserGroupMembershipMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthUserGroupMembership)(nil)).Elem()
}

func (i FusionAuthUserGroupMembershipMap) ToFusionAuthUserGroupMembershipMapOutput() FusionAuthUserGroupMembershipMapOutput {
	return i.ToFusionAuthUserGroupMembershipMapOutputWithContext(context.Background())
}

func (i FusionAuthUserGroupMembershipMap) ToFusionAuthUserGroupMembershipMapOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthUserGroupMembershipMapOutput)
}

type FusionAuthUserGroupMembershipOutput struct{ *pulumi.OutputState }

func (FusionAuthUserGroupMembershipOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthUserGroupMembership)(nil)).Elem()
}

func (o FusionAuthUserGroupMembershipOutput) ToFusionAuthUserGroupMembershipOutput() FusionAuthUserGroupMembershipOutput {
	return o
}

func (o FusionAuthUserGroupMembershipOutput) ToFusionAuthUserGroupMembershipOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipOutput {
	return o
}

// An object that can hold any information about the User for this membership that should be persisted.
func (o FusionAuthUserGroupMembershipOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v *FusionAuthUserGroupMembership) pulumi.StringMapOutput { return v.Data }).(pulumi.StringMapOutput)
}

// The Id of the Group of this membership.
func (o FusionAuthUserGroupMembershipOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthUserGroupMembership) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// The Id of the User Group Membership. If not provided, a random UUID will be generated.
func (o FusionAuthUserGroupMembershipOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthUserGroupMembership) pulumi.StringOutput { return v.MembershipId }).(pulumi.StringOutput)
}

// "The Id of the User of this membership.
func (o FusionAuthUserGroupMembershipOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthUserGroupMembership) pulumi.StringOutput { return v.UserId }).(pulumi.StringOutput)
}

type FusionAuthUserGroupMembershipArrayOutput struct{ *pulumi.OutputState }

func (FusionAuthUserGroupMembershipArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthUserGroupMembership)(nil)).Elem()
}

func (o FusionAuthUserGroupMembershipArrayOutput) ToFusionAuthUserGroupMembershipArrayOutput() FusionAuthUserGroupMembershipArrayOutput {
	return o
}

func (o FusionAuthUserGroupMembershipArrayOutput) ToFusionAuthUserGroupMembershipArrayOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipArrayOutput {
	return o
}

func (o FusionAuthUserGroupMembershipArrayOutput) Index(i pulumi.IntInput) FusionAuthUserGroupMembershipOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FusionAuthUserGroupMembership {
		return vs[0].([]*FusionAuthUserGroupMembership)[vs[1].(int)]
	}).(FusionAuthUserGroupMembershipOutput)
}

type FusionAuthUserGroupMembershipMapOutput struct{ *pulumi.OutputState }

func (FusionAuthUserGroupMembershipMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthUserGroupMembership)(nil)).Elem()
}

func (o FusionAuthUserGroupMembershipMapOutput) ToFusionAuthUserGroupMembershipMapOutput() FusionAuthUserGroupMembershipMapOutput {
	return o
}

func (o FusionAuthUserGroupMembershipMapOutput) ToFusionAuthUserGroupMembershipMapOutputWithContext(ctx context.Context) FusionAuthUserGroupMembershipMapOutput {
	return o
}

func (o FusionAuthUserGroupMembershipMapOutput) MapIndex(k pulumi.StringInput) FusionAuthUserGroupMembershipOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FusionAuthUserGroupMembership {
		return vs[0].(map[string]*FusionAuthUserGroupMembership)[vs[1].(string)]
	}).(FusionAuthUserGroupMembershipOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthUserGroupMembershipInput)(nil)).Elem(), &FusionAuthUserGroupMembership{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthUserGroupMembershipArrayInput)(nil)).Elem(), FusionAuthUserGroupMembershipArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthUserGroupMembershipMapInput)(nil)).Elem(), FusionAuthUserGroupMembershipMap{})
	pulumi.RegisterOutputType(FusionAuthUserGroupMembershipOutput{})
	pulumi.RegisterOutputType(FusionAuthUserGroupMembershipArrayOutput{})
	pulumi.RegisterOutputType(FusionAuthUserGroupMembershipMapOutput{})
}
