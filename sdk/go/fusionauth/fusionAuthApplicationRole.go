// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fusionauth

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Application Role Resource
//
// This Resource is used to create a role for an Application.
//
// [Application Roles API](https://fusionauth.io/docs/v1/tech/apis/applications)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fusionauth.NewFusionAuthApplicationRole(ctx, "myAppAdminRole", &fusionauth.FusionAuthApplicationRoleArgs{
//				ApplicationId: pulumi.Any(fusionauth_application.My_app.Id),
//				Description:   pulumi.String(""),
//				IsDefault:     pulumi.Bool(false),
//				IsSuperRole:   pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FusionAuthApplicationRole struct {
	pulumi.CustomResourceState

	// ID of the application that this role is for.
	ApplicationId pulumi.StringOutput `pulumi:"applicationId"`
	// A description for the role.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Whether or not the Role is a default role. A default role is automatically assigned to a user during registration if no roles are provided.
	IsDefault pulumi.BoolPtrOutput `pulumi:"isDefault"`
	// Whether or not the Role is a considered to be a super user role. This is a marker to indicate that it supersedes all other roles. FusionAuth will attempt to enforce this contract when using the web UI, it is not enforced programmatically when using the API.
	IsSuperRole pulumi.BoolPtrOutput `pulumi:"isSuperRole"`
	// The name of the Role.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewFusionAuthApplicationRole registers a new resource with the given unique name, arguments, and options.
func NewFusionAuthApplicationRole(ctx *pulumi.Context,
	name string, args *FusionAuthApplicationRoleArgs, opts ...pulumi.ResourceOption) (*FusionAuthApplicationRole, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApplicationId == nil {
		return nil, errors.New("invalid value for required argument 'ApplicationId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FusionAuthApplicationRole
	err := ctx.RegisterResource("fusionauth:index/fusionAuthApplicationRole:FusionAuthApplicationRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFusionAuthApplicationRole gets an existing FusionAuthApplicationRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFusionAuthApplicationRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FusionAuthApplicationRoleState, opts ...pulumi.ResourceOption) (*FusionAuthApplicationRole, error) {
	var resource FusionAuthApplicationRole
	err := ctx.ReadResource("fusionauth:index/fusionAuthApplicationRole:FusionAuthApplicationRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FusionAuthApplicationRole resources.
type fusionAuthApplicationRoleState struct {
	// ID of the application that this role is for.
	ApplicationId *string `pulumi:"applicationId"`
	// A description for the role.
	Description *string `pulumi:"description"`
	// Whether or not the Role is a default role. A default role is automatically assigned to a user during registration if no roles are provided.
	IsDefault *bool `pulumi:"isDefault"`
	// Whether or not the Role is a considered to be a super user role. This is a marker to indicate that it supersedes all other roles. FusionAuth will attempt to enforce this contract when using the web UI, it is not enforced programmatically when using the API.
	IsSuperRole *bool `pulumi:"isSuperRole"`
	// The name of the Role.
	Name *string `pulumi:"name"`
}

type FusionAuthApplicationRoleState struct {
	// ID of the application that this role is for.
	ApplicationId pulumi.StringPtrInput
	// A description for the role.
	Description pulumi.StringPtrInput
	// Whether or not the Role is a default role. A default role is automatically assigned to a user during registration if no roles are provided.
	IsDefault pulumi.BoolPtrInput
	// Whether or not the Role is a considered to be a super user role. This is a marker to indicate that it supersedes all other roles. FusionAuth will attempt to enforce this contract when using the web UI, it is not enforced programmatically when using the API.
	IsSuperRole pulumi.BoolPtrInput
	// The name of the Role.
	Name pulumi.StringPtrInput
}

func (FusionAuthApplicationRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthApplicationRoleState)(nil)).Elem()
}

type fusionAuthApplicationRoleArgs struct {
	// ID of the application that this role is for.
	ApplicationId string `pulumi:"applicationId"`
	// A description for the role.
	Description *string `pulumi:"description"`
	// Whether or not the Role is a default role. A default role is automatically assigned to a user during registration if no roles are provided.
	IsDefault *bool `pulumi:"isDefault"`
	// Whether or not the Role is a considered to be a super user role. This is a marker to indicate that it supersedes all other roles. FusionAuth will attempt to enforce this contract when using the web UI, it is not enforced programmatically when using the API.
	IsSuperRole *bool `pulumi:"isSuperRole"`
	// The name of the Role.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a FusionAuthApplicationRole resource.
type FusionAuthApplicationRoleArgs struct {
	// ID of the application that this role is for.
	ApplicationId pulumi.StringInput
	// A description for the role.
	Description pulumi.StringPtrInput
	// Whether or not the Role is a default role. A default role is automatically assigned to a user during registration if no roles are provided.
	IsDefault pulumi.BoolPtrInput
	// Whether or not the Role is a considered to be a super user role. This is a marker to indicate that it supersedes all other roles. FusionAuth will attempt to enforce this contract when using the web UI, it is not enforced programmatically when using the API.
	IsSuperRole pulumi.BoolPtrInput
	// The name of the Role.
	Name pulumi.StringPtrInput
}

func (FusionAuthApplicationRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthApplicationRoleArgs)(nil)).Elem()
}

type FusionAuthApplicationRoleInput interface {
	pulumi.Input

	ToFusionAuthApplicationRoleOutput() FusionAuthApplicationRoleOutput
	ToFusionAuthApplicationRoleOutputWithContext(ctx context.Context) FusionAuthApplicationRoleOutput
}

func (*FusionAuthApplicationRole) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthApplicationRole)(nil)).Elem()
}

func (i *FusionAuthApplicationRole) ToFusionAuthApplicationRoleOutput() FusionAuthApplicationRoleOutput {
	return i.ToFusionAuthApplicationRoleOutputWithContext(context.Background())
}

func (i *FusionAuthApplicationRole) ToFusionAuthApplicationRoleOutputWithContext(ctx context.Context) FusionAuthApplicationRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthApplicationRoleOutput)
}

// FusionAuthApplicationRoleArrayInput is an input type that accepts FusionAuthApplicationRoleArray and FusionAuthApplicationRoleArrayOutput values.
// You can construct a concrete instance of `FusionAuthApplicationRoleArrayInput` via:
//
//	FusionAuthApplicationRoleArray{ FusionAuthApplicationRoleArgs{...} }
type FusionAuthApplicationRoleArrayInput interface {
	pulumi.Input

	ToFusionAuthApplicationRoleArrayOutput() FusionAuthApplicationRoleArrayOutput
	ToFusionAuthApplicationRoleArrayOutputWithContext(context.Context) FusionAuthApplicationRoleArrayOutput
}

type FusionAuthApplicationRoleArray []FusionAuthApplicationRoleInput

func (FusionAuthApplicationRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthApplicationRole)(nil)).Elem()
}

func (i FusionAuthApplicationRoleArray) ToFusionAuthApplicationRoleArrayOutput() FusionAuthApplicationRoleArrayOutput {
	return i.ToFusionAuthApplicationRoleArrayOutputWithContext(context.Background())
}

func (i FusionAuthApplicationRoleArray) ToFusionAuthApplicationRoleArrayOutputWithContext(ctx context.Context) FusionAuthApplicationRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthApplicationRoleArrayOutput)
}

// FusionAuthApplicationRoleMapInput is an input type that accepts FusionAuthApplicationRoleMap and FusionAuthApplicationRoleMapOutput values.
// You can construct a concrete instance of `FusionAuthApplicationRoleMapInput` via:
//
//	FusionAuthApplicationRoleMap{ "key": FusionAuthApplicationRoleArgs{...} }
type FusionAuthApplicationRoleMapInput interface {
	pulumi.Input

	ToFusionAuthApplicationRoleMapOutput() FusionAuthApplicationRoleMapOutput
	ToFusionAuthApplicationRoleMapOutputWithContext(context.Context) FusionAuthApplicationRoleMapOutput
}

type FusionAuthApplicationRoleMap map[string]FusionAuthApplicationRoleInput

func (FusionAuthApplicationRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthApplicationRole)(nil)).Elem()
}

func (i FusionAuthApplicationRoleMap) ToFusionAuthApplicationRoleMapOutput() FusionAuthApplicationRoleMapOutput {
	return i.ToFusionAuthApplicationRoleMapOutputWithContext(context.Background())
}

func (i FusionAuthApplicationRoleMap) ToFusionAuthApplicationRoleMapOutputWithContext(ctx context.Context) FusionAuthApplicationRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthApplicationRoleMapOutput)
}

type FusionAuthApplicationRoleOutput struct{ *pulumi.OutputState }

func (FusionAuthApplicationRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthApplicationRole)(nil)).Elem()
}

func (o FusionAuthApplicationRoleOutput) ToFusionAuthApplicationRoleOutput() FusionAuthApplicationRoleOutput {
	return o
}

func (o FusionAuthApplicationRoleOutput) ToFusionAuthApplicationRoleOutputWithContext(ctx context.Context) FusionAuthApplicationRoleOutput {
	return o
}

// ID of the application that this role is for.
func (o FusionAuthApplicationRoleOutput) ApplicationId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthApplicationRole) pulumi.StringOutput { return v.ApplicationId }).(pulumi.StringOutput)
}

// A description for the role.
func (o FusionAuthApplicationRoleOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthApplicationRole) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Whether or not the Role is a default role. A default role is automatically assigned to a user during registration if no roles are provided.
func (o FusionAuthApplicationRoleOutput) IsDefault() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FusionAuthApplicationRole) pulumi.BoolPtrOutput { return v.IsDefault }).(pulumi.BoolPtrOutput)
}

// Whether or not the Role is a considered to be a super user role. This is a marker to indicate that it supersedes all other roles. FusionAuth will attempt to enforce this contract when using the web UI, it is not enforced programmatically when using the API.
func (o FusionAuthApplicationRoleOutput) IsSuperRole() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FusionAuthApplicationRole) pulumi.BoolPtrOutput { return v.IsSuperRole }).(pulumi.BoolPtrOutput)
}

// The name of the Role.
func (o FusionAuthApplicationRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthApplicationRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type FusionAuthApplicationRoleArrayOutput struct{ *pulumi.OutputState }

func (FusionAuthApplicationRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthApplicationRole)(nil)).Elem()
}

func (o FusionAuthApplicationRoleArrayOutput) ToFusionAuthApplicationRoleArrayOutput() FusionAuthApplicationRoleArrayOutput {
	return o
}

func (o FusionAuthApplicationRoleArrayOutput) ToFusionAuthApplicationRoleArrayOutputWithContext(ctx context.Context) FusionAuthApplicationRoleArrayOutput {
	return o
}

func (o FusionAuthApplicationRoleArrayOutput) Index(i pulumi.IntInput) FusionAuthApplicationRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FusionAuthApplicationRole {
		return vs[0].([]*FusionAuthApplicationRole)[vs[1].(int)]
	}).(FusionAuthApplicationRoleOutput)
}

type FusionAuthApplicationRoleMapOutput struct{ *pulumi.OutputState }

func (FusionAuthApplicationRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthApplicationRole)(nil)).Elem()
}

func (o FusionAuthApplicationRoleMapOutput) ToFusionAuthApplicationRoleMapOutput() FusionAuthApplicationRoleMapOutput {
	return o
}

func (o FusionAuthApplicationRoleMapOutput) ToFusionAuthApplicationRoleMapOutputWithContext(ctx context.Context) FusionAuthApplicationRoleMapOutput {
	return o
}

func (o FusionAuthApplicationRoleMapOutput) MapIndex(k pulumi.StringInput) FusionAuthApplicationRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FusionAuthApplicationRole {
		return vs[0].(map[string]*FusionAuthApplicationRole)[vs[1].(string)]
	}).(FusionAuthApplicationRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthApplicationRoleInput)(nil)).Elem(), &FusionAuthApplicationRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthApplicationRoleArrayInput)(nil)).Elem(), FusionAuthApplicationRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthApplicationRoleMapInput)(nil)).Elem(), FusionAuthApplicationRoleMap{})
	pulumi.RegisterOutputType(FusionAuthApplicationRoleOutput{})
	pulumi.RegisterOutputType(FusionAuthApplicationRoleArrayOutput{})
	pulumi.RegisterOutputType(FusionAuthApplicationRoleMapOutput{})
}
