// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fusionauth

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## # Tenant Resource
//
// A FusionAuth Tenant is a named object that represents a discrete namespace for Users, Applications and Groups. A user is unique by email address or username within a tenant.
//
// Tenants may be useful to support a multi-tenant application where you wish to use a single instance of FusionAuth but require the ability to have duplicate users across the tenants in your own application. In this scenario a user may exist multiple times with the same email address and different passwords across tenants.
//
// Tenants may also be useful in a test or staging environment to allow multiple users to call APIs and create and modify users without possibility of collision.
//
// [Tenants API](https://fusionauth.io/docs/v1/tech/apis/tenants)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fusionauth.NewFusionAuthTenant(ctx, "example", &fusionauth.FusionAuthTenantArgs{
//				ConnectorPolicies: fusionauth.FusionAuthTenantConnectorPolicyArray{
//					&fusionauth.FusionAuthTenantConnectorPolicyArgs{
//						ConnectorId: pulumi.String("b57b3d0f-f7a4-4831-a838-549717362ea8"),
//						Domains: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//						Migrate: pulumi.Bool(false),
//					},
//				},
//				EmailConfiguration: &fusionauth.FusionAuthTenantEmailConfigurationArgs{
//					ForgotPasswordEmailTemplateId: pulumi.Any(fusionauth_email.ForgotPassword_Example.Id),
//					Host:                          pulumi.String("smtp.sendgrid.net"),
//					Password:                      pulumi.String("password"),
//					PasswordlessEmailTemplateId:   pulumi.Any(fusionauth_email.PasswordlessLogin_Example.Id),
//					Port:                          pulumi.Int(587),
//					Security:                      pulumi.String("TLS"),
//					SetPasswordEmailTemplateId:    pulumi.Any(fusionauth_email.SetupPassword_Example.Id),
//					Username:                      pulumi.String("username"),
//					VerifyEmail:                   pulumi.Bool(true),
//					VerifyEmailWhenChanged:        pulumi.Bool(true),
//				},
//				EventConfigurations: fusionauth.FusionAuthTenantEventConfigurationArray{
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.delete"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("None"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.create"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("None"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.update"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("None"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.deactivate"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.bulk.create"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.reactivate"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("jwt.refresh-token.revoke"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("jwt.refresh"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("jwt.public-key.update"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.login.success"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.login.failed"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.registration.create"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.registration.update"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.registration.delete"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.registration.verified"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.email.verified"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.identity-provider.link"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.identity-provider.unlink"),
//						Enabled:         pulumi.Bool(true),
//						TransactionType: pulumi.String("Any"),
//					},
//					&fusionauth.FusionAuthTenantEventConfigurationArgs{
//						Event:           pulumi.String("user.password.breach"),
//						Enabled:         pulumi.Bool(false),
//						TransactionType: pulumi.String("None"),
//					},
//				},
//				ExternalIdentifierConfiguration: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationArgs{
//					AuthorizationGrantIdTimeToLiveInSeconds: pulumi.Int(30),
//					ChangePasswordIdGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationChangePasswordIdGeneratorArgs{
//						Length: pulumi.Int(32),
//						Type:   pulumi.String("randomBytes"),
//					},
//					ChangePasswordIdTimeToLiveInSeconds: pulumi.Int(600),
//					DeviceCodeTimeToLiveInSeconds:       pulumi.Int(1800),
//					DeviceUserCodeIdGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationDeviceUserCodeIdGeneratorArgs{
//						Length: pulumi.Int(6),
//						Type:   pulumi.String("randomAlphaNumeric"),
//					},
//					EmailVerificationIdGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationEmailVerificationIdGeneratorArgs{
//						Length: pulumi.Int(32),
//						Type:   pulumi.String("randomBytes"),
//					},
//					EmailVerificationIdTimeToLiveInSeconds: pulumi.Int(86400),
//					EmailVerificationOneTimeCodeGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationEmailVerificationOneTimeCodeGeneratorArgs{
//						Length: pulumi.Int(6),
//						Type:   pulumi.String("randomAlphaNumeric"),
//					},
//					ExternalAuthenticationIdTimeToLiveInSeconds: pulumi.Int(300),
//					OneTimePasswordTimeToLiveInSeconds:          pulumi.Int(60),
//					PasswordlessLoginGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationPasswordlessLoginGeneratorArgs{
//						Length: pulumi.Int(32),
//						Type:   pulumi.String("randomBytes"),
//					},
//					PasswordlessLoginTimeToLiveInSeconds: pulumi.Int(600),
//					RegistrationVerificationIdGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationRegistrationVerificationIdGeneratorArgs{
//						Length: pulumi.Int(32),
//						Type:   pulumi.String("randomBytes"),
//					},
//					RegistrationVerificationIdTimeToLiveInSeconds: pulumi.Int(86400),
//					RegistrationVerificationOneTimeCodeGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationRegistrationVerificationOneTimeCodeGeneratorArgs{
//						Length: pulumi.Int(6),
//						Type:   pulumi.String("randomAlphaNumeric"),
//					},
//					SamlV2AuthnRequestIdTtlSeconds: pulumi.Int(300),
//					SetupPasswordIdGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationSetupPasswordIdGeneratorArgs{
//						Length: pulumi.Int(32),
//						Type:   pulumi.String("randomBytes"),
//					},
//					SetupPasswordIdTimeToLiveInSeconds: pulumi.Int(86400),
//					TwoFactorIdTimeToLiveInSeconds:     pulumi.Int(300),
//					TwoFactorOneTimeCodeIdGenerator: &fusionauth.FusionAuthTenantExternalIdentifierConfigurationTwoFactorOneTimeCodeIdGeneratorArgs{
//						Length: pulumi.Int(6),
//						Type:   pulumi.String("randomDigits"),
//					},
//					TwoFactorTrustIdTimeToLiveInSeconds: pulumi.Int(2592000),
//				},
//				FailedAuthenticationConfiguration: &fusionauth.FusionAuthTenantFailedAuthenticationConfigurationArgs{
//					ActionDuration:      pulumi.Int(3),
//					ActionDurationUnit:  pulumi.String("MINUTES"),
//					ResetCountInSeconds: pulumi.Int(60),
//					TooManyAttempts:     pulumi.Int(5),
//				},
//				FamilyConfiguration: &fusionauth.FusionAuthTenantFamilyConfigurationArgs{
//					AllowChildRegistrations:    pulumi.Bool(true),
//					DeleteOrphanedAccounts:     pulumi.Bool(false),
//					DeleteOrphanedAccountsDays: pulumi.Int(30),
//					Enabled:                    pulumi.Bool(true),
//					MaximumChildAge:            pulumi.Int(12),
//					MinimumOwnerAge:            pulumi.Int(21),
//					ParentEmailRequired:        pulumi.Bool(false),
//				},
//				FormConfiguration: &fusionauth.FusionAuthTenantFormConfigurationArgs{
//					AdminUserFormId: pulumi.String("e92751a5-25f4-4bca-ad91-66cdf67725d2"),
//				},
//				HttpSessionMaxInactiveInterval: pulumi.Int(3600),
//				Issuer:                         pulumi.String("https://example.com"),
//				JwtConfigurations: fusionauth.FusionAuthTenantJwtConfigurationArray{
//					&fusionauth.FusionAuthTenantJwtConfigurationArgs{
//						AccessTokenKeyId:                pulumi.Any(fusionauth_key.Accesstoken.Id),
//						IdTokenKeyId:                    pulumi.Any(fusionauth_key.Idtoken.Id),
//						RefreshTokenTimeToLiveInMinutes: pulumi.Int(43200),
//						TimeToLiveInSeconds:             pulumi.Int(3600),
//					},
//				},
//				LoginConfiguration: &fusionauth.FusionAuthTenantLoginConfigurationArgs{
//					RequireAuthentication: pulumi.Bool(true),
//				},
//				MaximumPasswordAge: &fusionauth.FusionAuthTenantMaximumPasswordAgeArgs{
//					Days:    pulumi.Int(180),
//					Enabled: pulumi.Bool(false),
//				},
//				MinimumPasswordAge: &fusionauth.FusionAuthTenantMinimumPasswordAgeArgs{
//					Enabled: pulumi.Bool(false),
//					Seconds: pulumi.Int(30),
//				},
//				OauthConfigurations: fusionauth.FusionAuthTenantOauthConfigurationArray{
//					&fusionauth.FusionAuthTenantOauthConfigurationArgs{
//						ClientCredentialsAccessTokenPopulateLambdaId: pulumi.Any(fusionauth_lambda.Client_jwt_populate.Id),
//					},
//				},
//				PasswordEncryptionConfigurations: fusionauth.FusionAuthTenantPasswordEncryptionConfigurationArray{
//					&fusionauth.FusionAuthTenantPasswordEncryptionConfigurationArgs{
//						EncryptionScheme:              pulumi.String("salted-pbkdf2-hmac-sha256"),
//						EncryptionSchemeFactor:        pulumi.Int(24000),
//						ModifyEncryptionSchemeOnLogin: pulumi.Bool(false),
//					},
//				},
//				PasswordValidationRules: &fusionauth.FusionAuthTenantPasswordValidationRulesArgs{
//					MaxLength: pulumi.Int(256),
//					MinLength: pulumi.Int(7),
//					RememberPreviousPasswords: &fusionauth.FusionAuthTenantPasswordValidationRulesRememberPreviousPasswordsArgs{
//						Count:   pulumi.Int(1),
//						Enabled: pulumi.Bool(false),
//					},
//					RequiredMixedCase: pulumi.Bool(false),
//					RequireNonAlpha:   pulumi.Bool(false),
//					RequireNumber:     pulumi.Bool(false),
//					ValidateOnLogin:   pulumi.Bool(false),
//				},
//				ThemeId: pulumi.Any(fusionauth_theme.Example_theme.Id),
//				UserDeletePolicy: &fusionauth.FusionAuthTenantUserDeletePolicyArgs{
//					UnverifiedEnabled:              pulumi.Bool(false),
//					UnverifiedNumberOfDaysToRetain: pulumi.Int(30),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type FusionAuthTenant struct {
	pulumi.CustomResourceState

	AccessControlConfiguration FusionAuthTenantAccessControlConfigurationPtrOutput `pulumi:"accessControlConfiguration"`
	CaptchaConfiguration       FusionAuthTenantCaptchaConfigurationOutput          `pulumi:"captchaConfiguration"`
	// A list of Connector policies. Users will be authenticated against Connectors in order. Each Connector can be included in this list at most once and must exist.
	ConnectorPolicies FusionAuthTenantConnectorPolicyArrayOutput `pulumi:"connectorPolicies"`
	// An object that can hold any information about the Tenant that should be persisted.
	Data                              pulumi.MapOutput                                        `pulumi:"data"`
	EmailConfiguration                FusionAuthTenantEmailConfigurationOutput                `pulumi:"emailConfiguration"`
	EventConfigurations               FusionAuthTenantEventConfigurationArrayOutput           `pulumi:"eventConfigurations"`
	ExternalIdentifierConfiguration   FusionAuthTenantExternalIdentifierConfigurationOutput   `pulumi:"externalIdentifierConfiguration"`
	FailedAuthenticationConfiguration FusionAuthTenantFailedAuthenticationConfigurationOutput `pulumi:"failedAuthenticationConfiguration"`
	FamilyConfiguration               FusionAuthTenantFamilyConfigurationOutput               `pulumi:"familyConfiguration"`
	FormConfiguration                 FusionAuthTenantFormConfigurationOutput                 `pulumi:"formConfiguration"`
	// Time in seconds until an inactive session will be invalidated. Used when creating a new session in the FusionAuth OAuth frontend.
	HttpSessionMaxInactiveInterval pulumi.IntPtrOutput `pulumi:"httpSessionMaxInactiveInterval"`
	// The named issuer used to sign tokens, this is generally your public fully qualified domain.
	Issuer             pulumi.StringOutput                         `pulumi:"issuer"`
	JwtConfigurations  FusionAuthTenantJwtConfigurationArrayOutput `pulumi:"jwtConfigurations"`
	LoginConfiguration FusionAuthTenantLoginConfigurationPtrOutput `pulumi:"loginConfiguration"`
	// The logout redirect URL when sending the user’s browser to the /oauth2/logout URI of the FusionAuth Front End. This value is only used when a logout URL is not defined in your Application.
	LogoutUrl                pulumi.StringPtrOutput                         `pulumi:"logoutUrl"`
	MaximumPasswordAge       FusionAuthTenantMaximumPasswordAgeOutput       `pulumi:"maximumPasswordAge"`
	MinimumPasswordAge       FusionAuthTenantMinimumPasswordAgeOutput       `pulumi:"minimumPasswordAge"`
	MultiFactorConfiguration FusionAuthTenantMultiFactorConfigurationOutput `pulumi:"multiFactorConfiguration"`
	// The unique name of the Tenant.
	Name                             pulumi.StringOutput                                        `pulumi:"name"`
	OauthConfigurations              FusionAuthTenantOauthConfigurationArrayOutput              `pulumi:"oauthConfigurations"`
	PasswordEncryptionConfigurations FusionAuthTenantPasswordEncryptionConfigurationArrayOutput `pulumi:"passwordEncryptionConfigurations"`
	PasswordValidationRules          FusionAuthTenantPasswordValidationRulesOutput              `pulumi:"passwordValidationRules"`
	// The optional Id of an existing Tenant to make a copy of. If present, the tenant.id and tenant.name values of the request body will be applied to the new Tenant, all other values will be copied from the source Tenant to the new Tenant.
	SourceTenantId pulumi.StringPtrOutput `pulumi:"sourceTenantId"`
	// The Id to use for the new Tenant. If not specified a secure random UUID will be generated.
	TenantId pulumi.StringOutput `pulumi:"tenantId"`
	// The unique Id of the theme to be used to style the login page and other end user templates.
	ThemeId               pulumi.StringOutput                         `pulumi:"themeId"`
	UserDeletePolicy      FusionAuthTenantUserDeletePolicyOutput      `pulumi:"userDeletePolicy"`
	UsernameConfiguration FusionAuthTenantUsernameConfigurationOutput `pulumi:"usernameConfiguration"`
}

// NewFusionAuthTenant registers a new resource with the given unique name, arguments, and options.
func NewFusionAuthTenant(ctx *pulumi.Context,
	name string, args *FusionAuthTenantArgs, opts ...pulumi.ResourceOption) (*FusionAuthTenant, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.EmailConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'EmailConfiguration'")
	}
	if args.ExternalIdentifierConfiguration == nil {
		return nil, errors.New("invalid value for required argument 'ExternalIdentifierConfiguration'")
	}
	if args.Issuer == nil {
		return nil, errors.New("invalid value for required argument 'Issuer'")
	}
	if args.JwtConfigurations == nil {
		return nil, errors.New("invalid value for required argument 'JwtConfigurations'")
	}
	if args.ThemeId == nil {
		return nil, errors.New("invalid value for required argument 'ThemeId'")
	}
	opts = pkgResourceDefaultOpts(opts)
	var resource FusionAuthTenant
	err := ctx.RegisterResource("fusionauth:index/fusionAuthTenant:FusionAuthTenant", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetFusionAuthTenant gets an existing FusionAuthTenant resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFusionAuthTenant(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *FusionAuthTenantState, opts ...pulumi.ResourceOption) (*FusionAuthTenant, error) {
	var resource FusionAuthTenant
	err := ctx.ReadResource("fusionauth:index/fusionAuthTenant:FusionAuthTenant", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering FusionAuthTenant resources.
type fusionAuthTenantState struct {
	AccessControlConfiguration *FusionAuthTenantAccessControlConfiguration `pulumi:"accessControlConfiguration"`
	CaptchaConfiguration       *FusionAuthTenantCaptchaConfiguration       `pulumi:"captchaConfiguration"`
	// A list of Connector policies. Users will be authenticated against Connectors in order. Each Connector can be included in this list at most once and must exist.
	ConnectorPolicies []FusionAuthTenantConnectorPolicy `pulumi:"connectorPolicies"`
	// An object that can hold any information about the Tenant that should be persisted.
	Data                              map[string]interface{}                             `pulumi:"data"`
	EmailConfiguration                *FusionAuthTenantEmailConfiguration                `pulumi:"emailConfiguration"`
	EventConfigurations               []FusionAuthTenantEventConfiguration               `pulumi:"eventConfigurations"`
	ExternalIdentifierConfiguration   *FusionAuthTenantExternalIdentifierConfiguration   `pulumi:"externalIdentifierConfiguration"`
	FailedAuthenticationConfiguration *FusionAuthTenantFailedAuthenticationConfiguration `pulumi:"failedAuthenticationConfiguration"`
	FamilyConfiguration               *FusionAuthTenantFamilyConfiguration               `pulumi:"familyConfiguration"`
	FormConfiguration                 *FusionAuthTenantFormConfiguration                 `pulumi:"formConfiguration"`
	// Time in seconds until an inactive session will be invalidated. Used when creating a new session in the FusionAuth OAuth frontend.
	HttpSessionMaxInactiveInterval *int `pulumi:"httpSessionMaxInactiveInterval"`
	// The named issuer used to sign tokens, this is generally your public fully qualified domain.
	Issuer             *string                             `pulumi:"issuer"`
	JwtConfigurations  []FusionAuthTenantJwtConfiguration  `pulumi:"jwtConfigurations"`
	LoginConfiguration *FusionAuthTenantLoginConfiguration `pulumi:"loginConfiguration"`
	// The logout redirect URL when sending the user’s browser to the /oauth2/logout URI of the FusionAuth Front End. This value is only used when a logout URL is not defined in your Application.
	LogoutUrl                *string                                   `pulumi:"logoutUrl"`
	MaximumPasswordAge       *FusionAuthTenantMaximumPasswordAge       `pulumi:"maximumPasswordAge"`
	MinimumPasswordAge       *FusionAuthTenantMinimumPasswordAge       `pulumi:"minimumPasswordAge"`
	MultiFactorConfiguration *FusionAuthTenantMultiFactorConfiguration `pulumi:"multiFactorConfiguration"`
	// The unique name of the Tenant.
	Name                             *string                                           `pulumi:"name"`
	OauthConfigurations              []FusionAuthTenantOauthConfiguration              `pulumi:"oauthConfigurations"`
	PasswordEncryptionConfigurations []FusionAuthTenantPasswordEncryptionConfiguration `pulumi:"passwordEncryptionConfigurations"`
	PasswordValidationRules          *FusionAuthTenantPasswordValidationRules          `pulumi:"passwordValidationRules"`
	// The optional Id of an existing Tenant to make a copy of. If present, the tenant.id and tenant.name values of the request body will be applied to the new Tenant, all other values will be copied from the source Tenant to the new Tenant.
	SourceTenantId *string `pulumi:"sourceTenantId"`
	// The Id to use for the new Tenant. If not specified a secure random UUID will be generated.
	TenantId *string `pulumi:"tenantId"`
	// The unique Id of the theme to be used to style the login page and other end user templates.
	ThemeId               *string                                `pulumi:"themeId"`
	UserDeletePolicy      *FusionAuthTenantUserDeletePolicy      `pulumi:"userDeletePolicy"`
	UsernameConfiguration *FusionAuthTenantUsernameConfiguration `pulumi:"usernameConfiguration"`
}

type FusionAuthTenantState struct {
	AccessControlConfiguration FusionAuthTenantAccessControlConfigurationPtrInput
	CaptchaConfiguration       FusionAuthTenantCaptchaConfigurationPtrInput
	// A list of Connector policies. Users will be authenticated against Connectors in order. Each Connector can be included in this list at most once and must exist.
	ConnectorPolicies FusionAuthTenantConnectorPolicyArrayInput
	// An object that can hold any information about the Tenant that should be persisted.
	Data                              pulumi.MapInput
	EmailConfiguration                FusionAuthTenantEmailConfigurationPtrInput
	EventConfigurations               FusionAuthTenantEventConfigurationArrayInput
	ExternalIdentifierConfiguration   FusionAuthTenantExternalIdentifierConfigurationPtrInput
	FailedAuthenticationConfiguration FusionAuthTenantFailedAuthenticationConfigurationPtrInput
	FamilyConfiguration               FusionAuthTenantFamilyConfigurationPtrInput
	FormConfiguration                 FusionAuthTenantFormConfigurationPtrInput
	// Time in seconds until an inactive session will be invalidated. Used when creating a new session in the FusionAuth OAuth frontend.
	HttpSessionMaxInactiveInterval pulumi.IntPtrInput
	// The named issuer used to sign tokens, this is generally your public fully qualified domain.
	Issuer             pulumi.StringPtrInput
	JwtConfigurations  FusionAuthTenantJwtConfigurationArrayInput
	LoginConfiguration FusionAuthTenantLoginConfigurationPtrInput
	// The logout redirect URL when sending the user’s browser to the /oauth2/logout URI of the FusionAuth Front End. This value is only used when a logout URL is not defined in your Application.
	LogoutUrl                pulumi.StringPtrInput
	MaximumPasswordAge       FusionAuthTenantMaximumPasswordAgePtrInput
	MinimumPasswordAge       FusionAuthTenantMinimumPasswordAgePtrInput
	MultiFactorConfiguration FusionAuthTenantMultiFactorConfigurationPtrInput
	// The unique name of the Tenant.
	Name                             pulumi.StringPtrInput
	OauthConfigurations              FusionAuthTenantOauthConfigurationArrayInput
	PasswordEncryptionConfigurations FusionAuthTenantPasswordEncryptionConfigurationArrayInput
	PasswordValidationRules          FusionAuthTenantPasswordValidationRulesPtrInput
	// The optional Id of an existing Tenant to make a copy of. If present, the tenant.id and tenant.name values of the request body will be applied to the new Tenant, all other values will be copied from the source Tenant to the new Tenant.
	SourceTenantId pulumi.StringPtrInput
	// The Id to use for the new Tenant. If not specified a secure random UUID will be generated.
	TenantId pulumi.StringPtrInput
	// The unique Id of the theme to be used to style the login page and other end user templates.
	ThemeId               pulumi.StringPtrInput
	UserDeletePolicy      FusionAuthTenantUserDeletePolicyPtrInput
	UsernameConfiguration FusionAuthTenantUsernameConfigurationPtrInput
}

func (FusionAuthTenantState) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthTenantState)(nil)).Elem()
}

type fusionAuthTenantArgs struct {
	AccessControlConfiguration *FusionAuthTenantAccessControlConfiguration `pulumi:"accessControlConfiguration"`
	CaptchaConfiguration       *FusionAuthTenantCaptchaConfiguration       `pulumi:"captchaConfiguration"`
	// A list of Connector policies. Users will be authenticated against Connectors in order. Each Connector can be included in this list at most once and must exist.
	ConnectorPolicies []FusionAuthTenantConnectorPolicy `pulumi:"connectorPolicies"`
	// An object that can hold any information about the Tenant that should be persisted.
	Data                              map[string]interface{}                             `pulumi:"data"`
	EmailConfiguration                FusionAuthTenantEmailConfiguration                 `pulumi:"emailConfiguration"`
	EventConfigurations               []FusionAuthTenantEventConfiguration               `pulumi:"eventConfigurations"`
	ExternalIdentifierConfiguration   FusionAuthTenantExternalIdentifierConfiguration    `pulumi:"externalIdentifierConfiguration"`
	FailedAuthenticationConfiguration *FusionAuthTenantFailedAuthenticationConfiguration `pulumi:"failedAuthenticationConfiguration"`
	FamilyConfiguration               *FusionAuthTenantFamilyConfiguration               `pulumi:"familyConfiguration"`
	FormConfiguration                 *FusionAuthTenantFormConfiguration                 `pulumi:"formConfiguration"`
	// Time in seconds until an inactive session will be invalidated. Used when creating a new session in the FusionAuth OAuth frontend.
	HttpSessionMaxInactiveInterval *int `pulumi:"httpSessionMaxInactiveInterval"`
	// The named issuer used to sign tokens, this is generally your public fully qualified domain.
	Issuer             string                              `pulumi:"issuer"`
	JwtConfigurations  []FusionAuthTenantJwtConfiguration  `pulumi:"jwtConfigurations"`
	LoginConfiguration *FusionAuthTenantLoginConfiguration `pulumi:"loginConfiguration"`
	// The logout redirect URL when sending the user’s browser to the /oauth2/logout URI of the FusionAuth Front End. This value is only used when a logout URL is not defined in your Application.
	LogoutUrl                *string                                   `pulumi:"logoutUrl"`
	MaximumPasswordAge       *FusionAuthTenantMaximumPasswordAge       `pulumi:"maximumPasswordAge"`
	MinimumPasswordAge       *FusionAuthTenantMinimumPasswordAge       `pulumi:"minimumPasswordAge"`
	MultiFactorConfiguration *FusionAuthTenantMultiFactorConfiguration `pulumi:"multiFactorConfiguration"`
	// The unique name of the Tenant.
	Name                             *string                                           `pulumi:"name"`
	OauthConfigurations              []FusionAuthTenantOauthConfiguration              `pulumi:"oauthConfigurations"`
	PasswordEncryptionConfigurations []FusionAuthTenantPasswordEncryptionConfiguration `pulumi:"passwordEncryptionConfigurations"`
	PasswordValidationRules          *FusionAuthTenantPasswordValidationRules          `pulumi:"passwordValidationRules"`
	// The optional Id of an existing Tenant to make a copy of. If present, the tenant.id and tenant.name values of the request body will be applied to the new Tenant, all other values will be copied from the source Tenant to the new Tenant.
	SourceTenantId *string `pulumi:"sourceTenantId"`
	// The Id to use for the new Tenant. If not specified a secure random UUID will be generated.
	TenantId *string `pulumi:"tenantId"`
	// The unique Id of the theme to be used to style the login page and other end user templates.
	ThemeId               string                                 `pulumi:"themeId"`
	UserDeletePolicy      *FusionAuthTenantUserDeletePolicy      `pulumi:"userDeletePolicy"`
	UsernameConfiguration *FusionAuthTenantUsernameConfiguration `pulumi:"usernameConfiguration"`
}

// The set of arguments for constructing a FusionAuthTenant resource.
type FusionAuthTenantArgs struct {
	AccessControlConfiguration FusionAuthTenantAccessControlConfigurationPtrInput
	CaptchaConfiguration       FusionAuthTenantCaptchaConfigurationPtrInput
	// A list of Connector policies. Users will be authenticated against Connectors in order. Each Connector can be included in this list at most once and must exist.
	ConnectorPolicies FusionAuthTenantConnectorPolicyArrayInput
	// An object that can hold any information about the Tenant that should be persisted.
	Data                              pulumi.MapInput
	EmailConfiguration                FusionAuthTenantEmailConfigurationInput
	EventConfigurations               FusionAuthTenantEventConfigurationArrayInput
	ExternalIdentifierConfiguration   FusionAuthTenantExternalIdentifierConfigurationInput
	FailedAuthenticationConfiguration FusionAuthTenantFailedAuthenticationConfigurationPtrInput
	FamilyConfiguration               FusionAuthTenantFamilyConfigurationPtrInput
	FormConfiguration                 FusionAuthTenantFormConfigurationPtrInput
	// Time in seconds until an inactive session will be invalidated. Used when creating a new session in the FusionAuth OAuth frontend.
	HttpSessionMaxInactiveInterval pulumi.IntPtrInput
	// The named issuer used to sign tokens, this is generally your public fully qualified domain.
	Issuer             pulumi.StringInput
	JwtConfigurations  FusionAuthTenantJwtConfigurationArrayInput
	LoginConfiguration FusionAuthTenantLoginConfigurationPtrInput
	// The logout redirect URL when sending the user’s browser to the /oauth2/logout URI of the FusionAuth Front End. This value is only used when a logout URL is not defined in your Application.
	LogoutUrl                pulumi.StringPtrInput
	MaximumPasswordAge       FusionAuthTenantMaximumPasswordAgePtrInput
	MinimumPasswordAge       FusionAuthTenantMinimumPasswordAgePtrInput
	MultiFactorConfiguration FusionAuthTenantMultiFactorConfigurationPtrInput
	// The unique name of the Tenant.
	Name                             pulumi.StringPtrInput
	OauthConfigurations              FusionAuthTenantOauthConfigurationArrayInput
	PasswordEncryptionConfigurations FusionAuthTenantPasswordEncryptionConfigurationArrayInput
	PasswordValidationRules          FusionAuthTenantPasswordValidationRulesPtrInput
	// The optional Id of an existing Tenant to make a copy of. If present, the tenant.id and tenant.name values of the request body will be applied to the new Tenant, all other values will be copied from the source Tenant to the new Tenant.
	SourceTenantId pulumi.StringPtrInput
	// The Id to use for the new Tenant. If not specified a secure random UUID will be generated.
	TenantId pulumi.StringPtrInput
	// The unique Id of the theme to be used to style the login page and other end user templates.
	ThemeId               pulumi.StringInput
	UserDeletePolicy      FusionAuthTenantUserDeletePolicyPtrInput
	UsernameConfiguration FusionAuthTenantUsernameConfigurationPtrInput
}

func (FusionAuthTenantArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*fusionAuthTenantArgs)(nil)).Elem()
}

type FusionAuthTenantInput interface {
	pulumi.Input

	ToFusionAuthTenantOutput() FusionAuthTenantOutput
	ToFusionAuthTenantOutputWithContext(ctx context.Context) FusionAuthTenantOutput
}

func (*FusionAuthTenant) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthTenant)(nil)).Elem()
}

func (i *FusionAuthTenant) ToFusionAuthTenantOutput() FusionAuthTenantOutput {
	return i.ToFusionAuthTenantOutputWithContext(context.Background())
}

func (i *FusionAuthTenant) ToFusionAuthTenantOutputWithContext(ctx context.Context) FusionAuthTenantOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthTenantOutput)
}

// FusionAuthTenantArrayInput is an input type that accepts FusionAuthTenantArray and FusionAuthTenantArrayOutput values.
// You can construct a concrete instance of `FusionAuthTenantArrayInput` via:
//
//	FusionAuthTenantArray{ FusionAuthTenantArgs{...} }
type FusionAuthTenantArrayInput interface {
	pulumi.Input

	ToFusionAuthTenantArrayOutput() FusionAuthTenantArrayOutput
	ToFusionAuthTenantArrayOutputWithContext(context.Context) FusionAuthTenantArrayOutput
}

type FusionAuthTenantArray []FusionAuthTenantInput

func (FusionAuthTenantArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthTenant)(nil)).Elem()
}

func (i FusionAuthTenantArray) ToFusionAuthTenantArrayOutput() FusionAuthTenantArrayOutput {
	return i.ToFusionAuthTenantArrayOutputWithContext(context.Background())
}

func (i FusionAuthTenantArray) ToFusionAuthTenantArrayOutputWithContext(ctx context.Context) FusionAuthTenantArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthTenantArrayOutput)
}

// FusionAuthTenantMapInput is an input type that accepts FusionAuthTenantMap and FusionAuthTenantMapOutput values.
// You can construct a concrete instance of `FusionAuthTenantMapInput` via:
//
//	FusionAuthTenantMap{ "key": FusionAuthTenantArgs{...} }
type FusionAuthTenantMapInput interface {
	pulumi.Input

	ToFusionAuthTenantMapOutput() FusionAuthTenantMapOutput
	ToFusionAuthTenantMapOutputWithContext(context.Context) FusionAuthTenantMapOutput
}

type FusionAuthTenantMap map[string]FusionAuthTenantInput

func (FusionAuthTenantMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthTenant)(nil)).Elem()
}

func (i FusionAuthTenantMap) ToFusionAuthTenantMapOutput() FusionAuthTenantMapOutput {
	return i.ToFusionAuthTenantMapOutputWithContext(context.Background())
}

func (i FusionAuthTenantMap) ToFusionAuthTenantMapOutputWithContext(ctx context.Context) FusionAuthTenantMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FusionAuthTenantMapOutput)
}

type FusionAuthTenantOutput struct{ *pulumi.OutputState }

func (FusionAuthTenantOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FusionAuthTenant)(nil)).Elem()
}

func (o FusionAuthTenantOutput) ToFusionAuthTenantOutput() FusionAuthTenantOutput {
	return o
}

func (o FusionAuthTenantOutput) ToFusionAuthTenantOutputWithContext(ctx context.Context) FusionAuthTenantOutput {
	return o
}

func (o FusionAuthTenantOutput) AccessControlConfiguration() FusionAuthTenantAccessControlConfigurationPtrOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantAccessControlConfigurationPtrOutput {
		return v.AccessControlConfiguration
	}).(FusionAuthTenantAccessControlConfigurationPtrOutput)
}

func (o FusionAuthTenantOutput) CaptchaConfiguration() FusionAuthTenantCaptchaConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantCaptchaConfigurationOutput { return v.CaptchaConfiguration }).(FusionAuthTenantCaptchaConfigurationOutput)
}

// A list of Connector policies. Users will be authenticated against Connectors in order. Each Connector can be included in this list at most once and must exist.
func (o FusionAuthTenantOutput) ConnectorPolicies() FusionAuthTenantConnectorPolicyArrayOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantConnectorPolicyArrayOutput { return v.ConnectorPolicies }).(FusionAuthTenantConnectorPolicyArrayOutput)
}

// An object that can hold any information about the Tenant that should be persisted.
func (o FusionAuthTenantOutput) Data() pulumi.MapOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.MapOutput { return v.Data }).(pulumi.MapOutput)
}

func (o FusionAuthTenantOutput) EmailConfiguration() FusionAuthTenantEmailConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantEmailConfigurationOutput { return v.EmailConfiguration }).(FusionAuthTenantEmailConfigurationOutput)
}

func (o FusionAuthTenantOutput) EventConfigurations() FusionAuthTenantEventConfigurationArrayOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantEventConfigurationArrayOutput { return v.EventConfigurations }).(FusionAuthTenantEventConfigurationArrayOutput)
}

func (o FusionAuthTenantOutput) ExternalIdentifierConfiguration() FusionAuthTenantExternalIdentifierConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantExternalIdentifierConfigurationOutput {
		return v.ExternalIdentifierConfiguration
	}).(FusionAuthTenantExternalIdentifierConfigurationOutput)
}

func (o FusionAuthTenantOutput) FailedAuthenticationConfiguration() FusionAuthTenantFailedAuthenticationConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantFailedAuthenticationConfigurationOutput {
		return v.FailedAuthenticationConfiguration
	}).(FusionAuthTenantFailedAuthenticationConfigurationOutput)
}

func (o FusionAuthTenantOutput) FamilyConfiguration() FusionAuthTenantFamilyConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantFamilyConfigurationOutput { return v.FamilyConfiguration }).(FusionAuthTenantFamilyConfigurationOutput)
}

func (o FusionAuthTenantOutput) FormConfiguration() FusionAuthTenantFormConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantFormConfigurationOutput { return v.FormConfiguration }).(FusionAuthTenantFormConfigurationOutput)
}

// Time in seconds until an inactive session will be invalidated. Used when creating a new session in the FusionAuth OAuth frontend.
func (o FusionAuthTenantOutput) HttpSessionMaxInactiveInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.IntPtrOutput { return v.HttpSessionMaxInactiveInterval }).(pulumi.IntPtrOutput)
}

// The named issuer used to sign tokens, this is generally your public fully qualified domain.
func (o FusionAuthTenantOutput) Issuer() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.StringOutput { return v.Issuer }).(pulumi.StringOutput)
}

func (o FusionAuthTenantOutput) JwtConfigurations() FusionAuthTenantJwtConfigurationArrayOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantJwtConfigurationArrayOutput { return v.JwtConfigurations }).(FusionAuthTenantJwtConfigurationArrayOutput)
}

func (o FusionAuthTenantOutput) LoginConfiguration() FusionAuthTenantLoginConfigurationPtrOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantLoginConfigurationPtrOutput { return v.LoginConfiguration }).(FusionAuthTenantLoginConfigurationPtrOutput)
}

// The logout redirect URL when sending the user’s browser to the /oauth2/logout URI of the FusionAuth Front End. This value is only used when a logout URL is not defined in your Application.
func (o FusionAuthTenantOutput) LogoutUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.StringPtrOutput { return v.LogoutUrl }).(pulumi.StringPtrOutput)
}

func (o FusionAuthTenantOutput) MaximumPasswordAge() FusionAuthTenantMaximumPasswordAgeOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantMaximumPasswordAgeOutput { return v.MaximumPasswordAge }).(FusionAuthTenantMaximumPasswordAgeOutput)
}

func (o FusionAuthTenantOutput) MinimumPasswordAge() FusionAuthTenantMinimumPasswordAgeOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantMinimumPasswordAgeOutput { return v.MinimumPasswordAge }).(FusionAuthTenantMinimumPasswordAgeOutput)
}

func (o FusionAuthTenantOutput) MultiFactorConfiguration() FusionAuthTenantMultiFactorConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantMultiFactorConfigurationOutput {
		return v.MultiFactorConfiguration
	}).(FusionAuthTenantMultiFactorConfigurationOutput)
}

// The unique name of the Tenant.
func (o FusionAuthTenantOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

func (o FusionAuthTenantOutput) OauthConfigurations() FusionAuthTenantOauthConfigurationArrayOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantOauthConfigurationArrayOutput { return v.OauthConfigurations }).(FusionAuthTenantOauthConfigurationArrayOutput)
}

func (o FusionAuthTenantOutput) PasswordEncryptionConfigurations() FusionAuthTenantPasswordEncryptionConfigurationArrayOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantPasswordEncryptionConfigurationArrayOutput {
		return v.PasswordEncryptionConfigurations
	}).(FusionAuthTenantPasswordEncryptionConfigurationArrayOutput)
}

func (o FusionAuthTenantOutput) PasswordValidationRules() FusionAuthTenantPasswordValidationRulesOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantPasswordValidationRulesOutput {
		return v.PasswordValidationRules
	}).(FusionAuthTenantPasswordValidationRulesOutput)
}

// The optional Id of an existing Tenant to make a copy of. If present, the tenant.id and tenant.name values of the request body will be applied to the new Tenant, all other values will be copied from the source Tenant to the new Tenant.
func (o FusionAuthTenantOutput) SourceTenantId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.StringPtrOutput { return v.SourceTenantId }).(pulumi.StringPtrOutput)
}

// The Id to use for the new Tenant. If not specified a secure random UUID will be generated.
func (o FusionAuthTenantOutput) TenantId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.StringOutput { return v.TenantId }).(pulumi.StringOutput)
}

// The unique Id of the theme to be used to style the login page and other end user templates.
func (o FusionAuthTenantOutput) ThemeId() pulumi.StringOutput {
	return o.ApplyT(func(v *FusionAuthTenant) pulumi.StringOutput { return v.ThemeId }).(pulumi.StringOutput)
}

func (o FusionAuthTenantOutput) UserDeletePolicy() FusionAuthTenantUserDeletePolicyOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantUserDeletePolicyOutput { return v.UserDeletePolicy }).(FusionAuthTenantUserDeletePolicyOutput)
}

func (o FusionAuthTenantOutput) UsernameConfiguration() FusionAuthTenantUsernameConfigurationOutput {
	return o.ApplyT(func(v *FusionAuthTenant) FusionAuthTenantUsernameConfigurationOutput { return v.UsernameConfiguration }).(FusionAuthTenantUsernameConfigurationOutput)
}

type FusionAuthTenantArrayOutput struct{ *pulumi.OutputState }

func (FusionAuthTenantArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*FusionAuthTenant)(nil)).Elem()
}

func (o FusionAuthTenantArrayOutput) ToFusionAuthTenantArrayOutput() FusionAuthTenantArrayOutput {
	return o
}

func (o FusionAuthTenantArrayOutput) ToFusionAuthTenantArrayOutputWithContext(ctx context.Context) FusionAuthTenantArrayOutput {
	return o
}

func (o FusionAuthTenantArrayOutput) Index(i pulumi.IntInput) FusionAuthTenantOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *FusionAuthTenant {
		return vs[0].([]*FusionAuthTenant)[vs[1].(int)]
	}).(FusionAuthTenantOutput)
}

type FusionAuthTenantMapOutput struct{ *pulumi.OutputState }

func (FusionAuthTenantMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*FusionAuthTenant)(nil)).Elem()
}

func (o FusionAuthTenantMapOutput) ToFusionAuthTenantMapOutput() FusionAuthTenantMapOutput {
	return o
}

func (o FusionAuthTenantMapOutput) ToFusionAuthTenantMapOutputWithContext(ctx context.Context) FusionAuthTenantMapOutput {
	return o
}

func (o FusionAuthTenantMapOutput) MapIndex(k pulumi.StringInput) FusionAuthTenantOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *FusionAuthTenant {
		return vs[0].(map[string]*FusionAuthTenant)[vs[1].(string)]
	}).(FusionAuthTenantOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthTenantInput)(nil)).Elem(), &FusionAuthTenant{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthTenantArrayInput)(nil)).Elem(), FusionAuthTenantArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FusionAuthTenantMapInput)(nil)).Elem(), FusionAuthTenantMap{})
	pulumi.RegisterOutputType(FusionAuthTenantOutput{})
	pulumi.RegisterOutputType(FusionAuthTenantArrayOutput{})
	pulumi.RegisterOutputType(FusionAuthTenantMapOutput{})
}
