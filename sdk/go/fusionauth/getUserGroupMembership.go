// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fusionauth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth/internal"
)

// ## # User Group Membership Resource
//
// [User Group Membership API](https://fusionauth.io/docs/apis/groups#request-5)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fusionauth.GetUserGroupMembership(ctx, &fusionauth.GetUserGroupMembershipArgs{
//				GroupId: fusionauth_group.This.Id,
//				UserId:  fusionauth_user.This.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetUserGroupMembership(ctx *pulumi.Context, args *GetUserGroupMembershipArgs, opts ...pulumi.InvokeOption) (*GetUserGroupMembershipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserGroupMembershipResult
	err := ctx.Invoke("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroupMembership.
type GetUserGroupMembershipArgs struct {
	// The Id of the Group of this membership.
	GroupId string `pulumi:"groupId"`
	// "The Id of the User of this membership.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getUserGroupMembership.
type GetUserGroupMembershipResult struct {
	// (Optional) An object that can hold any information about the User for this membership that should be persisted.
	Data    map[string]string `pulumi:"data"`
	GroupId string            `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Optional) The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId string `pulumi:"membershipId"`
	UserId       string `pulumi:"userId"`
}

func GetUserGroupMembershipOutput(ctx *pulumi.Context, args GetUserGroupMembershipOutputArgs, opts ...pulumi.InvokeOption) GetUserGroupMembershipResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetUserGroupMembershipResultOutput, error) {
			args := v.(GetUserGroupMembershipArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args, GetUserGroupMembershipResultOutput{}, options).(GetUserGroupMembershipResultOutput), nil
		}).(GetUserGroupMembershipResultOutput)
}

// A collection of arguments for invoking getUserGroupMembership.
type GetUserGroupMembershipOutputArgs struct {
	// The Id of the Group of this membership.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// "The Id of the User of this membership.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (GetUserGroupMembershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroupMembership.
type GetUserGroupMembershipResultOutput struct{ *pulumi.OutputState }

func (GetUserGroupMembershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserGroupMembershipResult)(nil)).Elem()
}

func (o GetUserGroupMembershipResultOutput) ToGetUserGroupMembershipResultOutput() GetUserGroupMembershipResultOutput {
	return o
}

func (o GetUserGroupMembershipResultOutput) ToGetUserGroupMembershipResultOutputWithContext(ctx context.Context) GetUserGroupMembershipResultOutput {
	return o
}

// (Optional) An object that can hold any information about the User for this membership that should be persisted.
func (o GetUserGroupMembershipResultOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetUserGroupMembershipResult) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

func (o GetUserGroupMembershipResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserGroupMembershipResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) The Id of the User Group Membership. If not provided, a random UUID will be generated.
func (o GetUserGroupMembershipResultOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipResult) string { return v.MembershipId }).(pulumi.StringOutput)
}

func (o GetUserGroupMembershipResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserGroupMembershipResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserGroupMembershipResultOutput{})
}
