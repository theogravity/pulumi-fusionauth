// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fusionauth

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth/internal"
)

// ## # User Group Membership Resource
//
// [User Group Membership API](https://fusionauth.io/docs/apis/groups#request-5)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//	"github.com/theogravity/pulumi-fusionauth/sdk/go/fusionauth"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fusionauth.LookupUserGroupMembership(ctx, &fusionauth.LookupUserGroupMembershipArgs{
//				GroupId: fusionauth_group.This.Id,
//				UserId:  fusionauth_user.This.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupUserGroupMembership(ctx *pulumi.Context, args *LookupUserGroupMembershipArgs, opts ...pulumi.InvokeOption) (*LookupUserGroupMembershipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserGroupMembershipResult
	err := ctx.Invoke("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserGroupMembership.
type LookupUserGroupMembershipArgs struct {
	// The Id of the Group of this membership.
	GroupId string `pulumi:"groupId"`
	// "The Id of the User of this membership.
	UserId string `pulumi:"userId"`
}

// A collection of values returned by getUserGroupMembership.
type LookupUserGroupMembershipResult struct {
	// (Optional) An object that can hold any information about the User for this membership that should be persisted.
	Data    map[string]string `pulumi:"data"`
	GroupId string            `pulumi:"groupId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// (Optional) The Id of the User Group Membership. If not provided, a random UUID will be generated.
	MembershipId string `pulumi:"membershipId"`
	UserId       string `pulumi:"userId"`
}

func LookupUserGroupMembershipOutput(ctx *pulumi.Context, args LookupUserGroupMembershipOutputArgs, opts ...pulumi.InvokeOption) LookupUserGroupMembershipResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserGroupMembershipResultOutput, error) {
			args := v.(LookupUserGroupMembershipArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("fusionauth:index/getUserGroupMembership:getUserGroupMembership", args, LookupUserGroupMembershipResultOutput{}, options).(LookupUserGroupMembershipResultOutput), nil
		}).(LookupUserGroupMembershipResultOutput)
}

// A collection of arguments for invoking getUserGroupMembership.
type LookupUserGroupMembershipOutputArgs struct {
	// The Id of the Group of this membership.
	GroupId pulumi.StringInput `pulumi:"groupId"`
	// "The Id of the User of this membership.
	UserId pulumi.StringInput `pulumi:"userId"`
}

func (LookupUserGroupMembershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserGroupMembershipArgs)(nil)).Elem()
}

// A collection of values returned by getUserGroupMembership.
type LookupUserGroupMembershipResultOutput struct{ *pulumi.OutputState }

func (LookupUserGroupMembershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserGroupMembershipResult)(nil)).Elem()
}

func (o LookupUserGroupMembershipResultOutput) ToLookupUserGroupMembershipResultOutput() LookupUserGroupMembershipResultOutput {
	return o
}

func (o LookupUserGroupMembershipResultOutput) ToLookupUserGroupMembershipResultOutputWithContext(ctx context.Context) LookupUserGroupMembershipResultOutput {
	return o
}

// (Optional) An object that can hold any information about the User for this membership that should be persisted.
func (o LookupUserGroupMembershipResultOutput) Data() pulumi.StringMapOutput {
	return o.ApplyT(func(v LookupUserGroupMembershipResult) map[string]string { return v.Data }).(pulumi.StringMapOutput)
}

func (o LookupUserGroupMembershipResultOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupMembershipResult) string { return v.GroupId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserGroupMembershipResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupMembershipResult) string { return v.Id }).(pulumi.StringOutput)
}

// (Optional) The Id of the User Group Membership. If not provided, a random UUID will be generated.
func (o LookupUserGroupMembershipResultOutput) MembershipId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupMembershipResult) string { return v.MembershipId }).(pulumi.StringOutput)
}

func (o LookupUserGroupMembershipResultOutput) UserId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserGroupMembershipResult) string { return v.UserId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserGroupMembershipResultOutput{})
}
