// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # API Key
 *
 * The FusionAuth APIs are primarily secured using API keys. This API can only be accessed using an API key that is set as a keyManager. In order to retrieve, update or delete an API key, an API key with equal or greater permissions must be used. A "tenant-scoped" API key can retrieve, create, update or delete an API key for the same tenant. This page describes APIs that are used to manage API keys.
 *
 * [API Key](https://fusionauth.io/docs/v1/tech/apis/api-keys/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const example = new fusionauth.FusionAuthApiKey("example", {
 *     description: "my super secret key",
 *     key: "super-secret-key",
 *     permissionsEndpoints: [{
 *         "delete": true,
 *         endpoint: "/api/application",
 *         get: true,
 *         patch: true,
 *         post: true,
 *         put: true,
 *     }],
 *     tenantId: "94f751c5-4883-4684-a817-6b106778edec",
 * });
 * ```
 */
export class FusionAuthApiKey extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthApiKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthApiKeyState, opts?: pulumi.CustomResourceOptions): FusionAuthApiKey {
        return new FusionAuthApiKey(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthApiKey:FusionAuthApiKey';

    /**
     * Returns true if the given object is an instance of FusionAuthApiKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthApiKey {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthApiKey.__pulumiType;
    }

    /**
     * Description of the key.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The Id of the IP Access Control List limiting access to this API key.
     */
    public readonly ipAccessControlListId!: pulumi.Output<string | undefined>;
    /**
     * API key string. When you create an API key the key is defaulted to a secure random value but the API key is simply a string, so you may call it super-secret-key if you’d like. However a long and random value makes a good API key in that it is unique and difficult to guess.
     */
    public readonly key!: pulumi.Output<string>;
    /**
     * The Id to use for the new Form. If not specified a secure random UUID will be generated.
     */
    public readonly keyId!: pulumi.Output<string | undefined>;
    /**
     * The unique Id of the private key downloaded from Apple and imported into Key Master that will be used to sign the client secret.
     */
    public readonly permissionsEndpoints!: pulumi.Output<outputs.FusionAuthApiKeyPermissionsEndpoint[] | undefined>;
    /**
     * The unique Id of the Tenant. This value is required if the key is meant to be tenant scoped. Tenant scoped keys can only be used to access users and other tenant scoped objects for the specified tenant. This value is read-only once the key is created.
     */
    public readonly tenantId!: pulumi.Output<string | undefined>;

    /**
     * Create a FusionAuthApiKey resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FusionAuthApiKeyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthApiKeyArgs | FusionAuthApiKeyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthApiKeyState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["ipAccessControlListId"] = state ? state.ipAccessControlListId : undefined;
            resourceInputs["key"] = state ? state.key : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["permissionsEndpoints"] = state ? state.permissionsEndpoints : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as FusionAuthApiKeyArgs | undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["ipAccessControlListId"] = args ? args.ipAccessControlListId : undefined;
            resourceInputs["key"] = args?.key ? pulumi.secret(args.key) : undefined;
            resourceInputs["keyId"] = args ? args.keyId : undefined;
            resourceInputs["permissionsEndpoints"] = args ? args.permissionsEndpoints : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["key"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FusionAuthApiKey.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthApiKey resources.
 */
export interface FusionAuthApiKeyState {
    /**
     * Description of the key.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of the IP Access Control List limiting access to this API key.
     */
    ipAccessControlListId?: pulumi.Input<string>;
    /**
     * API key string. When you create an API key the key is defaulted to a secure random value but the API key is simply a string, so you may call it super-secret-key if you’d like. However a long and random value makes a good API key in that it is unique and difficult to guess.
     */
    key?: pulumi.Input<string>;
    /**
     * The Id to use for the new Form. If not specified a secure random UUID will be generated.
     */
    keyId?: pulumi.Input<string>;
    /**
     * The unique Id of the private key downloaded from Apple and imported into Key Master that will be used to sign the client secret.
     */
    permissionsEndpoints?: pulumi.Input<pulumi.Input<inputs.FusionAuthApiKeyPermissionsEndpoint>[]>;
    /**
     * The unique Id of the Tenant. This value is required if the key is meant to be tenant scoped. Tenant scoped keys can only be used to access users and other tenant scoped objects for the specified tenant. This value is read-only once the key is created.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthApiKey resource.
 */
export interface FusionAuthApiKeyArgs {
    /**
     * Description of the key.
     */
    description?: pulumi.Input<string>;
    /**
     * The Id of the IP Access Control List limiting access to this API key.
     */
    ipAccessControlListId?: pulumi.Input<string>;
    /**
     * API key string. When you create an API key the key is defaulted to a secure random value but the API key is simply a string, so you may call it super-secret-key if you’d like. However a long and random value makes a good API key in that it is unique and difficult to guess.
     */
    key?: pulumi.Input<string>;
    /**
     * The Id to use for the new Form. If not specified a secure random UUID will be generated.
     */
    keyId?: pulumi.Input<string>;
    /**
     * The unique Id of the private key downloaded from Apple and imported into Key Master that will be used to sign the client secret.
     */
    permissionsEndpoints?: pulumi.Input<pulumi.Input<inputs.FusionAuthApiKeyPermissionsEndpoint>[]>;
    /**
     * The unique Id of the Tenant. This value is required if the key is meant to be tenant scoped. Tenant scoped keys can only be used to access users and other tenant scoped objects for the specified tenant. This value is read-only once the key is created.
     */
    tenantId?: pulumi.Input<string>;
}
