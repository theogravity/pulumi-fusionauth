// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # User Data Source
 *
 * This data source can be used to fetch information about a specific user.
 *
 * [Users API](https://fusionauth.io/docs/v1/tech/apis/users)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "@pulumi/fusionauth";
 *
 * const example = fusionauth.getUser({
 *     username: "foo@example.com",
 * });
 * ```
 */
export function getUser(args?: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fusionauth:index/getUser:getUser", {
        "tenantId": args.tenantId,
        "userId": args.userId,
        "username": args.username,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * The Id of the tenant used to scope this API request.
     */
    tenantId?: string;
    /**
     * The Id of the user. Either `userId` or `username` must be specified.
     */
    userId?: string;
    /**
     * The username of the user. Either `userId` or `username` must be specified.
     */
    username?: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    /**
     * True if the user is active. False if the user has been deactivated. Deactivated users will not be able to login.
     */
    readonly active: boolean;
    /**
     * An ISO-8601 formatted date of the user’s birthdate such as YYYY-MM-DD.
     */
    readonly birthDate: string;
    /**
     * A JSON serialised string that can hold any information about the user.
     */
    readonly data: string;
    /**
     * The user’s email address.
     */
    readonly email: string;
    /**
     * The expiration instant of the user’s account. An expired user is not permitted to login.
     */
    readonly expiry: number;
    /**
     * The first name of the user.
     */
    readonly firstName: string;
    /**
     * The user’s full name.
     */
    readonly fullName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The URL that points to an image file that is the user’s profile image.
     */
    readonly imageUrl: string;
    /**
     * The user’s last name.
     */
    readonly lastName: string;
    /**
     * The user’s middle name.
     */
    readonly middleName: string;
    /**
     * The user’s mobile phone number.
     */
    readonly mobilePhone: string;
    /**
     * The email address of the user’s parent or guardian.
     */
    readonly parentEmail: string;
    /**
     * Indicates that the user’s password needs to be changed during their next login attempt.
     */
    readonly passwordChangeRequired: boolean;
    /**
     * An array of locale strings that give, in order, the user’s preferred languages.
     */
    readonly preferredLanguages: string[];
    readonly tenantId: string;
    /**
     * The user’s preferred timezone.
     */
    readonly timezone: string;
    readonly userId: string;
    readonly username: string;
    /**
     * The current status of the username. This is used if you are moderating usernames via CleanSpeak.
     */
    readonly usernameStatus: string;
}
/**
 * ## # User Data Source
 *
 * This data source can be used to fetch information about a specific user.
 *
 * [Users API](https://fusionauth.io/docs/v1/tech/apis/users)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "@pulumi/fusionauth";
 *
 * const example = fusionauth.getUser({
 *     username: "foo@example.com",
 * });
 * ```
 */
export function getUserOutput(args?: GetUserOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetUserResult> {
    return pulumi.output(args).apply((a: any) => getUser(a, opts))
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * The Id of the tenant used to scope this API request.
     */
    tenantId?: pulumi.Input<string>;
    /**
     * The Id of the user. Either `userId` or `username` must be specified.
     */
    userId?: pulumi.Input<string>;
    /**
     * The username of the user. Either `userId` or `username` must be specified.
     */
    username?: pulumi.Input<string>;
}
