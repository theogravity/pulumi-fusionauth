// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface FusionAuthApiKeyPermissionsEndpoint {
    /**
     * HTTP DELETE Verb
     */
    delete?: pulumi.Input<boolean>;
    endpoint: pulumi.Input<string>;
    /**
     * HTTP GET Verb
     */
    get?: pulumi.Input<boolean>;
    /**
     * HTTP PATCH Verb
     */
    patch?: pulumi.Input<boolean>;
    /**
     * HTTP POST Verb
     */
    post?: pulumi.Input<boolean>;
    /**
     * HTTP PUT Verb
     */
    put?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationAccessControlConfiguration {
    /**
     * The Id of the IP Access Control List limiting access to this application.
     */
    uiIpAccessControlListId?: pulumi.Input<string>;
}

export interface FusionAuthApplicationCleanSpeakConfiguration {
    /**
     * An array of UUIDs that map to the CleanSpeak applications for this Application. It is possible that a single Application in FusionAuth might have multiple Applications in CleanSpeak. For example, a FusionAuth Application for a game might have one CleanSpeak Application for usernames and another Application for chat.
     */
    applicationIds?: pulumi.Input<pulumi.Input<string>[]>;
    usernameModeration?: pulumi.Input<inputs.FusionAuthApplicationCleanSpeakConfigurationUsernameModeration>;
}

export interface FusionAuthApplicationCleanSpeakConfigurationUsernameModeration {
    /**
     * The Id of the CleanSpeak application that usernames are sent to for moderation.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * True if CleanSpeak username moderation is enabled.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationEmailConfiguration {
    /**
     * The Id of the Email Template used to send emails to users when their email address is updated. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    emailUpdateTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users to verify that their email address is valid. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    emailVerificationTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to verify user emails. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    emailVerifiedTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when a user is sent a forgot password email. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    forgotPasswordTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when another user attempts to create an account with their login Id. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    loginIdInUseOnCreateTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when another user attempts to update an existing account to use their login Id. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    loginIdInUseOnUpdateTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when they log in on a new device. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    loginNewDeviceTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when a suspicious login occurs. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    loginSuspiciousTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when they have completed a 'forgot password' workflow and their password has been reset. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    passwordResetSuccessTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when their password has been updated. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    passwordUpdateTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Passwordless Email Template, sent to users when they start a passwordless login. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    passwordlessEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when a user had their account created for them and they must set their password manually and they are sent an email to set their password. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    setPasswordEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when a MFA method has been added to their account. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    twoFactorMethodAddTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when a MFA method has been removed from their account. When configured, this value will take precedence over the same configuration from the Tenant when an application context is known.
     */
    twoFactorMethodRemoveTemplateId?: pulumi.Input<string>;
}

export interface FusionAuthApplicationFormConfiguration {
    /**
     * The unique Id of the form to use for the Add and Edit User Registration form when used in the FusionAuth admin UI.
     */
    adminRegistrationFormId?: pulumi.Input<string>;
    selfServiceFormConfiguration?: pulumi.Input<inputs.FusionAuthApplicationFormConfigurationSelfServiceFormConfiguration>;
    /**
     * The unique Id of the form to to enable authenticated users to manage their profile on the account page.
     */
    selfServiceFormId?: pulumi.Input<string>;
}

export interface FusionAuthApplicationFormConfigurationSelfServiceFormConfiguration {
    /**
     * When enabled a user will be required to provide their current password when changing their password on a self-service account form.
     */
    requireCurrentPasswordOnPasswordChange?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationJwtConfiguration {
    /**
     * The Id of the signing key used to sign the access token.
     */
    accessTokenId?: pulumi.Input<string>;
    /**
     * Indicates if this application is using the JWT configuration defined here or the global JWT configuration defined by the System Configuration. If this is false the signing algorithm configured in the System Configuration will be used. If true the signing algorithm defined in this application will be used.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Id of the signing key used to sign the Id token.
     */
    idTokenKeyId?: pulumi.Input<string>;
    /**
     * The Refresh Token expiration policy. The possible values are: Fixed - the expiration is calculated from the time the token is issued.  SlidingWindow - the expiration is calculated from the last time the token was used. SlidingWindowWithMaximumLifetime - the expiration is calculated from the last time the token was used, or until `refreshTokenSlidingWindowMaximumTtlInMinutes` is reached.
     */
    refreshTokenExpirationPolicy?: pulumi.Input<string>;
    /**
     * The maximum lifetime of a refresh token when using a refresh token expiration policy of `SlidingWindowWithMaximumLifetime`. Value must be greater than 0.
     */
    refreshTokenSlidingWindowMaximumTtlInMinutes?: pulumi.Input<number>;
    /**
     * The length of time in minutes the JWT refresh token will live before it is expired and is not able to be exchanged for a JWT.
     */
    refreshTokenTtlMinutes?: pulumi.Input<number>;
    /**
     * The refresh token usage policy. The following are valid values: Reusable - the token does not change after it was issued. OneTimeUse - the token value will be changed each time the token is used to refresh a JWT. The client must store the new value after each usage. Defaults to Reusable.
     */
    refreshTokenUsagePolicy?: pulumi.Input<string>;
    /**
     * The length of time in seconds the JWT will live before it is expired and no longer valid.
     */
    ttlSeconds?: pulumi.Input<number>;
}

export interface FusionAuthApplicationLambdaConfiguration {
    /**
     * The Id of the Lambda that will be invoked when an access token is generated for this application. This will be utilized during OAuth2 and OpenID Connect authentication requests as well as when an access token is generated for the Login API.
     */
    accessTokenPopulateId?: pulumi.Input<string>;
    /**
     * The Id of the Lambda that will be invoked when an Id token is generated for this application during an OpenID Connect authentication request.
     */
    idTokenPopulateId?: pulumi.Input<string>;
    /**
     * The Id of the Lambda that will be invoked when a a SAML response is generated during a SAML authentication request.
     */
    samlv2PopulateId?: pulumi.Input<string>;
    /**
     * The unique Id of the lambda that will be used to perform additional validation on registration form steps.
     */
    selfServiceRegistrationValidationId?: pulumi.Input<string>;
    /**
     * The Id of the Lambda that will be invoked when a UserInfo response is generated for this application.
     */
    userinfoPopulateId?: pulumi.Input<string>;
}

export interface FusionAuthApplicationLoginConfiguration {
    /**
     * Indicates if a JWT may be refreshed using a Refresh Token for this application. This configuration is separate from issuing new Refresh Tokens which is controlled by the generateRefreshTokens parameter. This configuration indicates specifically if an existing Refresh Token may be used to request a new JWT using the Refresh API.
     */
    allowTokenRefresh?: pulumi.Input<boolean>;
    /**
     * Indicates if a Refresh Token should be issued from the Login API
     */
    generateRefreshTokens?: pulumi.Input<boolean>;
    /**
     * Indicates if the Login API should require an API key. If you set this value to false and your FusionAuth API is on a public network, anyone may attempt to use the Login API.
     */
    requireAuthentication?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationMultiFactorConfiguration {
    /**
     * The Id of the email template that is used when notifying a user to complete a multi-factor authentication request.
     */
    emailTemplateId?: pulumi.Input<string>;
    /**
     * When enabled and a user has one or more two-factor methods configured, the user will be required to complete a two-factor challenge during login. When disabled, even when a user has configured one or more two-factor methods, the user will not be required to complete a two-factor challenge during login. When required, the user will be required to complete a two-factor challenge during login. Possible values are `Enabled`, `Disabled` or `Required`.
     */
    loginPolicy?: pulumi.Input<string>;
    /**
     * The Id of the SMS template that is used when notifying a user to complete a multi-factor authentication request.
     */
    smsTemplateId?: pulumi.Input<string>;
    /**
     * When `multi_factor_configuration.login_policy` is set to `Enabled`, this trust policy is utilized when determining if a user must complete a two-factor challenge during login. Possible values are `Any`, `This` or `None`.
     */
    trustPolicy?: pulumi.Input<string>;
}

export interface FusionAuthApplicationOauthConfiguration {
    /**
     * An array of URLs that are the authorized origins for FusionAuth OAuth.
     */
    authorizedOriginUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * An array of URLs that are the authorized redirect URLs for FusionAuth OAuth.
     */
    authorizedRedirectUrls?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determines whether wildcard expressions will be allowed in the authorizedRedirectUrls and authorized_origin_urls.
     */
    authorizedUrlValidationPolicy?: pulumi.Input<string>;
    /**
     * Determines the client authentication requirements for the OAuth 2.0 Token endpoint.
     */
    clientAuthenticationPolicy?: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client id. If you leave this blank during a POST, a client id will be generated for you. If you leave this blank during PUT, the previous value will be maintained. For both POST and PUT you can provide a value and it will be stored.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret. If you leave this blank during a POST, a secure secret will be generated for you. If you leave this blank during PUT, the previous value will be maintained. For both POST and PUT you can provide a value and it will be stored.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Controls the policy for prompting a user to consent to requested OAuth scopes. This configuration only takes effect when `application.oauthConfiguration.relationship` is `ThirdParty`. The possible values are:
     * * `AlwaysPrompt` - Always prompt the user for consent.
     * * `RememberDecision` - Remember previous consents; only prompt if the choice expires or if the requested or required scopes have changed. The duration of this persisted choice is controlled by the Tenant’s `externalIdentifierConfiguration.rememberOAuthScopeConsentChoiceTimeToLiveInSeconds` value.
     * * `NeverPrompt` - The user will be never be prompted to consent to requested OAuth scopes. Permission will be granted implicitly as if this were a `FirstParty` application. This configuration is meant for testing purposes only and should not be used in production.
     */
    consentMode?: pulumi.Input<string>;
    /**
     * Whether or not FusionAuth will log a debug Event Log. This is particular useful for debugging the authorization code exchange with the Token endpoint during an Authorization Code grant."
     */
    debug?: pulumi.Input<boolean>;
    /**
     * The device verification URL to be used with the Device Code grant type, this field is required when deviceCode is enabled.
     */
    deviceVerificationUrl?: pulumi.Input<string>;
    /**
     * The enabled grants for this application. In order to utilize a particular grant with the OAuth 2.0 endpoints you must have enabled the grant.
     */
    enabledGrants?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determines if the OAuth 2.0 Token endpoint will generate a refresh token when the offlineAccess scope is requested.
     */
    generateRefreshTokens?: pulumi.Input<boolean>;
    /**
     * Behavior when /oauth2/logout is called.
     */
    logoutBehavior?: pulumi.Input<string>;
    /**
     * The logout URL for the Application. FusionAuth will redirect to this URL after the user logs out of OAuth.
     */
    logoutUrl?: pulumi.Input<string>;
    /**
     * Determines the PKCE requirements when using the authorization code grant.
     */
    proofKeyForCodeExchangePolicy?: pulumi.Input<string>;
    /**
     * Configures which of the default scopes are enabled and required.
     */
    providedScopePolicies?: pulumi.Input<pulumi.Input<inputs.FusionAuthApplicationOauthConfigurationProvidedScopePolicy>[]>;
    /**
     * The application’s relationship to the OAuth server. The possible values are:
     * * `FirstParty` - The application has the same owner as the authorization server. Consent to requested OAuth scopes is granted implicitly.
     * * `ThirdParty` - The application is external to the authorization server. Users will be prompted to consent to requested OAuth scopes based on the application object’s `oauthConfiguration.consentMode` value. Note: An Essentials or Enterprise plan is required to utilize third-party applications.
     */
    relationship?: pulumi.Input<string>;
    /**
     * Determines if the OAuth 2.0 Token endpoint requires client authentication. If this is enabled, the client must provide client credentials when using the Token endpoint. The clientId and clientSecret may be provided using a Basic Authorization HTTP header, or by sending these parameters in the request body using POST data.
     *
     * @deprecated In version 1.28.0 and beyond, client authentication can be managed via oauth_configuration.client_authentication_policy.
     */
    requireClientAuthentication?: pulumi.Input<boolean>;
    /**
     * When enabled the user will be required to be registered, or complete registration before redirecting to the configured callback in the authorization code grant or the implicit grant. This configuration does not currently apply to any other grant.
     */
    requireRegistration?: pulumi.Input<boolean>;
    /**
     * Controls the policy for handling of OAuth scopes when populating JWTs and the UserInfo response. The possible values are:
     * * `Compatibility` - OAuth workflows will populate JWT and UserInfo claims in a manner compatible with versions of FusionAuth before version 1.50.0.
     * * `Strict` - OAuth workflows will populate token and UserInfo claims according to the OpenID Connect 1.0 specification based on requested and consented scopes.
     */
    scopeHandlingPolicy: pulumi.Input<string>;
    /**
     * Controls the policy for handling unknown scopes on an OAuth request. The possible values are:
     * * `Allow` - Unknown scopes will be allowed on the request, passed through the OAuth workflow, and written to the resulting tokens without consent.
     * * `Remove` - Unknown scopes will be removed from the OAuth workflow, but the workflow will proceed without them.
     * * `Reject` - Unknown scopes will be rejected and cause the OAuth workflow to fail with an error.
     */
    unknownScopePolicy: pulumi.Input<string>;
}

export interface FusionAuthApplicationOauthConfigurationProvidedScopePolicy {
    address?: pulumi.Input<inputs.FusionAuthApplicationOauthConfigurationProvidedScopePolicyAddress>;
    email?: pulumi.Input<inputs.FusionAuthApplicationOauthConfigurationProvidedScopePolicyEmail>;
    phone?: pulumi.Input<inputs.FusionAuthApplicationOauthConfigurationProvidedScopePolicyPhone>;
    profile?: pulumi.Input<inputs.FusionAuthApplicationOauthConfigurationProvidedScopePolicyProfile>;
}

export interface FusionAuthApplicationOauthConfigurationProvidedScopePolicyAddress {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationOauthConfigurationProvidedScopePolicyEmail {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationOauthConfigurationProvidedScopePolicyPhone {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationOauthConfigurationProvidedScopePolicyProfile {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfiguration {
    birthDate?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationBirthDate>;
    /**
     * Determines if the password should be confirmed during self service registration, this means that the user will be required to type the password twice.
     */
    confirmPassword?: pulumi.Input<boolean>;
    /**
     * Determines if self service registration is enabled for this application. When this value is false, you may still use the Registration API, this only affects if the self service option is available during the OAuth 2.0 login.
     */
    enabled?: pulumi.Input<boolean>;
    firstName?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationFirstName>;
    /**
     * The Id of an associated Form when using advanced registration configuration type. This field is required when application.registrationConfiguration.type is set to advanced.
     */
    formId?: pulumi.Input<string>;
    fullName?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationFullName>;
    lastName?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationLastName>;
    /**
     * The unique login Id that will be collected during registration, this value can be email or username. Leaving the default value of email is preferred because an email address is globally unique.
     */
    loginIdType?: pulumi.Input<string>;
    middleName?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationMiddleName>;
    mobilePhone?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationMobilePhone>;
    preferredLanguages?: pulumi.Input<inputs.FusionAuthApplicationRegistrationConfigurationPreferredLanguages>;
    /**
     * The type of registration flow.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthApplicationRegistrationConfigurationBirthDate {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfigurationFirstName {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfigurationFullName {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfigurationLastName {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfigurationMiddleName {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfigurationMobilePhone {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationConfigurationPreferredLanguages {
    enabled?: pulumi.Input<boolean>;
    required?: pulumi.Input<boolean>;
}

export interface FusionAuthApplicationRegistrationDeletePolicy {
    /**
     * Indicates that users without a verified registration for this application will have their registration permanently deleted after application.registrationDeletePolicy.unverified.numberOfDaysToRetain days.
     */
    unverifiedEnabled?: pulumi.Input<boolean>;
    /**
     * The number of days from registration a user’s registration will be retained before being deleted for not completing registration verification. This field is required when application.registrationDeletePolicy.enabled is set to true. Value must be greater than 0.
     */
    unverifiedNumberOfDaysToRetain?: pulumi.Input<number>;
}

export interface FusionAuthApplicationSamlv2Configuration {
    assertionEncryptionConfiguration?: pulumi.Input<inputs.FusionAuthApplicationSamlv2ConfigurationAssertionEncryptionConfiguration>;
    /**
     * The audience for the SAML response sent to back to the service provider from FusionAuth. Some service providers require different audience values than the issuer and this configuration option lets you change the audience in the response.
     */
    audience?: pulumi.Input<string>;
    /**
     * An array of URLs that are the authorized redirect URLs for FusionAuth OAuth.
     */
    authorizedRedirectUrls: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The URL of the callback (sometimes called the Assertion Consumer Service or ACS). This is where FusionAuth sends the browser after the user logs in via SAML.
     *
     * @deprecated In version 1.20.0 and beyond, Callback URLs can be managed via authorized_redirect_urls.
     */
    callbackUrl?: pulumi.Input<string>;
    /**
     * Whether or not FusionAuth will log SAML debug messages to the event log. This is useful for debugging purposes.
     */
    debug?: pulumi.Input<boolean>;
    /**
     * Default verification key to use for HTTP Redirect Bindings, and for POST Bindings when no key is found in request.
     */
    defaultVerificationKeyId?: pulumi.Input<string>;
    /**
     * Whether or not the SAML IdP for this Application is enabled or not.
     */
    enabled?: pulumi.Input<boolean>;
    initiatedLogin?: pulumi.Input<inputs.FusionAuthApplicationSamlv2ConfigurationInitiatedLogin>;
    /**
     * The issuer that identifies the service provider and allows FusionAuth to load the correct Application and SAML configuration. If you don’t know the issuer, you can often times put in anything here and FusionAuth will display an error message with the issuer from the service provider when you test the SAML login.
     */
    issuer: pulumi.Input<string>;
    /**
     * The id of the Key used to sign the SAML response. If you do not specify this property, FusionAuth will create a new key and associate it with this Application.
     */
    keyId?: pulumi.Input<string>;
    loginHintConfiguration?: pulumi.Input<inputs.FusionAuthApplicationSamlv2ConfigurationLoginHintConfiguration>;
    logout?: pulumi.Input<inputs.FusionAuthApplicationSamlv2ConfigurationLogout>;
    /**
     * The URL that the browser is taken to after the user logs out of the SAML service provider. Often service providers need this URL in order to correctly hook up single-logout. Note that FusionAuth does not support the SAML single-logout profile because most service providers to not support it properly.
     */
    logoutUrl?: pulumi.Input<string>;
    /**
     * If set to true, will force verification through the key store.
     */
    requiredSignedRequests?: pulumi.Input<boolean>;
    /**
     * The XML signature canonicalization method used when digesting and signing the SAML response. Unfortunately, many service providers do not correctly implement the XML signature specifications and force a specific canonicalization method. This setting allows you to change the canonicalization method to match the service provider. Often, service providers don’t even document their required method. You might need to contact enterprise support at the service provider to figure out what method they use.
     */
    xmlSignatureCanonicalizationMethod?: pulumi.Input<string>;
    /**
     * The location to place the XML signature when signing a successful SAML response.
     */
    xmlSignatureLocation?: pulumi.Input<string>;
}

export interface FusionAuthApplicationSamlv2ConfigurationAssertionEncryptionConfiguration {
    /**
     * The message digest algorithm to use when encrypting the symmetric key for transport. The possible values are: SHA1 - SHA-1 hashing algorithm, SHA256 - SHA-256 hashing algorithm, SHA384 - SHA-384 hashing algorithm or SHA512 - SHA-512 hashing algorithm. Using SHA256 or higher is recommended.
     */
    digestAlgorithm?: pulumi.Input<string>;
    /**
     * Determines if SAML assertion encryption is enabled for this Application.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The symmetric key encryption algorithm that will be used to encrypt SAML assertions. A new symmetric key will be generated every time an assertion is encrypted. AES ciphers can operate in Cipher Block Chaining (CBC) or Galois/Counter Mode (GCM). The possible values are: AES128, AES192, AES256, AES128GCM, AES192GCM, AES256GCM or TripleDES.
     */
    encryptionAlgorithm?: pulumi.Input<string>;
    /**
     * The location that the encrypted symmetric key information will be placed in the SAML response in relation to the EncryptedData element containing the encrypted assertion value. The possible values are: Child (The EncryptedKey element will be wrapped in a KeyInfo element and added inside the EncryptedData) or Sibling (The EncryptedKey element will be added to the document as a sibling of EncryptedData).
     */
    keyLocation?: pulumi.Input<string>;
    /**
     * The encryption algorithm used to encrypt the symmetric key for transport in the SAML response. The possible values are: RSAv15, RSA_OAEP or RSA_OAEP_MGF1P.
     */
    keyTransportAlgorithm?: pulumi.Input<string>;
    /**
     * The unique Id of the Key used to encrypt the symmetric key for transport in the SAML response. The selected Key must contain an RSA certificate. This parameter is required when application.samlv2Configuration.assertionEncryptionConfiguration.enabled is set to true.
     */
    keyTransportEncryptionKeyId?: pulumi.Input<string>;
    /**
     * The mask generation function and hash function to use for the Optimal Asymmetric Encryption Padding when encrypting a symmetric key for transport. The possible values are: MGF1_SHA1, MGF1_SHA224, MGF1_SHA256, MGF1_SHA384 or MGF1_SHA512. This value is only used when the `application.samlv2Configuration.assertionEncryptionConfiguration.keyTransportAlgorithm` is set to RSA_OAEP. RSAv15 does not require a message digest function, and RSA_OAEP_MGF1P will always use MGF1_SHA1 regardless of this value.
     */
    maskGenerationFunction?: pulumi.Input<string>;
}

export interface FusionAuthApplicationSamlv2ConfigurationInitiatedLogin {
    /**
     * Determines if SAML v2 IdP initiated login is enabled for this application. See application.samlv2Configuration.authorizedRedirectURLs for information on which destination URLs are allowed.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The value sent in the AuthN response to the SAML v2 Service Provider in the NameID assertion.
     */
    nameIdFormat?: pulumi.Input<string>;
}

export interface FusionAuthApplicationSamlv2ConfigurationLoginHintConfiguration {
    /**
     * When enabled, FusionAuth will accept a username or email address as a login hint on a custom HTTP request parameter.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the parameter that will be used to pass the login hint to the SAML v2 IdP.
     */
    parameterName?: pulumi.Input<string>;
}

export interface FusionAuthApplicationSamlv2ConfigurationLogout {
    /**
     * This configuration is functionally equivalent to the Logout Behavior found in the OAuth2 configuration.
     */
    behavior?: pulumi.Input<string>;
    /**
     * The unique Id of the Key used to verify the signature if the public key cannot be determined by the KeyInfo element when using POST bindings, or the key used to verify the signature when using HTTP Redirect bindings.
     */
    defaultVerificationKeyId?: pulumi.Input<string>;
    /**
     * The unique Id of the Key used to sign the SAML Logout response.
     */
    keyId?: pulumi.Input<string>;
    /**
     * Set this parameter equal to true to require the SAML v2 Service Provider to sign the Logout request. When this value is true all Logout requests missing a signature will be rejected.
     */
    requireSignedRequests?: pulumi.Input<boolean>;
    singleLogout?: pulumi.Input<inputs.FusionAuthApplicationSamlv2ConfigurationLogoutSingleLogout>;
    /**
     * The XML signature canonicalization method used when digesting and signing the SAML Logout response. Unfortunately, many service providers do not correctly implement the XML signature specifications and force a specific canonicalization method. This setting allows you to change the canonicalization method to match the service provider. Often, service providers don’t even document their required method. You might need to contact enterprise support at the service provider to figure out what method they use.
     */
    xmlSignatureCanonicalizationMethod?: pulumi.Input<string>;
}

export interface FusionAuthApplicationSamlv2ConfigurationLogoutSingleLogout {
    /**
     * Whether or not SAML Single Logout for this SAML IdP is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The unique Id of the Key used to sign the SAML Single Logout response.
     */
    keyId?: pulumi.Input<string>;
    /**
     * The URL at which you want to receive the LogoutRequest from FusionAuth.
     */
    url?: pulumi.Input<string>;
    /**
     * The XML signature canonicalization method used when digesting and signing the SAML Single Logout response. Unfortunately, many service providers do not correctly implement the XML signature specifications and force a specific canonicalization method. This setting allows you to change the canonicalization method to match the service provider. Often, service providers don’t even document their required method. You might need to contact enterprise support at the service provider to figure out what method they use.
     */
    xmlSignatureCanonicalizationMethod?: pulumi.Input<string>;
}

export interface FusionAuthApplicationWebauthnConfiguration {
    /**
     * Indicates if this application enables WebAuthn workflows based on the configuration defined here or the Tenant WebAuthn configuration. If this is false, WebAuthn workflows will be enabled based on the Tenant configuration. If true, WebAuthn workflows will be enabled according to the configuration of this application.
     */
    bootstrapWorkflowEnabled?: pulumi.Input<boolean>;
    /**
     * Whether the WebAuthn bootstrap workflow is enabled for this application. This overrides the tenant configuration. Has no effect if application.webAuthnConfiguration.enabled is false.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Whether the WebAuthn reauthentication workflow is enabled for this application. This overrides the tenant configuration. Has no effect if application.webAuthnConfiguration.enabled is false.
     */
    reauthenticationWorkflowEnabled?: pulumi.Input<boolean>;
}

export interface FusionAuthEntityTypeJwtConfiguration {
    /**
     * The unique ID of the signing key used to sign the access token. Required when
     * enabled is set to true.
     */
    accessTokenKeyId?: pulumi.Input<string>;
    /**
     * Indicates if this application is using the JWT configuration defined here or the global JWT
     * configuration defined by the Tenant. If this is false the signing algorithm configured in the Tenant will be used.
     * If true the signing algorithm defined in this application will be used.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The length of time in seconds the JWT will live before it is expired and no longer valid. Required when enabled is set to true.
     */
    timeToLiveInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthFormFieldValidator {
    /**
     * Determines if user input should be validated.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A regular expression used to validate user input. Must be a valid regular expression pattern.
     */
    expression?: pulumi.Input<string>;
}

export interface FusionAuthFormStep {
    /**
     * An ordered list of Form Field Ids assigned to this step.
     */
    fields: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FusionAuthIdpAppleApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * The Apple Bundle identifier found in your Apple Developer Account which has been configured for Sign in with Apple. The Bundle identifier is used to Sign in with Apple from native applications. The request must include `bundleId` or `servicesId` . If `servicesId` is omitted, this field is required.
     */
    bundleId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level keyId.
     */
    keyId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for for the top level scope.
     */
    scope?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for for the top level servicesId.
     */
    servicesId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for for the top level teamId.
     */
    teamId?: pulumi.Input<string>;
}

export interface FusionAuthIdpAppleTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpExternalJwtApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthIdpExternalJwtTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpFacebookApplicationConfiguration {
    /**
     * This is an optional Application specific override for the top level `appId`.
     */
    appId?: pulumi.Input<string>;
    /**
     * ID of the FusionAuth Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `buttonText`.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `clientSecret`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Determines if a `UserRegistration` is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the `applicationId` property.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level `fields`.
     */
    fields?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `permissions`.
     */
    permissions?: pulumi.Input<string>;
}

export interface FusionAuthIdpFacebookTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpGoogleApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client id.
     */
    clientId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level properties.
     */
    properties?: pulumi.Input<inputs.FusionAuthIdpGoogleApplicationConfigurationProperties>;
    /**
     * This is an optional Application specific override for for the top level scope.
     */
    scope?: pulumi.Input<string>;
}

export interface FusionAuthIdpGoogleApplicationConfigurationProperties {
    /**
     * This is an optional Application specific override for the top level properties.api . If this `loginMethod` is set to UsePopup, or the Application configuration is unset and the top level loginMethod is set to UsePopup, and this value contains the conflicting ux_mode=redirect property, that single property will be replaced with ux_mode=popup.
     */
    api?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `button`.
     */
    button?: pulumi.Input<string>;
}

export interface FusionAuthIdpGoogleProperties {
    /**
     * Google Identity Services login API configuration in a properties file formatted String. Any attribute from Google's documentation can be added. Properties can be referenced in templates that support Google login to initialize the API via HTML or JavaScript. The properties specified in this field should not include the data- prefix on the property name. If the `loginMethod` is set to UsePopup and this value contains the conflicting ux_mode=redirect property, that single property will be replaced with ux_mode=popup.
     */
    api?: pulumi.Input<string>;
    /**
     * Google Identity Services button configuration in a properties file formatted String. Any attribute from Google's documentation can be added. Properties can be referenced in templates that support Google login to render the login button via HTML or JavaScript. The properties specified in this field should not include the data- prefix on the property name.
     */
    button?: pulumi.Input<string>;
}

export interface FusionAuthIdpGoogleTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpLinkedInApplicationConfiguration {
    /**
     * ID of the FusionAuth Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `buttonText`.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `clientId`.
     */
    clientId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level `clientSecret`.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Determines if a `UserRegistration` is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the `applicationId` property.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level `scope`.
     */
    scope?: pulumi.Input<string>;
}

export interface FusionAuthIdpLinkedInTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpOpenIdConnectApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button image URL.
     */
    buttonImageUrl?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level client id.
     */
    oauth2ClientId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client secret.
     */
    oauth2ClientSecret?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level scope.
     */
    oauth2Scope?: pulumi.Input<string>;
}

export interface FusionAuthIdpOpenIdConnectTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpPsnApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_id.
     */
    clientId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level scope.
     */
    scope?: pulumi.Input<string>;
}

export interface FusionAuthIdpPsnTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlV2IdpInitiatedApplicationConfiguration {
    applicationId?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthIdpSamlV2IdpInitiatedAssertionConfiguration {
    /**
     * The decryption configuration for the SAML v2 identity provider.
     */
    decryption?: pulumi.Input<inputs.FusionAuthIdpSamlV2IdpInitiatedAssertionConfigurationDecryption>;
}

export interface FusionAuthIdpSamlV2IdpInitiatedAssertionConfigurationDecryption {
    /**
     * Determines if FusionAuth requires encrypted assertions in SAML responses from the identity provider. When true, SAML responses from the identity provider containing unencrypted assertions will be rejected by FusionAuth.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Id of the key stored in Key Master that is used to decrypt the symmetric key on the SAML response sent to FusionAuth from the identity provider. The selected Key must contain an RSA private key. Required when `'enabled` is true.
     */
    keyTransportDecryptionKeyId: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlV2IdpInitiatedTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlv2ApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button image URL.
     */
    buttonImageUrl?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthIdpSamlv2AssertionConfiguration {
    /**
     * The configuration for the SAML assertion decryption.
     */
    decryption?: pulumi.Input<inputs.FusionAuthIdpSamlv2AssertionConfigurationDecryption>;
    /**
     * The array of URLs that FusionAuth will accept as SAML login destinations if the `policy` setting is AllowAlternates.
     */
    destination?: pulumi.Input<inputs.FusionAuthIdpSamlv2AssertionConfigurationDestination>;
}

export interface FusionAuthIdpSamlv2AssertionConfigurationDecryption {
    /**
     * Determines if FusionAuth requires encrypted assertions in SAML responses from the identity provider. When true, SAML responses from the identity provider containing unencrypted assertions will be rejected by FusionAuth.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Id of the key stored in Key Master that is used to decrypt the symmetric key on the SAML response sent to FusionAuth from the identity provider. The selected Key must contain an RSA private key. Required when `enabled` is true.
     */
    keyTransportDecryptionKeyId: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlv2AssertionConfigurationDestination {
    /**
     * The alternate destinations of the assertion.
     */
    alternates?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The policy to use when performing a destination assertion on the SAML login request. The possible values are `Enabled`, `Disabled`, and `AllowAlternates`.
     */
    policy?: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlv2IdpInitiatedConfiguration {
    /**
     * Determines if FusionAuth will accept IdP initiated login requests from this SAMLv2 Identity Provider.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The EntityId (unique identifier) of the SAML v2 identity provider. This value should be provided to you. Required when `enabled` is true.
     */
    issuer?: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlv2LoginHintConfiguration {
    /**
     * When enabled and HTTP-Redirect bindings are used, FusionAuth will provide the username or email address when available to the IdP as a login hint using the configured parameter name set by the `parameterName` to initiate the AuthN request.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The name of the parameter used to pass the username or email as login hint to the IDP when enabled, and HTTP redirect bindings are used to initiate the AuthN request. The default value is `loginHint`. Required when `enabled` is true.
     */
    parameterName?: pulumi.Input<string>;
}

export interface FusionAuthIdpSamlv2TenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpSteamApplicationConfiguration {
    /**
     * This is an optional Application specific override for the top level apiMode.
     */
    apiMode?: pulumi.Input<string>;
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_id.
     */
    clientId?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level scope.
     */
    scope?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level webAPIKey.
     */
    webApiKey?: pulumi.Input<string>;
}

export interface FusionAuthIdpSteamTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpTwitchApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_id.
     */
    clientId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level scope.
     */
    scope?: pulumi.Input<string>;
}

export interface FusionAuthIdpTwitchTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthIdpXBoxApplicationConfiguration {
    /**
     * ID of the Application to apply this configuration to.
     */
    applicationId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level button text.
     */
    buttonText?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_id.
     */
    clientId?: pulumi.Input<string>;
    /**
     * This is an optional Application specific override for the top level client_secret.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * Determines if a UserRegistration is created for the User automatically or not. If a user doesn’t exist in FusionAuth and logs in through an identity provider, this boolean controls whether or not FusionAuth creates a registration for the User in the Application they are logging into.
     */
    createRegistration?: pulumi.Input<boolean>;
    /**
     * Determines if this identity provider is enabled for the Application specified by the applicationId key.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * This is an optional Application specific override for the top level scope.
     */
    scope?: pulumi.Input<string>;
}

export interface FusionAuthIdpXBoxTenantConfiguration {
    /**
     * When enabled, the number of identity provider links a user may create is enforced by maximumLinks
     */
    limitUserLinkCountEnabled?: pulumi.Input<boolean>;
    /**
     * Determines if this provider is enabled. If it is false then it will be disabled globally.
     */
    limitUserLinkCountMaximumLinks?: pulumi.Input<number>;
    /**
     * The unique Id of the tenant that this configuration applies to.
     */
    tenantId?: pulumi.Input<string>;
}

export interface FusionAuthSystemConfigurationAuditLogConfiguration {
    delete?: pulumi.Input<inputs.FusionAuthSystemConfigurationAuditLogConfigurationDelete>;
}

export interface FusionAuthSystemConfigurationAuditLogConfigurationDelete {
    /**
     * Whether or not FusionAuth should delete the Audit Log based upon this configuration. When true the auditLogConfiguration.delete.numberOfDaysToRetain will be used to identify audit logs that are eligible for deletion. When this value is set to false audit logs will be preserved forever.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of days to retain the Audit Log.
     */
    numberOfDaysToRetain?: pulumi.Input<number>;
}

export interface FusionAuthSystemConfigurationCorsConfiguration {
    /**
     * The Access-Control-Allow-Credentials response header values as described by MDN Access-Control-Allow-Credentials.
     */
    allowCredentials?: pulumi.Input<boolean>;
    /**
     * The Access-Control-Allow-Headers response header values as described by MDN Access-Control-Allow-Headers.
     */
    allowedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Access-Control-Allow-Methods response header values as described by MDN Access-Control-Allow-Methods.
     */
    allowedMethods?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Access-Control-Allow-Origin response header values as described by MDN Access-Control-Allow-Origin. If the wildcard * is specified, no additional domains may be specified.
     */
    allowedOrigins?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Whether or not FusionAuth will log debug messages to the event log. This is primarily useful for identifying why the FusionAuth CORS filter is rejecting a request and returning an HTTP response status code of 403.
     */
    debug?: pulumi.Input<boolean>;
    /**
     * Whether the FusionAuth CORS filter will process requests made to FusionAuth.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Access-Control-Expose-Headers response header values as described by MDN Access-Control-Expose-Headers.
     */
    exposedHeaders?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The Access-Control-Max-Age response header values as described by MDN Access-Control-Max-Age.
     */
    preflightMaxAgeInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthSystemConfigurationEventLogConfiguration {
    /**
     * The number of events to retain. Once the the number of event logs exceeds this configured value they will be deleted starting with the oldest event logs.
     */
    numberToRetain?: pulumi.Input<number>;
}

export interface FusionAuthSystemConfigurationLoginRecordConfiguration {
    delete?: pulumi.Input<inputs.FusionAuthSystemConfigurationLoginRecordConfigurationDelete>;
}

export interface FusionAuthSystemConfigurationLoginRecordConfigurationDelete {
    /**
     * Whether or not FusionAuth should delete the login records based upon this configuration. When true the loginRecordConfiguration.delete.numberOfDaysToRetain will be used to identify login records that are eligible for deletion. When this value is set to false login records will be preserved forever.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of days to retain login records.
     */
    numberOfDaysToRetain?: pulumi.Input<number>;
}

export interface FusionAuthSystemConfigurationTrustedProxyConfiguration {
    /**
     * This setting is used to resolve the client IP address for use in logging, webhooks, and IP-based access control when an X-Forwarded-For header is provided. Because proxies are free to rewrite the X-Forwarded-For header, an untrusted proxy could write a value that allowed it to bypass IP-based ACLs, or cause an incorrect IP address to be logged or sent to a webhook. Valid values are `All` and `OnlyConfigured`.
     */
    trustPolicy?: pulumi.Input<string>;
    /**
     * An array of IP addresses, representing the set of trusted upstream proxies. This value will be accepted but ignored when `trustPolicy` is set to `All`. Values may be specified as IPv4, or IPv6 format, and ranges of addresses are also accepted in CIDR notation.
     */
    trusteds?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FusionAuthSystemConfigurationUiConfiguration {
    /**
     * A hexadecimal color to override the default menu color in the user interface.
     */
    headerColor?: pulumi.Input<string>;
    /**
     * A URL of a logo to override the default FusionAuth logo in the user interface.
     */
    logoUrl?: pulumi.Input<string>;
    /**
     * A hexadecimal color to override the default menu font color in the user interface.
     */
    menuFontColor?: pulumi.Input<string>;
}

export interface FusionAuthSystemConfigurationUsageDataConfiguration {
    /**
     * Whether or not FusionAuth collects and sends usage data to improve the product.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthSystemConfigurationWebhookEventLogConfiguration {
    delete?: pulumi.Input<inputs.FusionAuthSystemConfigurationWebhookEventLogConfigurationDelete>;
}

export interface FusionAuthSystemConfigurationWebhookEventLogConfigurationDelete {
    /**
     * Whether or not FusionAuth should delete the webhook event logs based upon this configuration. When true the webhookEventLogConfiguration.delete.numberOfDaysToRetain will be used to identify webhook event logs that are eligible for deletion. When this value is set to false webhook event logs will be preserved forever.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of days to retain webhook event logs.
     */
    numberOfDaysToRetain?: pulumi.Input<number>;
}

export interface FusionAuthTenantAccessControlConfiguration {
    /**
     * The Id of the IP Access Control List limiting access to all applications in this tenant.
     */
    uiIpAccessControlListId?: pulumi.Input<string>;
}

export interface FusionAuthTenantCaptchaConfiguration {
    /**
     * The type of captcha method to use. This field is required when tenant.captchaConfiguration.enabled is set to true.
     */
    captchaMethod?: pulumi.Input<string>;
    /**
     * Whether captcha configuration is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The secret key for this captcha method. This field is required when tenant.captchaConfiguration.enabled is set to true.
     */
    secretKey?: pulumi.Input<string>;
    /**
     * The site key for this captcha method. This field is required when tenant.captchaConfiguration.enabled is set to true.
     */
    siteKey?: pulumi.Input<string>;
    /**
     * The numeric threshold which separates a passing score from a failing one. This value only applies if using either the Google v3 or HCaptcha Enterprise method, otherwise this value is ignored.
     */
    threshold?: pulumi.Input<number>;
}

export interface FusionAuthTenantConnectorPolicy {
    /**
     * The identifier of the Connector to which this policy refers.
     */
    connectorId?: pulumi.Input<string>;
    /**
     * A list of email domains to which this connector should apply. A value of ["*"] indicates this connector applies to all users.
     */
    domains?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * If true, the user’s data will be migrated to FusionAuth at first successful authentication; subsequent authentications will occur against the FusionAuth datastore. If false, the Connector’s source will be treated as authoritative.
     */
    migrate?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantEmailConfiguration {
    /**
     * The additional SMTP headers to be added to each outgoing email. Each SMTP header consists of a name and a value.
     */
    additionalHeaders?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * Determines if debug should be enabled to create an event log to assist in debugging SMTP errors.
     */
    debug?: pulumi.Input<boolean>;
    /**
     * The default email address that emails will be sent from when a from address is not provided on an individual email template. This is the address part email address (i.e. Jared Dunn <jared@piedpiper.com>).
     */
    defaultFromEmail?: pulumi.Input<string>;
    /**
     * The default From Name used in sending emails when a from name is not provided on an individual email template. This is the display name part of the email address ( i.e. Jared Dunn <jared@piedpiper.com>).
     */
    defaultFromName?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when a user is sent a forgot password email.
     */
    emailUpdateEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to verify user emails.
     */
    emailVerifiedEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when a user is sent a forgot password email.
     */
    forgotPasswordEmailTemplateId?: pulumi.Input<string>;
    /**
     * The host name of the SMTP server that FusionAuth will use.
     */
    host?: pulumi.Input<string>;
    /**
     * When set to true, this allows email to be verified as a result of completing a similar email based workflow such as change password. When seto false, the user must explicitly complete the email verification workflow even if the user has already completed a similar email workflow such as change password.
     */
    implicitEmailVerificationAllowed?: pulumi.Input<boolean>;
    /**
     * The Id of the Email Template used to send emails to users when another user attempts to create an account with their login Id.
     */
    loginIdInUseOnCreateEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when another user attempts to create an account with their login Id.
     */
    loginIdInUseOnUpdateEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when they log in on a new device.
     */
    loginNewDeviceEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when a suspicious login occurs.
     */
    loginSuspiciousEmailTemplateId?: pulumi.Input<string>;
    /**
     * An optional password FusionAuth will use to authenticate with the SMTP server.
     */
    password?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when they have completed a 'forgot password' workflow and their password habeen reset.
     */
    passwordResetSuccessEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when they have completed a 'forgot password' workflow and their password has been rese
     */
    passwordUpdateEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Passwordless Email Template.
     */
    passwordlessEmailTemplateId?: pulumi.Input<string>;
    /**
     * The port of the SMTP server that FusionAuth will use.
     */
    port?: pulumi.Input<number>;
    /**
     * Additional Email Configuration in a properties file formatted String.
     */
    properties?: pulumi.Input<string>;
    /**
     * The type of security protocol FusionAuth will use when connecting to the SMTP server.
     */
    security?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when a user had their account created for them and they must set their password manually and they are sent an email to set their password.
     */
    setPasswordEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when a MFA method has been added to their account.
     */
    twoFactorMethodAddEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template used to send emails to users when a MFA method has been removed from their account.
     */
    twoFactorMethodRemoveEmailTemplateId?: pulumi.Input<string>;
    unverified?: pulumi.Input<inputs.FusionAuthTenantEmailConfigurationUnverified>;
    /**
     * An optional username FusionAuth will to authenticate with the SMTP server.
     */
    username?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used to send the verification emails to users. These emails are used to verify that a user’s email address ivalid. If either the verifyEmail or verifyEmailWhenChanged fields are true this field is required.
     */
    verificationEmailTemplateId?: pulumi.Input<string>;
    /**
     * The process by which the user will verify their email address. Possible values are `ClickableLink` or `FormField`.
     */
    verificationStrategy?: pulumi.Input<string>;
    /**
     * Whether the user’s email addresses are verified when the registers with your application.
     */
    verifyEmail?: pulumi.Input<boolean>;
    /**
     * Whether the user’s email addresses are verified when the user changes them.
     */
    verifyEmailWhenChanged?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantEmailConfigurationUnverified {
    /**
     * When this value is set to true, the user is allowed to change their email address when they are gated because they haven’t verified their email address.
     */
    allowEmailChangeWhenGated?: pulumi.Input<boolean>;
    /**
     * = (Optional) The behavior when detecting breaches at time of user login.
     */
    behavior?: pulumi.Input<string>;
}

export interface FusionAuthTenantEventConfiguration {
    /**
     * Whether or not FusionAuth should send these types of events to any configured Webhooks.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The event type
     */
    event?: pulumi.Input<string>;
    /**
     * The transaction type that FusionAuth uses when sending these types of events to any configured Webhooks.
     */
    transactionType?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfiguration {
    /**
     * The time in seconds until a OAuth authorization code in no longer valid to be exchanged for an access token. This is essentially the time allowed between the start of an Authorization request during the Authorization code grant and when you request an access token using this authorization code on the Token endpoint. Defaults to 30.
     */
    authorizationGrantIdTimeToLiveInSeconds?: pulumi.Input<number>;
    changePasswordIdGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationChangePasswordIdGenerator>;
    /**
     * The time in seconds until a change password Id is no longer valid and cannot be used by the Change Password API. Value must be greater than 0. Defaults to 600.
     */
    changePasswordIdTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until a device code Id is no longer valid and cannot be used by the Token API. Value must be greater than 0. Defaults to 300.
     */
    deviceCodeTimeToLiveInSeconds?: pulumi.Input<number>;
    deviceUserCodeIdGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationDeviceUserCodeIdGenerator>;
    emailVerificationIdGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationEmailVerificationIdGenerator>;
    /**
     * The time in seconds until a email verification Id is no longer valid and cannot be used by the Verify Email API. Value must be greater than 0.
     */
    emailVerificationIdTimeToLiveInSeconds?: pulumi.Input<number>;
    emailVerificationOneTimeCodeGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationEmailVerificationOneTimeCodeGenerator>;
    /**
     * The time in seconds until an external authentication Id is no longer valid and cannot be used by the Token API. Value must be greater than 0. Defaults to 300.
     */
    externalAuthenticationIdTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until a Login Timeout identifier is no longer valid to complete post-authentication steps in the OAuth workflow. Must be greater than 0. Defaults to 1800.
     */
    loginIntentTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until a One Time Password is no longer valid and cannot be used by the Login API. Value must be greater than 0. Defaults to 60.
     */
    oneTimePasswordTimeToLiveInSeconds?: pulumi.Input<number>;
    passwordlessLoginGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationPasswordlessLoginGenerator>;
    /**
     * The time in seconds until a passwordless code is no longer valid and cannot be used by the Passwordless API. Value must be greater than 0. Defaults to 180.
     */
    passwordlessLoginTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The number of seconds before the pending account link identifier is no longer valid to complete an account link request. Value must be greater than 0. Defaults to 3600
     */
    pendingAccountLinkTimeToLiveInSeconds?: pulumi.Input<number>;
    registrationVerificationIdGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationRegistrationVerificationIdGenerator>;
    /**
     * The time in seconds until a registration verification Id is no longer valid and cannot be used by the Verify Registration API. Value must be greater than 0.
     */
    registrationVerificationIdTimeToLiveInSeconds?: pulumi.Input<number>;
    registrationVerificationOneTimeCodeGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationRegistrationVerificationOneTimeCodeGenerator>;
    /**
     * The time in seconds until remembered OAuth scope consent choices are no longer valid, and the User will be prompted to consent to requested OAuth scopes even if they have not changed. Applies only when `application.oauthConfiguration.consentMode` is set to RememberDecision. Value must be greater than 0. Note: An Essentials or Enterprise plan is required to utilize advanced OAuth scopes. Defaults to 2592000.
     */
    rememberOauthScopeConsentChoiceTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds that a SAML AuthN request will be eligible for use to authenticate with FusionAuth. Defaults to 300.
     */
    samlV2AuthnRequestIdTtlSeconds?: pulumi.Input<number>;
    setupPasswordIdGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationSetupPasswordIdGenerator>;
    /**
     * The time in seconds until a setup password Id is no longer valid and cannot be used by the Change Password API. Value must be greater than 0.
     */
    setupPasswordIdTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The number of seconds before the Trust Token is no longer valid to complete a request that requires trust. Value must be greater than 0. Defaults to 180
     */
    trustTokenTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until a two factor Id is no longer valid and cannot be used by the Two Factor Login API. Value must be greater than 0. Defaults to 300.
     */
    twoFactorIdTimeToLiveInSeconds?: pulumi.Input<number>;
    twoFactorOneTimeCodeIdGenerator?: pulumi.Input<inputs.FusionAuthTenantExternalIdentifierConfigurationTwoFactorOneTimeCodeIdGenerator>;
    /**
     * The number of seconds before the Two-Factor One Time Code used to enable or disable a two-factor method is no longer valid. Must be greater than 0. Defaults to 60.
     */
    twoFactorOneTimeCodeIdTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until an issued Two Factor trust Id is no longer valid and the User will be Optional to complete Two Factor authentication during the next authentication attempt. Value must be greater than 0.
     */
    twoFactorTrustIdTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until a WebAuthn authentication challenge is no longer valid and the User will be required to restart the WebAuthn authentication ceremony by creating a new challenge. This value also controls the timeout for the client-side WebAuthn navigator.credentials.get API call. Value must be greater than 0. Note: A license is required to utilize WebAuthn. Defaults to 180.
     */
    webauthnAuthenticationChallengeTimeToLiveInSeconds?: pulumi.Input<number>;
    /**
     * The time in seconds until a WebAuthn registration challenge is no longer valid and the User will be required to restart the WebAuthn registration ceremony by creating a new challenge. This value also controls the timeout for the client-side WebAuthn navigator.credentials.create API call. Value must be greater than 0. Note: A license is required to utilize WebAuthn. Defaults to 180.
     */
    webauthnRegistrationChallengeTimeToLiveInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationChangePasswordIdGenerator {
    /**
     * The length of the secure generator used for generating the change password Id. Defaults to 32.
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the change password Id. Defaults to randomBytes.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationDeviceUserCodeIdGenerator {
    /**
     * The length of the secure generator used for generating the change password Id. Defaults to 6.
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the change password Id. Defaults to randomAlphaNumeric.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationEmailVerificationIdGenerator {
    /**
     * The length of the secure generator used for generating the change password Id. Defaults to 32.
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the change password Id. Defaults to randomBytes.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationEmailVerificationOneTimeCodeGenerator {
    /**
     * The length of the secure generator used for generating the email verification one time code. Defaults to 6.
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the email verification one time code. Defaults to randomAlphaNumeric.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationPasswordlessLoginGenerator {
    /**
     * The length of the secure generator used for generating the change password Id. Defaults to 32
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the change password Id. Defaults to randomBytes.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationRegistrationVerificationIdGenerator {
    /**
     * The length of the secure generator used for generating the change password Id. Defaults to 32
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the change password Id. Defaults to randomBytes.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationRegistrationVerificationOneTimeCodeGenerator {
    /**
     * The length of the secure generator used for generating the registration verification one time code. Defaults to 6.
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the registration verification one time code. Defaults to randomAlphaNumeric.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationSetupPasswordIdGenerator {
    /**
     * The length of the secure generator used for generating the change password Id. Defaults to 32.
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the change password Id. Defaults to randomBytes.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantExternalIdentifierConfigurationTwoFactorOneTimeCodeIdGenerator {
    /**
     * The length of the secure generator used for generating the the two factor code Id. Defaults to 6
     */
    length?: pulumi.Input<number>;
    /**
     * The type of the secure generator used for generating the two factor one time code Id. Defaults to randomDigits.
     */
    type?: pulumi.Input<string>;
}

export interface FusionAuthTenantFailedAuthenticationConfiguration {
    /**
     * Indicates whether you want the user to be able to self-service unlock their account prior to the action duration by completing a password reset workflow.
     */
    actionCancelPolicyOnPasswordReset?: pulumi.Input<boolean>;
    /**
     * The duration of the User Action. This value along with the actionDurationUnit will be used to set the duration of the User Action. Value must be greater than 0.
     */
    actionDuration?: pulumi.Input<number>;
    /**
     * The unit of time associated with a duration.
     */
    actionDurationUnit?: pulumi.Input<string>;
    /**
     * Indicates you would like to email the user when the user’s account is locked due to this action being taken. This requires the User Action specified by the tenant.failedAuthenticationConfiguration.userActionId to also be configured for email. If the User Action is not configured to be able to email the user, this configuration will be ignored.
     */
    emailUser?: pulumi.Input<boolean>;
    /**
     * The length of time in seconds before the failed authentication count will be reset. Value must be greater than 0.
     */
    resetCountInSeconds?: pulumi.Input<number>;
    /**
     * The number of failed attempts considered to be too many. Once this threshold is reached the specified User Action will be applied to the user for the duration specified. Value must be greater than 0.
     */
    tooManyAttempts?: pulumi.Input<number>;
    /**
     * The Id of the User Action that is applied when the threshold is reached for too many failed authentication attempts.
     */
    userActionId?: pulumi.Input<string>;
}

export interface FusionAuthTenantFamilyConfiguration {
    /**
     * Whether to allow child registrations.
     */
    allowChildRegistrations?: pulumi.Input<boolean>;
    /**
     * The unique Id of the email template to use when confirming a child.
     */
    confirmChildEmailTemplateId?: pulumi.Input<string>;
    /**
     * Indicates that child users without parental verification will be permanently deleted after tenant.familyConfiguration.deleteOrphanedAccountsDays days.
     */
    deleteOrphanedAccounts?: pulumi.Input<boolean>;
    /**
     * The number of days from creation child users will be retained before being deleted for not completing parental verification. Value must be greater than 0.
     */
    deleteOrphanedAccountsDays?: pulumi.Input<number>;
    /**
     * Whether family configuration is enabled.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The unique Id of the email template to use when a family request is made.
     */
    familyRequestEmailTemplateId?: pulumi.Input<string>;
    /**
     * The maximum age of a child. Value must be greater than 0.
     */
    maximumChildAge?: pulumi.Input<number>;
    /**
     * The minimum age to be an owner. Value must be greater than 0.
     */
    minimumOwnerAge?: pulumi.Input<number>;
    /**
     * Whether a parent email is required.
     */
    parentEmailRequired?: pulumi.Input<boolean>;
    /**
     * The unique Id of the email template to use for parent registration.
     */
    parentRegistrationEmailTemplateId?: pulumi.Input<string>;
}

export interface FusionAuthTenantFormConfiguration {
    /**
     * The unique Id of the form to use for the Add and Edit User form when used in the FusionAuth admin UI.
     */
    adminUserFormId?: pulumi.Input<string>;
}

export interface FusionAuthTenantJwtConfiguration {
    /**
     * The unique id of the signing key used to sign the access token. Required prior to `1.30.0`.
     */
    accessTokenKeyId?: pulumi.Input<string>;
    /**
     * The unique id of the signing key used to sign the Id token. Required prior to `1.30.0`.
     */
    idTokenKeyId?: pulumi.Input<string>;
    /**
     * The refresh token expiration policy.
     */
    refreshTokenExpirationPolicy?: pulumi.Input<string>;
    /**
     * The length of time specified in seconds that a one-time use token can be reused. This value must be greater than 0 and less than 86400 which is equal to 24 hours. Setting this value to 0 effectively disables the grace period which means a one-time token may not be reused. For security reasons, you should keep this value as small as possible, and only increase past 0 to improve reliability for an asynchronous or clustered integration that may require a brief grace period. Defaults to 0.
     */
    refreshTokenOneTimeUseConfigurationGracePeriodInSeconds?: pulumi.Input<number>;
    /**
     * When enabled, the refresh token will be revoked when a user action, such as locking an account based on a number of failed login attempts, prevents user login.
     */
    refreshTokenRevocationPolicyOnLoginPrevented?: pulumi.Input<boolean>;
    /**
     * When enabled, all refresh tokens will be revoked when a user enables multi-factor authentication for the first time. This policy will not be applied when adding subsequent multi-factor methods to the user.
     */
    refreshTokenRevocationPolicyOnMultiFactorEnable?: pulumi.Input<boolean>;
    /**
     * When enabled, if a one-time use refresh token is reused, the token will be revoked. This does not cause all refresh tokens to be revoked, only the reused token is revoked.
     */
    refreshTokenRevocationPolicyOnOneTimeTokenReuse?: pulumi.Input<boolean>;
    /**
     * When enabled, the refresh token will be revoked when a user changes their password."
     */
    refreshTokenRevocationPolicyOnPasswordChange?: pulumi.Input<boolean>;
    /**
     * The maximum lifetime of a refresh token when using a refresh token expiration policy of SlidingWindowWithMaximumLifetime. Value must be greater than 0.
     */
    refreshTokenSlidingWindowMaximumTimeToLiveInMinutes?: pulumi.Input<number>;
    /**
     * The length of time in minutes a Refresh Token is valid from the time it was issued. Value must be greater than 0.
     */
    refreshTokenTimeToLiveInMinutes?: pulumi.Input<number>;
    /**
     * The refresh token usage policy.
     */
    refreshTokenUsagePolicy?: pulumi.Input<string>;
    /**
     * The length of time in seconds this JWT is valid from the time it was issued. Value must be greater than 0.
     */
    timeToLiveInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantLambdaConfiguration {
    /**
     * The Id of the lambda that will be invoked at the end of a successful login request in order to extend custom validation of a login request.
     */
    loginValidationId: pulumi.Input<string>;
    /**
     * The Id of a SCIM User Request lambda that will be used to convert the SCIM Enterprise User request to a FusionAuth User. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    scimEnterpriseUserRequestConverterId: pulumi.Input<string>;
    /**
     * The Id of a SCIM User Response lambda that will be used to convert a FusionAuth Enterprise User to a SCIM Server response. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    scimEnterpriseUserResponseConverterId: pulumi.Input<string>;
    /**
     * The Id of a SCIM Group Request lambda that will be used to convert the SCIM Group request to a FusionAuth Group. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    scimGroupRequestConverterId: pulumi.Input<string>;
    /**
     * The Id of a SCIM Group Response lambda that will be used to convert a FusionAuth Group to a SCIM Server response. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    scimGroupResponseConverterId: pulumi.Input<string>;
    /**
     * The Id of a SCIM User Request lambda that will be used to convert the SCIM User request to a FusionAuth User. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    scimUserRequestConverterId: pulumi.Input<string>;
    /**
     * The Id of a SCIM User Response lambda that will be used to convert a FusionAuth User to a SCIM Server response. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    scimUserResponseConverterId: pulumi.Input<string>;
}

export interface FusionAuthTenantLoginConfiguration {
    /**
     * Indicates whether to require an API key for the Login API when an `applicationId` is not provided. When an `applicationId` is provided to the Login API call, the application configuration will take precedence. In almost all cases, you will want to this to be `true`.
     */
    requireAuthentication?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantMaximumPasswordAge {
    /**
     * The password maximum age in days. The number of days after which FusionAuth will require a user to change their password. Required when systemConfiguration.maximumPasswordAge.enabled is set to true.
     */
    days?: pulumi.Input<number>;
    /**
     * Indicates that the maximum password age is enabled and being enforced.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantMinimumPasswordAge {
    /**
     * Indicates that the minimum password age is enabled and being enforced.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The password minimum age in seconds. When enabled FusionAuth will not allow a password to be changed until it reaches this minimum age. Required when systemConfiguration.minimumPasswordAge.enabled is set to true.
     */
    seconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantMultiFactorConfiguration {
    authenticator?: pulumi.Input<inputs.FusionAuthTenantMultiFactorConfigurationAuthenticator>;
    email?: pulumi.Input<inputs.FusionAuthTenantMultiFactorConfigurationEmail>;
    /**
     * When set to `Enabled` and a user has one or more two-factor methods configured, the user will be required to complete a two-factor challenge during login. When set to `Disabled`, even when a user has configured one or more two-factor methods, the user will not be required to complete a two-factor challenge during login. When the login policy is to `Required`, a two-factor challenge will be required during login. If a user does not have configured two-factor methods, they will not be able to log in.
     */
    loginPolicy?: pulumi.Input<string>;
    sms?: pulumi.Input<inputs.FusionAuthTenantMultiFactorConfigurationSms>;
}

export interface FusionAuthTenantMultiFactorConfigurationAuthenticator {
    /**
     * When enabled, users may utilize an authenticator application to complete a multi-factor authentication request. This method uses TOTP (Time-Based One-Time Password) as defined in RFC 6238 and often uses an native mobile app such as Google Authenticator.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantMultiFactorConfigurationEmail {
    /**
     * When enabled, users may utilize an email address to complete a multi-factor authentication request.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Id of the email template that is used when notifying a user to complete a multi-factor authentication request.
     */
    templateId?: pulumi.Input<string>;
}

export interface FusionAuthTenantMultiFactorConfigurationSms {
    /**
     * When enabled, users may utilize a mobile phone number to complete a multi-factor authentication request.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The messenger that is used to deliver a SMS multi-factor authentication request.
     */
    messengerId?: pulumi.Input<string>;
    /**
     * The Id of the SMS template that is used when notifying a user to complete a multi-factor authentication request.
     */
    templateId?: pulumi.Input<string>;
}

export interface FusionAuthTenantOauthConfiguration {
    /**
     * The Id of a lambda that will be called to populate the JWT during a client credentials grant. **Note:** A paid edition of FusionAuth is required to utilize client credentials grant.
     */
    clientCredentialsAccessTokenPopulateLambdaId?: pulumi.Input<string>;
}

export interface FusionAuthTenantPasswordEncryptionConfiguration {
    /**
     * The default method for encrypting the User’s password.
     */
    encryptionScheme?: pulumi.Input<string>;
    /**
     * The factor used by the password encryption scheme. If not provided, the PasswordEncryptor provides a default value. Generally this will be used as an iteration count to generate the hash. The actual use of this value is up to the PasswordEncryptor implementation.
     */
    encryptionSchemeFactor?: pulumi.Input<number>;
    /**
     * When enabled a user’s hash configuration will be modified to match these configured settings. This can be useful to increase a password hash strength over time or upgrade imported users to a more secure encryption scheme after an initial import.
     */
    modifyEncryptionSchemeOnLogin?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantPasswordValidationRules {
    breachDetection?: pulumi.Input<inputs.FusionAuthTenantPasswordValidationRulesBreachDetection>;
    /**
     * The maximum length of a password when a new user is created or a user requests a password change. This value must be greater than 0 and less than or equal to 256. When `passwordEncryptionConfiguration.encryptionScheme` is equal to `bcrypt`, the maximum will be limited to 50.
     */
    maxLength?: pulumi.Input<number>;
    /**
     * The minimum length of a password when a new user is created or a user requests a password change.
     */
    minLength?: pulumi.Input<number>;
    rememberPreviousPasswords?: pulumi.Input<inputs.FusionAuthTenantPasswordValidationRulesRememberPreviousPasswords>;
    /**
     * Whether to force the user to use at least one non-alphanumeric character.
     */
    requireNonAlpha?: pulumi.Input<boolean>;
    /**
     * Whether to force the user to use at least one number.
     */
    requireNumber?: pulumi.Input<boolean>;
    /**
     * Whether to force the user to use at least one uppercase and one lowercase character.
     */
    requiredMixedCase?: pulumi.Input<boolean>;
    /**
     * When enabled the user’s password will be validated during login. If the password does not meet the currently configured validation rules the user will be required to change their password.
     */
    validateOnLogin?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantPasswordValidationRulesBreachDetection {
    /**
     * Whether to enable Reactor breach detection. Requires an activated license.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The level of severity where Reactor will consider a breach.
     */
    matchMode?: pulumi.Input<string>;
    /**
     * The Id of the email template to use when notifying user of breached password. Required if tenant.passwordValidationRules.breachDetection.onLogin is set to NotifyUser.
     */
    notifyUserEmailTemplateId?: pulumi.Input<string>;
    /**
     * The behavior when detecting breaches at time of user login
     */
    onLogin?: pulumi.Input<string>;
}

export interface FusionAuthTenantPasswordValidationRulesRememberPreviousPasswords {
    /**
     * The number of previous passwords to remember. Value must be greater than 0.
     */
    count?: pulumi.Input<number>;
    /**
     * Whether to prevent a user from using any of their previous passwords.
     */
    enabled?: pulumi.Input<boolean>;
}

export interface FusionAuthTenantRateLimitConfiguration {
    failedLogin?: pulumi.Input<inputs.FusionAuthTenantRateLimitConfigurationFailedLogin>;
    forgotPassword?: pulumi.Input<inputs.FusionAuthTenantRateLimitConfigurationForgotPassword>;
    sendEmailVerification?: pulumi.Input<inputs.FusionAuthTenantRateLimitConfigurationSendEmailVerification>;
    sendPasswordless?: pulumi.Input<inputs.FusionAuthTenantRateLimitConfigurationSendPasswordless>;
    sendRegistrationVerification?: pulumi.Input<inputs.FusionAuthTenantRateLimitConfigurationSendRegistrationVerification>;
    sendTwoFactor?: pulumi.Input<inputs.FusionAuthTenantRateLimitConfigurationSendTwoFactor>;
}

export interface FusionAuthTenantRateLimitConfigurationFailedLogin {
    /**
     * Whether rate limiting is enabled for failed login.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of times a user can fail to login within the configured `timePeriodInSeconds` duration. If a Failed authentication action has been configured then it will take precedence.
     */
    limit?: pulumi.Input<number>;
    /**
     * The duration for the number of times a user can fail login before being rate limited.
     */
    timePeriodInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantRateLimitConfigurationForgotPassword {
    /**
     * Whether rate limiting is enabled for forgot password.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of times a user can request a forgot password email within the configured `timePeriodInSeconds` duration.
     */
    limit?: pulumi.Input<number>;
    /**
     * The duration for the number of times a user can request a forgot password email before being rate limited.
     */
    timePeriodInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantRateLimitConfigurationSendEmailVerification {
    /**
     * Whether rate limiting is enabled for send email verification.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of times a user can request a verification email within the configured `timePeriodInSeconds` duration.
     */
    limit?: pulumi.Input<number>;
    /**
     * The duration for the number of times a user can request a verification email before being rate limited.
     */
    timePeriodInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantRateLimitConfigurationSendPasswordless {
    /**
     * Whether rate limiting is enabled for send passwordless.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of times a user can request a passwordless login email within the configured `timePeriodInSeconds` duration.
     */
    limit?: pulumi.Input<number>;
    /**
     * The duration for the number of times a user can request a passwordless login email before being rate limited.
     */
    timePeriodInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantRateLimitConfigurationSendRegistrationVerification {
    /**
     * Whether rate limiting is enabled for send registration verification.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of times a user can request a registration verification email within the configured `timePeriodInSeconds` duration.
     */
    limit?: pulumi.Input<number>;
    /**
     * The duration for the number of times a user can request a registration verification email before being rate limited.
     */
    timePeriodInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantRateLimitConfigurationSendTwoFactor {
    /**
     * Whether rate limiting is enabled for send two factor.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The number of times a user can request a two-factor code by email or SMS within the configured `timePeriodInSeconds` duration.
     */
    limit?: pulumi.Input<number>;
    /**
     * The duration for the number of times a user can request a two-factor code by email or SMS before being rate limited.
     */
    timePeriodInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantRegistrationConfiguration {
    /**
     * A list of unique domains that are not allowed to register when self service is enabled.
     */
    blockedDomains?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface FusionAuthTenantScimServerConfiguration {
    /**
     * The Entity Type that will be used to represent SCIM Clients for this tenant. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    clientEntityTypeId: pulumi.Input<string>;
    /**
     * Whether or not this tenant has the SCIM endpoints enabled. Note: An Enterprise plan is required to utilize SCIM.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * SON formatted as a SCIM Schemas endpoint response. Because the SCIM lambdas may modify the JSON response, ensure the Schema's response matches that generated by the response lambdas. More about Schema definitions. When this parameter is not provided, it will default to EnterpriseUser, Group, and User schema definitions as defined by the SCIM core schemas spec. Note: An Enterprise plan is required to utilize SCIM.
     */
    schemas?: pulumi.Input<string>;
    /**
     * The Entity Type that will be used to represent SCIM Servers for this tenant. Note: An Enterprise plan is required to utilize SCIM. Required when `scim_server_configuration.enabled` is true.
     */
    serverEntityTypeId: pulumi.Input<string>;
}

export interface FusionAuthTenantSsoConfiguration {
    /**
     * The number of seconds before a trusted device is reset. When reset, a user is forced to complete captcha during login and complete two factor authentication if applicable.
     */
    deviceTrustTimeToLiveInSeconds?: pulumi.Input<number>;
}

export interface FusionAuthTenantUserDeletePolicy {
    /**
     * Indicates that users without a verified email address will be permanently deleted after tenant.userDeletePolicy.unverified.numberOfDaysToRetain days.
     */
    unverifiedEnabled?: pulumi.Input<boolean>;
    /**
     * The number of days from creation users will be retained before being deleted for not completing email verification. This field is required when tenant.userDeletePolicy.unverified.enabled is set to true. Value must be greater than 0.
     */
    unverifiedNumberOfDaysToRetain?: pulumi.Input<number>;
}

export interface FusionAuthTenantUsernameConfiguration {
    /**
     * Indicates that users without a verified email address will be permanently deleted after tenant.userDeletePolicy.unverified.numberOfDaysToRetain days.
     */
    unique?: pulumi.Input<inputs.FusionAuthTenantUsernameConfigurationUnique>;
}

export interface FusionAuthTenantUsernameConfigurationUnique {
    /**
     * When true, FusionAuth will handle username collisions by generating a random suffix.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The maximum number of digits to use when building a unique suffix for a username. A number will be randomly selected and will be 1 or more digits up to this configured value in length. For example, if this value is 5, the suffix will be a number between 00001 and 99999, inclusive.
     */
    numberOfDigits?: pulumi.Input<number>;
    /**
     * A single character to use as a separator from the requested username and a unique suffix that is added when a duplicate username is detected. This value can be a single non-alphanumeric ASCII character.
     */
    separator?: pulumi.Input<string>;
    /**
     * When enabled the user’s password will be validated during login. If the password does not meet the currently configured validation rules the user will be required to change their password.
     */
    strategy?: pulumi.Input<string>;
}

export interface FusionAuthTenantWebauthnConfiguration {
    /**
     * The Bootstrap Workflow configuration.
     */
    bootstrapWorkflow?: pulumi.Input<inputs.FusionAuthTenantWebauthnConfigurationBootstrapWorkflow>;
    /**
     * Determines if debug should be enabled for this tenant to create an event log to assist in debugging WebAuthn errors. Note: A license is required to utilize WebAuthn..
     */
    debug?: pulumi.Input<boolean>;
    /**
     * Whether or not this tenant has WebAuthn enabled globally.. Note: A license is required to utilize WebAuthn..
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The Reauthentication Workflow configuration.
     */
    reauthenticationWorkflow?: pulumi.Input<inputs.FusionAuthTenantWebauthnConfigurationReauthenticationWorkflow>;
    /**
     * The value this tenant will use for the Relying Party Id in WebAuthn ceremonies. Passkeys can only be used to authenticate on sites using the same Relying Party Id they were registered with. This value must match the browser origin or be a registrable domain suffix of the browser origin. For example, if your domain is auth.piedpiper.com, you could use auth.piedpiper.com or piedpiper.com but not m.auth.piedpiper.com or com. When this parameter is omitted, FusionAuth will use null for the Relying Party Id in passkey creation and request options. A null value in the WebAuthn JavaScript API will use the browser origin. Note: A license is required to utilize WebAuthn.
     */
    relyingPartyId?: pulumi.Input<string>;
    /**
     * The value this tenant will use for the Relying Party name in WebAuthn ceremonies. This value may be displayed by browser or operating system dialogs during WebAuthn ceremonies. When this parameter is omitted, FusionAuth will use the tenant.issuer value. Note: A license is required to utilize WebAuthn.
     */
    relyingPartyName?: pulumi.Input<string>;
}

export interface FusionAuthTenantWebauthnConfigurationBootstrapWorkflow {
    /**
     * Determines the authenticator attachment requirement for WebAuthn passkey registration when using the bootstrap workflow. The possible values are: Any, CrossPlatform and Platform. Note: A license is required to utilize WebAuthn and an Enterprise plan is required to utilize WebAuthn cross-platform authenticators..
     */
    authenticatorAttachmentPreference?: pulumi.Input<string>;
    /**
     * Whether or not this tenant has the WebAuthn bootstrap workflow enabled. The bootstrap workflow is used when the user must "bootstrap" the authentication process by identifying themselves prior to the WebAuthn ceremony and can be used to authenticate from a new device using WebAuthn. Note: A license is required to utilize WebAuthn..
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Determines the user verification requirement for WebAuthn passkey registration when using the bootstrap workflow. The possible values are: Discouraged, Preferred and Required. Note: A license is required to utilize WebAuthn..
     */
    userVerificationRequirement?: pulumi.Input<string>;
}

export interface FusionAuthTenantWebauthnConfigurationReauthenticationWorkflow {
    /**
     * Determines the authenticator attachment requirement for WebAuthn passkey registration when using the reauthentication workflow. The possible values are:: Any, CrossPlatform and Platform. Note: A license is required to utilize WebAuthn and an Enterprise plan is required to utilize WebAuthn cross-platform authenticators..
     */
    authenticatorAttachmentPreference?: pulumi.Input<string>;
    /**
     * Whether or not this tenant has the WebAuthn reauthentication workflow enabled. The reauthentication workflow will automatically prompt a user to authenticate using WebAuthn for repeated logins from the same device. Note: A license is required to utilize WebAuthn..
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * Determines the user verification requirement for WebAuthn passkey registration when using the bootstrap workflow. The possible values are: Discouraged, Preferred and Required. Note: A license is required to utilize WebAuthn..
     */
    userVerificationRequirement?: pulumi.Input<string>;
}

export interface FusionAuthUserActionOption {
    /**
     * A mapping of localized names for this User Action Option. The key is the Locale and the value is the name of the User Action Option for that language.
     */
    localizedNames?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The name of this User Action Option.
     */
    name: pulumi.Input<string>;
}

export interface FusionAuthUserTwoFactorMethod {
    /**
     * The algorithm used by the TOTP authenticator. With the current implementation, this will always be HmacSHA1.
     */
    authenticatorAlgorithm?: pulumi.Input<string>;
    /**
     * The length of code generated by the TOTP. With the current implementation, this will always be 6.
     */
    authenticatorCodeLength?: pulumi.Input<number>;
    /**
     * The time-step size in seconds. With the current implementation, this will always be 30.
     */
    authenticatorTimeStep?: pulumi.Input<number>;
    /**
     * The value of the email address for this method.
     */
    email?: pulumi.Input<string>;
    /**
     * The type of this method. There will also be an object with the same value containing additional information about this method.
     */
    method?: pulumi.Input<string>;
    /**
     * The value of the mobile phone for this method.
     */
    mobilePhone?: pulumi.Input<string>;
    /**
     * A base64 encoded secret
     */
    secret?: pulumi.Input<string>;
    /**
     * The unique Id of the method.
     */
    twoFactorMethodId?: pulumi.Input<string>;
}

export interface FusionAuthWebhookEventsEnabled {
    /**
     * When an audit log is created
     */
    auditLogCreate?: pulumi.Input<boolean>;
    /**
     * When an event log is created
     */
    eventLogCreate?: pulumi.Input<boolean>;
    /**
     * When a JWT RSA Public / Private keypair may have been changed
     */
    jwtPublicKeyUpdate?: pulumi.Input<boolean>;
    /**
     * When an access token is refreshed using a refresh token
     */
    jwtRefresh?: pulumi.Input<boolean>;
    /**
     * When a JWT Refresh Token is revoked
     */
    jwtRefreshTokenRevoke?: pulumi.Input<boolean>;
    /**
     * When kickstart has successfully completed
     */
    kickstartSuccess?: pulumi.Input<boolean>;
    /**
     * When a user action is triggered
     */
    userAction?: pulumi.Input<boolean>;
    /**
     * When multiple users are created in bulk (i.e. during an import)
     */
    userBulkCreate?: pulumi.Input<boolean>;
    /**
     * When a user is created
     */
    userCreate?: pulumi.Input<boolean>;
    /**
     * When a user create transaction has completed
     */
    userCreateComplete?: pulumi.Input<boolean>;
    /**
     * When a user is deactivated
     */
    userDeactivate?: pulumi.Input<boolean>;
    /**
     * When a user is deleted
     */
    userDelete?: pulumi.Input<boolean>;
    /**
     * When a user delete transaction has completed
     */
    userDeleteComplete?: pulumi.Input<boolean>;
    /**
     * When a user updates their email address
     */
    userEmailUpdate?: pulumi.Input<boolean>;
    /**
     * When a user verifies their email address
     */
    userEmailVerified?: pulumi.Input<boolean>;
    /**
     * When a user is linked to an identity provider
     */
    userIdentityProviderLink?: pulumi.Input<boolean>;
    /**
     * When a link to an identity provider is removed
     */
    userIdentityProviderUnlink?: pulumi.Input<boolean>;
    /**
     * When a user fails a login request
     */
    userLoginFailed?: pulumi.Input<boolean>;
    /**
     * When a request to create a user with a login Id (email or username) which is already in use has been received
     */
    userLoginIdDuplicateCreate?: pulumi.Input<boolean>;
    /**
     * When a request to update a user and change their login Id (email or username) to one that is already in use has been received
     */
    userLoginIdDuplicateUpdate?: pulumi.Input<boolean>;
    /**
     * When a user begins a login request with a new device
     */
    userLoginNewDevice?: pulumi.Input<boolean>;
    /**
     * When a user completes a login request
     */
    userLoginSuccess?: pulumi.Input<boolean>;
    /**
     * When a user logs in and is considered to be a potential threat
     */
    userLoginSuspicious?: pulumi.Input<boolean>;
    /**
     * When Reactor detects a user is using a potentially breached password (requires an activated license)
     */
    userPasswordBreach?: pulumi.Input<boolean>;
    /**
     * When a forgot password email has been sent to a user
     */
    userPasswordResetSend?: pulumi.Input<boolean>;
    /**
     * When the process to reset a user password has started
     */
    userPasswordResetStart?: pulumi.Input<boolean>;
    /**
     * When a user has successfully reset their password
     */
    userPasswordResetSuccess?: pulumi.Input<boolean>;
    /**
     * When a user has updated their password
     */
    userPasswordUpdate?: pulumi.Input<boolean>;
    /**
     * When a user is reactivated
     */
    userReactivate?: pulumi.Input<boolean>;
    /**
     * When a user registration is created
     */
    userRegistrationCreate?: pulumi.Input<boolean>;
    /**
     * When a user registration create transaction has completed
     */
    userRegistrationCreateComplete?: pulumi.Input<boolean>;
    /**
     * When a user registration is deleted
     */
    userRegistrationDelete?: pulumi.Input<boolean>;
    /**
     * When a user registration delete transaction has completed
     */
    userRegistrationDeleteComplete?: pulumi.Input<boolean>;
    /**
     * When a user registration is updated
     */
    userRegistrationUpdate?: pulumi.Input<boolean>;
    /**
     * When a user registration update transaction has completed
     */
    userRegistrationUpdateComplete?: pulumi.Input<boolean>;
    /**
     * When a user completes registration verification
     */
    userRegistrationVerified?: pulumi.Input<boolean>;
    /**
     * When a user has added a two-factor method
     */
    userTwoFactorMethodAdd?: pulumi.Input<boolean>;
    /**
     * When a user has removed a two-factor method
     */
    userTwoFactorMethodRemove?: pulumi.Input<boolean>;
    /**
     * When a user is updated
     */
    userUpdate?: pulumi.Input<boolean>;
    /**
     * When a user update transaction has completed
     */
    userUpdateComplete?: pulumi.Input<boolean>;
}

export interface FusionAuthWebhookSignatureConfiguration {
    /**
     * Wether or not webhook signing is enabled
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The UUID key used for signing the Webhook
     */
    signingKeyId?: pulumi.Input<string>;
}

export interface GetFormFieldValidator {
    /**
     * Determines if user input should be validated.
     */
    enabled?: boolean;
    /**
     * A regular expression used to validate user input. Must be a valid regular expression pattern.
     */
    expression?: string;
}

export interface GetFormFieldValidatorArgs {
    /**
     * Determines if user input should be validated.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * A regular expression used to validate user input. Must be a valid regular expression pattern.
     */
    expression?: pulumi.Input<string>;
}

export interface GetFormStep {
    /**
     * An ordered list of Form Field Ids assigned to this step.
     */
    fields: string[];
}

export interface GetFormStepArgs {
    /**
     * An ordered list of Form Field Ids assigned to this step.
     */
    fields: pulumi.Input<pulumi.Input<string>[]>;
}
