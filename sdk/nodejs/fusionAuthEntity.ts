// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Entity Resource
 *
 * Entities are arbitrary objects which can be modeled in FusionAuth. Anything which is not a user but might need
 * permissions managed by FusionAuth is a possible entity. Examples might include devices, cars, computers, customers,
 * companies, etc.
 *
 * FusionAuthâ€™s Entity Management has the following major concepts:
 *
 * * Entity Types categorize Entities. An Entity Type could be `Device`, `API` or `Company`.
 * * Permissions are defined on an Entity Type. These are arbitrary strings which can fit the business domain. A Permission
 *   could be `read`, `write`, or `file-lawsuit`.
 * * Entities are instances of a single type. An Entity could be a `nest device`, an `Email API` or `Raviga`.
 * * Entities can have Grants. Grants are relationships between a target Entity and one of two other types: a recipient
 *   Entity or a User. Grants can have zero or more Permissions associated with them.
 *
 * You can use the Client Credentials grant to see if an Entity has permission to access another Entity.
 *
 * [Entity API](https://fusionauth.io/docs/v1/tech/apis/entity-management/entities)
 */
export class FusionAuthEntity extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthEntity resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthEntityState, opts?: pulumi.CustomResourceOptions): FusionAuthEntity {
        return new FusionAuthEntity(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthEntity:FusionAuthEntity';

    /**
     * Returns true if the given object is an instance of FusionAuthEntity.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthEntity {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthEntity.__pulumiType;
    }

    /**
     * The OAuth 2.0 client ID. If you leave this blank on create, the value of the Entity ID will
     * be used. Must be a UUID.
     */
    public readonly clientId!: pulumi.Output<string>;
    /**
     * The OAuth 2.0 client secret. If you leave this blank on create, a secure secret will be
     * generated for you. If you leave this blank during an update, the previous value will be maintained. For both create
     * and update you can provide a value and it will be stored.
     */
    public readonly clientSecret!: pulumi.Output<string>;
    /**
     * An object that can hold any information about the Entity that should be persisted. Please review
     * the limits on data field types as you plan for and build your custom data schema. Must be a JSON serialised string.
     */
    public readonly data!: pulumi.Output<string | undefined>;
    /**
     * The ID to use for the new Entity. If not specified a secure random UUID will be generated.
     */
    public readonly entityId!: pulumi.Output<string>;
    /**
     * The ID of the Entity Type. Types are consulted for permission checks.
     *
     * For more information see:
     * [FusionAuth Entity Management API Overview](https://fusionauth.io/docs/v1/tech/apis/entity-management/)
     */
    public readonly entityTypeId!: pulumi.Output<string>;
    /**
     * A descriptive name for the Entity (i.e. "Raviga" or "Email Service").
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The unique ID of the tenant used to scope this API request.
     */
    public readonly tenantId!: pulumi.Output<string | undefined>;

    /**
     * Create a FusionAuthEntity resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FusionAuthEntityArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthEntityArgs | FusionAuthEntityState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthEntityState | undefined;
            resourceInputs["clientId"] = state ? state.clientId : undefined;
            resourceInputs["clientSecret"] = state ? state.clientSecret : undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["entityId"] = state ? state.entityId : undefined;
            resourceInputs["entityTypeId"] = state ? state.entityTypeId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as FusionAuthEntityArgs | undefined;
            if ((!args || args.entityTypeId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityTypeId'");
            }
            resourceInputs["clientId"] = args ? args.clientId : undefined;
            resourceInputs["clientSecret"] = args?.clientSecret ? pulumi.secret(args.clientSecret) : undefined;
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["entityId"] = args ? args.entityId : undefined;
            resourceInputs["entityTypeId"] = args ? args.entityTypeId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["clientSecret"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(FusionAuthEntity.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthEntity resources.
 */
export interface FusionAuthEntityState {
    /**
     * The OAuth 2.0 client ID. If you leave this blank on create, the value of the Entity ID will
     * be used. Must be a UUID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret. If you leave this blank on create, a secure secret will be
     * generated for you. If you leave this blank during an update, the previous value will be maintained. For both create
     * and update you can provide a value and it will be stored.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * An object that can hold any information about the Entity that should be persisted. Please review
     * the limits on data field types as you plan for and build your custom data schema. Must be a JSON serialised string.
     */
    data?: pulumi.Input<string>;
    /**
     * The ID to use for the new Entity. If not specified a secure random UUID will be generated.
     */
    entityId?: pulumi.Input<string>;
    /**
     * The ID of the Entity Type. Types are consulted for permission checks.
     *
     * For more information see:
     * [FusionAuth Entity Management API Overview](https://fusionauth.io/docs/v1/tech/apis/entity-management/)
     */
    entityTypeId?: pulumi.Input<string>;
    /**
     * A descriptive name for the Entity (i.e. "Raviga" or "Email Service").
     */
    name?: pulumi.Input<string>;
    /**
     * The unique ID of the tenant used to scope this API request.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthEntity resource.
 */
export interface FusionAuthEntityArgs {
    /**
     * The OAuth 2.0 client ID. If you leave this blank on create, the value of the Entity ID will
     * be used. Must be a UUID.
     */
    clientId?: pulumi.Input<string>;
    /**
     * The OAuth 2.0 client secret. If you leave this blank on create, a secure secret will be
     * generated for you. If you leave this blank during an update, the previous value will be maintained. For both create
     * and update you can provide a value and it will be stored.
     */
    clientSecret?: pulumi.Input<string>;
    /**
     * An object that can hold any information about the Entity that should be persisted. Please review
     * the limits on data field types as you plan for and build your custom data schema. Must be a JSON serialised string.
     */
    data?: pulumi.Input<string>;
    /**
     * The ID to use for the new Entity. If not specified a secure random UUID will be generated.
     */
    entityId?: pulumi.Input<string>;
    /**
     * The ID of the Entity Type. Types are consulted for permission checks.
     *
     * For more information see:
     * [FusionAuth Entity Management API Overview](https://fusionauth.io/docs/v1/tech/apis/entity-management/)
     */
    entityTypeId: pulumi.Input<string>;
    /**
     * A descriptive name for the Entity (i.e. "Raviga" or "Email Service").
     */
    name?: pulumi.Input<string>;
    /**
     * The unique ID of the tenant used to scope this API request.
     */
    tenantId?: pulumi.Input<string>;
}
