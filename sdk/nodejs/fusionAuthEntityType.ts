// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Entity Type Resource
 *
 * Entity Types categorize Entities. For example, an Entity Type could be `Device`, `API` or `Company`.
 *
 * [Entity Type API](https://fusionauth.io/docs/v1/tech/apis/entity-management/entity-types/#create-an-entity-type)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const company = new fusionauth.FusionAuthEntityType("company", {
 *     data: JSON.stringify({
 *         createdBy: "jared@fusionauth.io",
 *     }),
 *     jwtConfiguration: {
 *         accessTokenKeyId: "a7516c7c-6234-4021-b0b4-8870c807aeb2",
 *         enabled: true,
 *         timeToLiveInSeconds: 3600,
 *     },
 * });
 * ```
 */
export class FusionAuthEntityType extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthEntityType resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthEntityTypeState, opts?: pulumi.CustomResourceOptions): FusionAuthEntityType {
        return new FusionAuthEntityType(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthEntityType:FusionAuthEntityType';

    /**
     * Returns true if the given object is an instance of FusionAuthEntityType.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthEntityType {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthEntityType.__pulumiType;
    }

    /**
     * An object that can hold any information about the Entity Type that should be persisted. Must be a
     * JSON string.
     */
    public readonly data!: pulumi.Output<string | undefined>;
    /**
     * The ID to use for the new Entity Type. If not specified a secure random UUID will be
     * generated.
     */
    public readonly entityTypeId!: pulumi.Output<string>;
    /**
     * A block to configure JSON Web Token (JWT) options.
     */
    public readonly jwtConfiguration!: pulumi.Output<outputs.FusionAuthEntityTypeJwtConfiguration>;
    /**
     * A descriptive name for the entity type (i.e. `Customer` or `Email_Service`).
     */
    public readonly name!: pulumi.Output<string>;

    /**
     * Create a FusionAuthEntityType resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FusionAuthEntityTypeArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthEntityTypeArgs | FusionAuthEntityTypeState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthEntityTypeState | undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["entityTypeId"] = state ? state.entityTypeId : undefined;
            resourceInputs["jwtConfiguration"] = state ? state.jwtConfiguration : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as FusionAuthEntityTypeArgs | undefined;
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["entityTypeId"] = args ? args.entityTypeId : undefined;
            resourceInputs["jwtConfiguration"] = args ? args.jwtConfiguration : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthEntityType.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthEntityType resources.
 */
export interface FusionAuthEntityTypeState {
    /**
     * An object that can hold any information about the Entity Type that should be persisted. Must be a
     * JSON string.
     */
    data?: pulumi.Input<string>;
    /**
     * The ID to use for the new Entity Type. If not specified a secure random UUID will be
     * generated.
     */
    entityTypeId?: pulumi.Input<string>;
    /**
     * A block to configure JSON Web Token (JWT) options.
     */
    jwtConfiguration?: pulumi.Input<inputs.FusionAuthEntityTypeJwtConfiguration>;
    /**
     * A descriptive name for the entity type (i.e. `Customer` or `Email_Service`).
     */
    name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthEntityType resource.
 */
export interface FusionAuthEntityTypeArgs {
    /**
     * An object that can hold any information about the Entity Type that should be persisted. Must be a
     * JSON string.
     */
    data?: pulumi.Input<string>;
    /**
     * The ID to use for the new Entity Type. If not specified a secure random UUID will be
     * generated.
     */
    entityTypeId?: pulumi.Input<string>;
    /**
     * A block to configure JSON Web Token (JWT) options.
     */
    jwtConfiguration?: pulumi.Input<inputs.FusionAuthEntityTypeJwtConfiguration>;
    /**
     * A descriptive name for the entity type (i.e. `Customer` or `Email_Service`).
     */
    name?: pulumi.Input<string>;
}
