// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Lambda Resource
 *
 * Lambdas are user defined JavaScript functions that may be executed at runtime to perform various functions. Lambdas may be used to customize the claims returned in a JWT, reconcile a SAML v2 response or an OpenID Connect response when using these external identity providers.
 *
 * [Lambdas API](https://fusionauth.io/docs/v1/tech/apis/lambdas)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const preferred_Username = new fusionauth.FusionAuthLambda("preferred Username", {
 *     body: `// Using the user and registration parameters add additional values to the jwt object.
 * function populate(jwt, user, registration) {
 *   jwt.preferred_username = registration.username;
 * }
 *   
 * `,
 *     enabled: true,
 *     type: "JWTPopulate",
 * });
 * ```
 */
export class FusionAuthLambda extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthLambda resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthLambdaState, opts?: pulumi.CustomResourceOptions): FusionAuthLambda {
        return new FusionAuthLambda(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthLambda:FusionAuthLambda';

    /**
     * Returns true if the given object is an instance of FusionAuthLambda.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthLambda {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthLambda.__pulumiType;
    }

    /**
     * The lambda function body, a JavaScript function.
     */
    public readonly body!: pulumi.Output<string>;
    /**
     * Whether or not debug event logging is enabled for this Lambda.
     */
    public readonly debug!: pulumi.Output<boolean | undefined>;
    /**
     * Whether or not this Lambda is enabled.
     *
     * @deprecated Not currently used and may be removed in a future version.
     */
    public readonly enabled!: pulumi.Output<boolean | undefined>;
    /**
     * The JavaScript execution engine for the lambda.
     */
    public readonly engineType!: pulumi.Output<string | undefined>;
    /**
     * The name of the lambda.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The lambda type. The possible values are:
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a FusionAuthLambda resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FusionAuthLambdaArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthLambdaArgs | FusionAuthLambdaState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthLambdaState | undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["debug"] = state ? state.debug : undefined;
            resourceInputs["enabled"] = state ? state.enabled : undefined;
            resourceInputs["engineType"] = state ? state.engineType : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as FusionAuthLambdaArgs | undefined;
            if ((!args || args.body === undefined) && !opts.urn) {
                throw new Error("Missing required property 'body'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["debug"] = args ? args.debug : undefined;
            resourceInputs["enabled"] = args ? args.enabled : undefined;
            resourceInputs["engineType"] = args ? args.engineType : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthLambda.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthLambda resources.
 */
export interface FusionAuthLambdaState {
    /**
     * The lambda function body, a JavaScript function.
     */
    body?: pulumi.Input<string>;
    /**
     * Whether or not debug event logging is enabled for this Lambda.
     */
    debug?: pulumi.Input<boolean>;
    /**
     * Whether or not this Lambda is enabled.
     *
     * @deprecated Not currently used and may be removed in a future version.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The JavaScript execution engine for the lambda.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The name of the lambda.
     */
    name?: pulumi.Input<string>;
    /**
     * The lambda type. The possible values are:
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthLambda resource.
 */
export interface FusionAuthLambdaArgs {
    /**
     * The lambda function body, a JavaScript function.
     */
    body: pulumi.Input<string>;
    /**
     * Whether or not debug event logging is enabled for this Lambda.
     */
    debug?: pulumi.Input<boolean>;
    /**
     * Whether or not this Lambda is enabled.
     *
     * @deprecated Not currently used and may be removed in a future version.
     */
    enabled?: pulumi.Input<boolean>;
    /**
     * The JavaScript execution engine for the lambda.
     */
    engineType?: pulumi.Input<string>;
    /**
     * The name of the lambda.
     */
    name?: pulumi.Input<string>;
    /**
     * The lambda type. The possible values are:
     */
    type: pulumi.Input<string>;
}
