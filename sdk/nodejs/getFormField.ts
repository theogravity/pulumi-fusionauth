// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Form Field Resource
 *
 * A FusionAuth Form Field is an object that can be customized to receive input within a FusionAuth [Form](https://fusionauth.io/docs/v1/tech/apis/forms).
 *
 * [Form Field API](https://fusionauth.io/docs/v1/tech/apis/form-fields)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "@pulumi/fusionauth";
 *
 * const default = fusionauth.getFormField({
 *     name: "Email",
 * });
 * ```
 */
export function getFormField(args?: GetFormFieldArgs, opts?: pulumi.InvokeOptions): Promise<GetFormFieldResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("fusionauth:index/getFormField:getFormField", {
        "confirm": args.confirm,
        "consentId": args.consentId,
        "control": args.control,
        "data": args.data,
        "description": args.description,
        "formFieldId": args.formFieldId,
        "key": args.key,
        "name": args.name,
        "options": args.options,
        "required": args.required,
        "type": args.type,
        "validator": args.validator,
    }, opts);
}

/**
 * A collection of arguments for invoking getFormField.
 */
export interface GetFormFieldArgs {
    /**
     * Determines if the user input should be confirmed by requiring the value to be entered twice.
     * - consentId
     * - control
     */
    confirm?: boolean;
    consentId?: string;
    control?: string;
    /**
     * An object that can hold any information about the Form Field that should be persisted.
     * - description
     * - key
     */
    data?: {[key: string]: any};
    description?: string;
    /**
     * The unique id of the Form Field. Either `formFieldId` or `name` must be specified.
     */
    formFieldId?: string;
    key?: string;
    /**
     * The name of the Form field. Either `formFieldId` or `name` must be specified.
     */
    name?: string;
    /**
     * A list of options that are applied to checkbox, radio, or select controls.
     */
    options?: string[];
    /**
     * Determines if a value is required to complete the form.
     */
    required?: boolean;
    /**
     * The form field type. The possible values are:
     */
    type?: string;
    validator?: inputs.GetFormFieldValidator;
}

/**
 * A collection of values returned by getFormField.
 */
export interface GetFormFieldResult {
    /**
     * Determines if the user input should be confirmed by requiring the value to be entered twice.
     * - consentId
     * - control
     */
    readonly confirm?: boolean;
    readonly consentId?: string;
    readonly control: string;
    /**
     * An object that can hold any information about the Form Field that should be persisted.
     * - description
     * - key
     */
    readonly data?: {[key: string]: any};
    readonly description?: string;
    readonly formFieldId: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly key?: string;
    /**
     * The unique name of the Form Field.
     */
    readonly name?: string;
    /**
     * A list of options that are applied to checkbox, radio, or select controls.
     */
    readonly options?: string[];
    /**
     * Determines if a value is required to complete the form.
     */
    readonly required?: boolean;
    /**
     * The form field type. The possible values are:
     */
    readonly type?: string;
    readonly validator: outputs.GetFormFieldValidator;
}
/**
 * ## # Form Field Resource
 *
 * A FusionAuth Form Field is an object that can be customized to receive input within a FusionAuth [Form](https://fusionauth.io/docs/v1/tech/apis/forms).
 *
 * [Form Field API](https://fusionauth.io/docs/v1/tech/apis/form-fields)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "@pulumi/fusionauth";
 *
 * const default = fusionauth.getFormField({
 *     name: "Email",
 * });
 * ```
 */
export function getFormFieldOutput(args?: GetFormFieldOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetFormFieldResult> {
    return pulumi.output(args).apply((a: any) => getFormField(a, opts))
}

/**
 * A collection of arguments for invoking getFormField.
 */
export interface GetFormFieldOutputArgs {
    /**
     * Determines if the user input should be confirmed by requiring the value to be entered twice.
     * - consentId
     * - control
     */
    confirm?: pulumi.Input<boolean>;
    consentId?: pulumi.Input<string>;
    control?: pulumi.Input<string>;
    /**
     * An object that can hold any information about the Form Field that should be persisted.
     * - description
     * - key
     */
    data?: pulumi.Input<{[key: string]: any}>;
    description?: pulumi.Input<string>;
    /**
     * The unique id of the Form Field. Either `formFieldId` or `name` must be specified.
     */
    formFieldId?: pulumi.Input<string>;
    key?: pulumi.Input<string>;
    /**
     * The name of the Form field. Either `formFieldId` or `name` must be specified.
     */
    name?: pulumi.Input<string>;
    /**
     * A list of options that are applied to checkbox, radio, or select controls.
     */
    options?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Determines if a value is required to complete the form.
     */
    required?: pulumi.Input<boolean>;
    /**
     * The form field type. The possible values are:
     */
    type?: pulumi.Input<string>;
    validator?: pulumi.Input<inputs.GetFormFieldValidatorArgs>;
}
