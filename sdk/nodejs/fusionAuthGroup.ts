// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## # Group Resource
 *
 * A FusionAuth Group is a named object that optionally contains one to many Application Roles.
 *
 * When a Group does not contain any Application Roles it can still be utilized to logically associate users. Assigning Application Roles to a group allow it to be used to dynamically manage Role assignment to registered Users. In this second scenario as long as a User is registered to an Application the Group membership will allow them to inherit the corresponding Roles from the Group.
 *
 * [Groups API](https://fusionauth.io/docs/v1/tech/apis/groups)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const myGroup = new fusionauth.FusionAuthGroup("myGroup", {
 *     tenantId: fusionauth_tenant.my_tenant.id,
 *     roleIds: [fusionauth_application_role.admins.id],
 * });
 * ```
 */
export class FusionAuthGroup extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthGroupState, opts?: pulumi.CustomResourceOptions): FusionAuthGroup {
        return new FusionAuthGroup(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthGroup:FusionAuthGroup';

    /**
     * Returns true if the given object is an instance of FusionAuthGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthGroup {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthGroup.__pulumiType;
    }

    /**
     * An object that can hold any information about the Group that should be persisted.
     */
    public readonly data!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The Id to use for the new Group. If not specified a secure random UUID will be generated.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * The name of the Group.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The Application Roles to assign to this group.
     */
    public readonly roleIds!: pulumi.Output<string[] | undefined>;
    /**
     * The unique Id of the tenant used to scope this API request.
     */
    public readonly tenantId!: pulumi.Output<string>;

    /**
     * Create a FusionAuthGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FusionAuthGroupArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthGroupArgs | FusionAuthGroupState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthGroupState | undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["roleIds"] = state ? state.roleIds : undefined;
            resourceInputs["tenantId"] = state ? state.tenantId : undefined;
        } else {
            const args = argsOrState as FusionAuthGroupArgs | undefined;
            if ((!args || args.tenantId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tenantId'");
            }
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["roleIds"] = args ? args.roleIds : undefined;
            resourceInputs["tenantId"] = args ? args.tenantId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthGroup.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthGroup resources.
 */
export interface FusionAuthGroupState {
    /**
     * An object that can hold any information about the Group that should be persisted.
     */
    data?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Id to use for the new Group. If not specified a secure random UUID will be generated.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the Group.
     */
    name?: pulumi.Input<string>;
    /**
     * The Application Roles to assign to this group.
     */
    roleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique Id of the tenant used to scope this API request.
     */
    tenantId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthGroup resource.
 */
export interface FusionAuthGroupArgs {
    /**
     * An object that can hold any information about the Group that should be persisted.
     */
    data?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Id to use for the new Group. If not specified a secure random UUID will be generated.
     */
    groupId?: pulumi.Input<string>;
    /**
     * The name of the Group.
     */
    name?: pulumi.Input<string>;
    /**
     * The Application Roles to assign to this group.
     */
    roleIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The unique Id of the tenant used to scope this API request.
     */
    tenantId: pulumi.Input<string>;
}
