// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # System Configuration Resource
 *
 * A registration is the association between a User and an Application that they log into.
 *
 * [System Configuration API](https://fusionauth.io/docs/v1/tech/apis/system)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const example = new fusionauth.FusionAuthSystemConfiguration("example", {
 *     auditLogConfiguration: {
 *         "delete": {
 *             enabled: true,
 *             numberOfDaysToRetain: 367,
 *         },
 *     },
 *     corsConfiguration: {
 *         allowedMethods: [
 *             "POST",
 *             "PUT",
 *         ],
 *     },
 * });
 * ```
 */
export class FusionAuthSystemConfiguration extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthSystemConfiguration resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthSystemConfigurationState, opts?: pulumi.CustomResourceOptions): FusionAuthSystemConfiguration {
        return new FusionAuthSystemConfiguration(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthSystemConfiguration:FusionAuthSystemConfiguration';

    /**
     * Returns true if the given object is an instance of FusionAuthSystemConfiguration.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthSystemConfiguration {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthSystemConfiguration.__pulumiType;
    }

    public readonly auditLogConfiguration!: pulumi.Output<outputs.FusionAuthSystemConfigurationAuditLogConfiguration>;
    public readonly corsConfiguration!: pulumi.Output<outputs.FusionAuthSystemConfigurationCorsConfiguration>;
    public readonly eventLogConfiguration!: pulumi.Output<outputs.FusionAuthSystemConfigurationEventLogConfiguration>;
    public readonly loginRecordConfiguration!: pulumi.Output<outputs.FusionAuthSystemConfigurationLoginRecordConfiguration>;
    /**
     * The time zone used to adjust the stored UTC time when generating reports. Since reports are usually rolled up hourly, this timezone will be used for demarcating the hours.
     */
    public readonly reportTimezone!: pulumi.Output<string | undefined>;
    public readonly uiConfiguration!: pulumi.Output<outputs.FusionAuthSystemConfigurationUiConfiguration>;
    public readonly webhookEventLogConfiguration!: pulumi.Output<outputs.FusionAuthSystemConfigurationWebhookEventLogConfiguration>;

    /**
     * Create a FusionAuthSystemConfiguration resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FusionAuthSystemConfigurationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthSystemConfigurationArgs | FusionAuthSystemConfigurationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthSystemConfigurationState | undefined;
            resourceInputs["auditLogConfiguration"] = state ? state.auditLogConfiguration : undefined;
            resourceInputs["corsConfiguration"] = state ? state.corsConfiguration : undefined;
            resourceInputs["eventLogConfiguration"] = state ? state.eventLogConfiguration : undefined;
            resourceInputs["loginRecordConfiguration"] = state ? state.loginRecordConfiguration : undefined;
            resourceInputs["reportTimezone"] = state ? state.reportTimezone : undefined;
            resourceInputs["uiConfiguration"] = state ? state.uiConfiguration : undefined;
            resourceInputs["webhookEventLogConfiguration"] = state ? state.webhookEventLogConfiguration : undefined;
        } else {
            const args = argsOrState as FusionAuthSystemConfigurationArgs | undefined;
            resourceInputs["auditLogConfiguration"] = args ? args.auditLogConfiguration : undefined;
            resourceInputs["corsConfiguration"] = args ? args.corsConfiguration : undefined;
            resourceInputs["eventLogConfiguration"] = args ? args.eventLogConfiguration : undefined;
            resourceInputs["loginRecordConfiguration"] = args ? args.loginRecordConfiguration : undefined;
            resourceInputs["reportTimezone"] = args ? args.reportTimezone : undefined;
            resourceInputs["uiConfiguration"] = args ? args.uiConfiguration : undefined;
            resourceInputs["webhookEventLogConfiguration"] = args ? args.webhookEventLogConfiguration : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthSystemConfiguration.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthSystemConfiguration resources.
 */
export interface FusionAuthSystemConfigurationState {
    auditLogConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationAuditLogConfiguration>;
    corsConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationCorsConfiguration>;
    eventLogConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationEventLogConfiguration>;
    loginRecordConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationLoginRecordConfiguration>;
    /**
     * The time zone used to adjust the stored UTC time when generating reports. Since reports are usually rolled up hourly, this timezone will be used for demarcating the hours.
     */
    reportTimezone?: pulumi.Input<string>;
    uiConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationUiConfiguration>;
    webhookEventLogConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationWebhookEventLogConfiguration>;
}

/**
 * The set of arguments for constructing a FusionAuthSystemConfiguration resource.
 */
export interface FusionAuthSystemConfigurationArgs {
    auditLogConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationAuditLogConfiguration>;
    corsConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationCorsConfiguration>;
    eventLogConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationEventLogConfiguration>;
    loginRecordConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationLoginRecordConfiguration>;
    /**
     * The time zone used to adjust the stored UTC time when generating reports. Since reports are usually rolled up hourly, this timezone will be used for demarcating the hours.
     */
    reportTimezone?: pulumi.Input<string>;
    uiConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationUiConfiguration>;
    webhookEventLogConfiguration?: pulumi.Input<inputs.FusionAuthSystemConfigurationWebhookEventLogConfiguration>;
}
