// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # Form Resource
 *
 * A FusionAuth Form is a customizable object that contains one-to-many ordered steps. Each step is comprised of one or more Form Fields.
 *
 * [Form API](https://fusionauth.io/docs/v1/tech/apis/forms/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const form = new fusionauth.FusionAuthForm("form", {
 *     data: {
 *         description: "This form customizes the registration experience.",
 *     },
 *     steps: [
 *         {
 *             fields: ["91909721-7d4f-b110-8f21-cfdee2a1edb8"],
 *         },
 *         {
 *             fields: [
 *                 "8ed89a31-c325-3156-72ed-6e89183af917",
 *                 "a977cfd4-a9ed-c4cf-650f-f4539268ac38",
 *             ],
 *         },
 *     ],
 * });
 * ```
 */
export class FusionAuthForm extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthForm resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthFormState, opts?: pulumi.CustomResourceOptions): FusionAuthForm {
        return new FusionAuthForm(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthForm:FusionAuthForm';

    /**
     * Returns true if the given object is an instance of FusionAuthForm.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthForm {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthForm.__pulumiType;
    }

    /**
     * An object that can hold any information about the Form Field that should be persisted.
     */
    public readonly data!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The Id to use for the new Form. If not specified a secure random UUID will be generated.
     */
    public readonly formId!: pulumi.Output<string | undefined>;
    /**
     * The unique name of the Form Field.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * An ordered list of objects containing one or more Form Fields. A Form must have at least one step defined.
     */
    public readonly steps!: pulumi.Output<outputs.FusionAuthFormStep[]>;
    /**
     * The type of form being created, a form type cannot be changed after the form has been created.
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a FusionAuthForm resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FusionAuthFormArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthFormArgs | FusionAuthFormState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthFormState | undefined;
            resourceInputs["data"] = state ? state.data : undefined;
            resourceInputs["formId"] = state ? state.formId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["steps"] = state ? state.steps : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as FusionAuthFormArgs | undefined;
            if ((!args || args.steps === undefined) && !opts.urn) {
                throw new Error("Missing required property 'steps'");
            }
            resourceInputs["data"] = args ? args.data : undefined;
            resourceInputs["formId"] = args ? args.formId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["steps"] = args ? args.steps : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthForm.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthForm resources.
 */
export interface FusionAuthFormState {
    /**
     * An object that can hold any information about the Form Field that should be persisted.
     */
    data?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Id to use for the new Form. If not specified a secure random UUID will be generated.
     */
    formId?: pulumi.Input<string>;
    /**
     * The unique name of the Form Field.
     */
    name?: pulumi.Input<string>;
    /**
     * An ordered list of objects containing one or more Form Fields. A Form must have at least one step defined.
     */
    steps?: pulumi.Input<pulumi.Input<inputs.FusionAuthFormStep>[]>;
    /**
     * The type of form being created, a form type cannot be changed after the form has been created.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FusionAuthForm resource.
 */
export interface FusionAuthFormArgs {
    /**
     * An object that can hold any information about the Form Field that should be persisted.
     */
    data?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Id to use for the new Form. If not specified a secure random UUID will be generated.
     */
    formId?: pulumi.Input<string>;
    /**
     * The unique name of the Form Field.
     */
    name?: pulumi.Input<string>;
    /**
     * An ordered list of objects containing one or more Form Fields. A Form must have at least one step defined.
     */
    steps: pulumi.Input<pulumi.Input<inputs.FusionAuthFormStep>[]>;
    /**
     * The type of form being created, a form type cannot be changed after the form has been created.
     */
    type?: pulumi.Input<string>;
}
