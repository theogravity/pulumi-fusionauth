// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * ## # User Action Resource
 *
 * [User Actions API](https://fusionauth.io/docs/v1/tech/apis/user-actions/)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as fusionauth from "pulumi-fusionauth";
 *
 * const example = new fusionauth.FusionAuthUserAction("example", {
 *     preventLogin: true,
 *     temporal: true,
 * });
 * ```
 */
export class FusionAuthUserAction extends pulumi.CustomResource {
    /**
     * Get an existing FusionAuthUserAction resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FusionAuthUserActionState, opts?: pulumi.CustomResourceOptions): FusionAuthUserAction {
        return new FusionAuthUserAction(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'fusionauth:index/fusionAuthUserAction:FusionAuthUserAction';

    /**
     * Returns true if the given object is an instance of FusionAuthUserAction.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FusionAuthUserAction {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FusionAuthUserAction.__pulumiType;
    }

    /**
     * The Id of the Email Template that is used when User Actions are canceled.
     */
    public readonly cancelEmailTemplateId!: pulumi.Output<string | undefined>;
    /**
     * The Id of the Email Template that is used when User Actions expired automatically (end).
     */
    public readonly endEmailTemplateId!: pulumi.Output<string | undefined>;
    /**
     * Whether to include the email information in the JSON that is sent to the Webhook when a user action is taken.
     */
    public readonly includeEmailInEventJson!: pulumi.Output<boolean | undefined>;
    /**
     * A mapping of localized names for this User Action. The key is the Locale and the value is the name of the User Action for that language.
     */
    public readonly localizedNames!: pulumi.Output<{[key: string]: any} | undefined>;
    /**
     * The Id of the Email Template that is used when User Actions are modified.
     */
    public readonly modifyEmailTemplateId!: pulumi.Output<string | undefined>;
    /**
     * The name of this User Action.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The list of User Action Options.
     */
    public readonly options!: pulumi.Output<outputs.FusionAuthUserActionOption[] | undefined>;
    /**
     * Whether or not this User Action will prevent user login. When this value is set to true the action must also be marked as a time based action. See `temporal`.
     */
    public readonly preventLogin!: pulumi.Output<boolean | undefined>;
    /**
     * Whether or not FusionAuth will send events to any registered Webhooks when this User Action expires.
     */
    public readonly sendEndEvent!: pulumi.Output<boolean | undefined>;
    /**
     * The Id of the Email Template that is used when User Actions are started (created).
     */
    public readonly startEmailTemplateId!: pulumi.Output<string | undefined>;
    /**
     * Whether or not this User Action is time-based (temporal).
     */
    public readonly temporal!: pulumi.Output<boolean | undefined>;
    /**
     * The id of this User Action.
     */
    public readonly userActionId!: pulumi.Output<string>;
    /**
     * Whether or not email is enabled for this User Action.
     */
    public readonly userEmailingEnabled!: pulumi.Output<boolean | undefined>;
    /**
     * Whether or not user notifications are enabled for this User Action.
     */
    public readonly userNotificationsEnabled!: pulumi.Output<boolean | undefined>;

    /**
     * Create a FusionAuthUserAction resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FusionAuthUserActionArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FusionAuthUserActionArgs | FusionAuthUserActionState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FusionAuthUserActionState | undefined;
            resourceInputs["cancelEmailTemplateId"] = state ? state.cancelEmailTemplateId : undefined;
            resourceInputs["endEmailTemplateId"] = state ? state.endEmailTemplateId : undefined;
            resourceInputs["includeEmailInEventJson"] = state ? state.includeEmailInEventJson : undefined;
            resourceInputs["localizedNames"] = state ? state.localizedNames : undefined;
            resourceInputs["modifyEmailTemplateId"] = state ? state.modifyEmailTemplateId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["options"] = state ? state.options : undefined;
            resourceInputs["preventLogin"] = state ? state.preventLogin : undefined;
            resourceInputs["sendEndEvent"] = state ? state.sendEndEvent : undefined;
            resourceInputs["startEmailTemplateId"] = state ? state.startEmailTemplateId : undefined;
            resourceInputs["temporal"] = state ? state.temporal : undefined;
            resourceInputs["userActionId"] = state ? state.userActionId : undefined;
            resourceInputs["userEmailingEnabled"] = state ? state.userEmailingEnabled : undefined;
            resourceInputs["userNotificationsEnabled"] = state ? state.userNotificationsEnabled : undefined;
        } else {
            const args = argsOrState as FusionAuthUserActionArgs | undefined;
            resourceInputs["cancelEmailTemplateId"] = args ? args.cancelEmailTemplateId : undefined;
            resourceInputs["endEmailTemplateId"] = args ? args.endEmailTemplateId : undefined;
            resourceInputs["includeEmailInEventJson"] = args ? args.includeEmailInEventJson : undefined;
            resourceInputs["localizedNames"] = args ? args.localizedNames : undefined;
            resourceInputs["modifyEmailTemplateId"] = args ? args.modifyEmailTemplateId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["options"] = args ? args.options : undefined;
            resourceInputs["preventLogin"] = args ? args.preventLogin : undefined;
            resourceInputs["sendEndEvent"] = args ? args.sendEndEvent : undefined;
            resourceInputs["startEmailTemplateId"] = args ? args.startEmailTemplateId : undefined;
            resourceInputs["temporal"] = args ? args.temporal : undefined;
            resourceInputs["userActionId"] = args ? args.userActionId : undefined;
            resourceInputs["userEmailingEnabled"] = args ? args.userEmailingEnabled : undefined;
            resourceInputs["userNotificationsEnabled"] = args ? args.userNotificationsEnabled : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FusionAuthUserAction.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FusionAuthUserAction resources.
 */
export interface FusionAuthUserActionState {
    /**
     * The Id of the Email Template that is used when User Actions are canceled.
     */
    cancelEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when User Actions expired automatically (end).
     */
    endEmailTemplateId?: pulumi.Input<string>;
    /**
     * Whether to include the email information in the JSON that is sent to the Webhook when a user action is taken.
     */
    includeEmailInEventJson?: pulumi.Input<boolean>;
    /**
     * A mapping of localized names for this User Action. The key is the Locale and the value is the name of the User Action for that language.
     */
    localizedNames?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Id of the Email Template that is used when User Actions are modified.
     */
    modifyEmailTemplateId?: pulumi.Input<string>;
    /**
     * The name of this User Action.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of User Action Options.
     */
    options?: pulumi.Input<pulumi.Input<inputs.FusionAuthUserActionOption>[]>;
    /**
     * Whether or not this User Action will prevent user login. When this value is set to true the action must also be marked as a time based action. See `temporal`.
     */
    preventLogin?: pulumi.Input<boolean>;
    /**
     * Whether or not FusionAuth will send events to any registered Webhooks when this User Action expires.
     */
    sendEndEvent?: pulumi.Input<boolean>;
    /**
     * The Id of the Email Template that is used when User Actions are started (created).
     */
    startEmailTemplateId?: pulumi.Input<string>;
    /**
     * Whether or not this User Action is time-based (temporal).
     */
    temporal?: pulumi.Input<boolean>;
    /**
     * The id of this User Action.
     */
    userActionId?: pulumi.Input<string>;
    /**
     * Whether or not email is enabled for this User Action.
     */
    userEmailingEnabled?: pulumi.Input<boolean>;
    /**
     * Whether or not user notifications are enabled for this User Action.
     */
    userNotificationsEnabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a FusionAuthUserAction resource.
 */
export interface FusionAuthUserActionArgs {
    /**
     * The Id of the Email Template that is used when User Actions are canceled.
     */
    cancelEmailTemplateId?: pulumi.Input<string>;
    /**
     * The Id of the Email Template that is used when User Actions expired automatically (end).
     */
    endEmailTemplateId?: pulumi.Input<string>;
    /**
     * Whether to include the email information in the JSON that is sent to the Webhook when a user action is taken.
     */
    includeEmailInEventJson?: pulumi.Input<boolean>;
    /**
     * A mapping of localized names for this User Action. The key is the Locale and the value is the name of the User Action for that language.
     */
    localizedNames?: pulumi.Input<{[key: string]: any}>;
    /**
     * The Id of the Email Template that is used when User Actions are modified.
     */
    modifyEmailTemplateId?: pulumi.Input<string>;
    /**
     * The name of this User Action.
     */
    name?: pulumi.Input<string>;
    /**
     * The list of User Action Options.
     */
    options?: pulumi.Input<pulumi.Input<inputs.FusionAuthUserActionOption>[]>;
    /**
     * Whether or not this User Action will prevent user login. When this value is set to true the action must also be marked as a time based action. See `temporal`.
     */
    preventLogin?: pulumi.Input<boolean>;
    /**
     * Whether or not FusionAuth will send events to any registered Webhooks when this User Action expires.
     */
    sendEndEvent?: pulumi.Input<boolean>;
    /**
     * The Id of the Email Template that is used when User Actions are started (created).
     */
    startEmailTemplateId?: pulumi.Input<string>;
    /**
     * Whether or not this User Action is time-based (temporal).
     */
    temporal?: pulumi.Input<boolean>;
    /**
     * The id of this User Action.
     */
    userActionId?: pulumi.Input<string>;
    /**
     * Whether or not email is enabled for this User Action.
     */
    userEmailingEnabled?: pulumi.Input<boolean>;
    /**
     * Whether or not user notifications are enabled for this User Action.
     */
    userNotificationsEnabled?: pulumi.Input<boolean>;
}
